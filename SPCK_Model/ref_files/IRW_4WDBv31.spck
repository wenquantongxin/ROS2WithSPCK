!file.version=3.5! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20210000
version.desc   = ''
version.build  = 101

!**********************************************************************
!  Global parameters
!**********************************************************************
searchpath (              1                                       ) = '../database'
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = 9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = { 20 km/h }             ! Vehicle initial velocity
vehicle.applystartvel                                               = 1                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = $Trk_Track              ! Active Track element
prop3d.bg.base.color.r                                              = 2.15000000000000000E+02 ! Background color (red component)
prop3d.bg.base.color.g                                              = 2.15000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.15000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = -1.82453060150146484E+00 ! Position
view.pos (                2 ,       $V_WorkingView                ) = 2.66024971008300781E+00 ! Position
view.pos (                3 ,       $V_WorkingView                ) = -2.44734072685241699E+00 ! Position
view.orient (             1 ,       $V_WorkingView                ) = 7.97838628292083740E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = 2.99980849027633667E-01 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = -2.82037019729614258E-01 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = -4.40363764762878418E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 1.02660372853279114E-01 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 1.02660369873046875E+02 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 1                       ! Camera is moved
view.motion.ref (                   $V_WorkingView                ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_WorkingView                ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_WorkingView                ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_WorkingView                ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_WorkingView                ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_WorkingView                ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_WorkingView                ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_WorkingView                ) = -1.82453060150146484E+00 ! Relative position
view.motion.pos (         2 ,       $V_WorkingView                ) = 2.66024971008300781E+00 ! Relative position
view.motion.pos (         3 ,       $V_WorkingView                ) = -2.44734072685241699E+00 ! Relative position
view.motion.orient (      1 ,       $V_WorkingView                ) = 7.97838583456575545E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_WorkingView                ) = 2.99980832169846445E-01 ! Relative orientation
view.motion.orient (      3 ,       $V_WorkingView                ) = -2.82037003880202308E-01 ! Relative orientation
view.motion.orient (      4 ,       $V_WorkingView                ) = -4.40363740016103122E-01 ! Relative orientation

view.type (                         $V_Perspective_Moved          ) = 0                       ! Projection type
view.pos (                1 ,       $V_Perspective_Moved          ) = -1.14629710518056527E+00 ! Position
view.pos (                2 ,       $V_Perspective_Moved          ) = 5.40825615142239258E-01 ! Position
view.pos (                3 ,       $V_Perspective_Moved          ) = -3.16154684855064261E-01 ! Position
view.orient (             1 ,       $V_Perspective_Moved          ) = -6.13824307918548584E-01 ! Orientation
view.orient (             2 ,       $V_Perspective_Moved          ) = -4.47064399719238281E-01 ! Orientation
view.orient (             3 ,       $V_Perspective_Moved          ) = 3.80551487207412720E-01 ! Orientation
view.orient (             4 ,       $V_Perspective_Moved          ) = 5.27762949466705322E-01 ! Orientation
view.angle (                        $V_Perspective_Moved          ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Perspective_Moved          ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Perspective_Moved          ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Perspective_Moved          ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Perspective_Moved          ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Perspective_Moved          ) = 1                       ! Camera is moved
view.motion.ref (                   $V_Perspective_Moved          ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_Perspective_Moved          ) = -1.14629710518056527E+00 ! Relative position
view.motion.pos (         2 ,       $V_Perspective_Moved          ) = 5.40825615142239258E-01 ! Relative position
view.motion.pos (         3 ,       $V_Perspective_Moved          ) = -3.16154684855064261E-01 ! Relative position
view.motion.orient (      1 ,       $V_Perspective_Moved          ) = 6.13824300634425168E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_Perspective_Moved          ) = 4.47064394414019628E-01 ! Relative orientation
view.motion.orient (      3 ,       $V_Perspective_Moved          ) = -3.80551482691488641E-01 ! Relative orientation
view.motion.orient (      4 ,       $V_Perspective_Moved          ) = -5.27762943203853974E-01 ! Relative orientation

view.type (                         $V_Side_Orthographic_Moved    ) = 1                       ! Projection type
view.pos (                1 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Side_Orthographic_Moved    ) = 5.99845588207244873E-01 ! Position
view.pos (                3 ,       $V_Side_Orthographic_Moved    ) = -1.02445483207702637E-08 ! Position
view.orient (             1 ,       $V_Side_Orthographic_Moved    ) = 7.07106888294219971E-01 ! Orientation
view.orient (             2 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Side_Orthographic_Moved    ) = -7.07106709480285645E-01 ! Orientation
view.height (                       $V_Side_Orthographic_Moved    ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Side_Orthographic_Moved    ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Side_Orthographic_Moved    ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Side_Orthographic_Moved    ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Side_Orthographic_Moved    ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Side_Orthographic_Moved    ) = 1                       ! Camera is moved
view.motion.ref (                   $V_Side_Orthographic_Moved    ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Relative position
view.motion.pos (         2 ,       $V_Side_Orthographic_Moved    ) = 5.99845588207244873E-01 ! Relative position
view.motion.pos (         3 ,       $V_Side_Orthographic_Moved    ) = -1.02445483207702637E-08 ! Relative position
view.motion.orient (      1 ,       $V_Side_Orthographic_Moved    ) = 7.07106870593506742E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Relative orientation
view.motion.orient (      3 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Relative orientation
view.motion.orient (      4 ,       $V_Side_Orthographic_Moved    ) = -7.07106691779576968E-01 ! Relative orientation

view.type (                         $V_Top_Orthographic_Moved     ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top_Orthographic_Moved     ) = -5.06639480590820312E-07 ! Position
view.pos (                3 ,       $V_Top_Orthographic_Moved     ) = -9.67873191833496094E+00 ! Position
view.orient (             1 ,       $V_Top_Orthographic_Moved     ) = 1.00000000000000000E+00 ! Orientation
view.orient (             2 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top_Orthographic_Moved     ) = 1.05239450931549072E-07 ! Orientation
view.height (                       $V_Top_Orthographic_Moved     ) = 2.27604870733313946E+00 ! View height
view.fclip.auto (                   $V_Top_Orthographic_Moved     ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top_Orthographic_Moved     ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top_Orthographic_Moved     ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top_Orthographic_Moved     ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top_Orthographic_Moved     ) = 1                       ! Camera is moved
view.motion.ref (                   $V_Top_Orthographic_Moved     ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Relative position
view.motion.pos (         2 ,       $V_Top_Orthographic_Moved     ) = -5.06639480590820312E-07 ! Relative position
view.motion.pos (         3 ,       $V_Top_Orthographic_Moved     ) = -9.67873191833496094E+00 ! Relative position
view.motion.orient (      1 ,       $V_Top_Orthographic_Moved     ) = 9.99999999999994449E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Relative orientation
view.motion.orient (      3 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Relative orientation
view.motion.orient (      4 ,       $V_Top_Orthographic_Moved     ) = 1.05239450931548490E-07 ! Relative orientation

viewgroup.begin (                   $G_RWP_IRW_Left               )                           ! $G_RWP_IRW_Left
   view.type (                      $V_Exterior                   ) = 0                       ! Projection type
   view.pos (             1 ,       $V_Exterior                   ) = -2.10050821304321289E+00 ! Position
   view.pos (             2 ,       $V_Exterior                   ) = -1.85263907909393311E+00 ! Position
   view.pos (             3 ,       $V_Exterior                   ) = -1.04977440834045410E+00 ! Position
   view.orient (          1 ,       $V_Exterior                   ) = 3.71832658193918919E-01 ! Orientation
   view.orient (          2 ,       $V_Exterior                   ) = 6.74023668647723118E-01 ! Orientation
   view.orient (          3 ,       $V_Exterior                   ) = -5.57195170749716917E-01 ! Orientation
   view.orient (          4 ,       $V_Exterior                   ) = -3.11393818333477013E-01 ! Orientation
   view.angle (                     $V_Exterior                   ) = 6.10865238198015303E-01 ! Lens angle
   view.fclip.auto (                $V_Exterior                   ) = 1                       ! Front clipping plane auto
   view.bclip.auto (                $V_Exterior                   ) = 1                       ! Back clipping plane auto
   view.fclip.value (               $V_Exterior                   ) = 1.01930476725101471E-01 ! Front clipping plane value
   view.bclip.value (               $V_Exterior                   ) = 1.01930473327636719E+02 ! Back clipping plane value
   view.rotcenter.type (            $V_Exterior                   ) = 1                       ! Rotation center type
   view.rotcenter.ele (             $V_Exterior                   ) = $M_R_Isys_ProfRef_RWP_IRW_Left ! Rotation center element
   view.rotcenter.adjust (          $V_Exterior                   ) = 0                       ! Adjust rotation center
   view.motion.active (             $V_Exterior                   ) = 1                       ! Camera is moved
   view.motion.ref (                $V_Exterior                   ) = $M_Isys_TrackFrame_RWP_IRW_Left ! Marker
   view.motion.x (                  $V_Exterior                   ) = 1                       ! Moved camera direction x
   view.motion.y (                  $V_Exterior                   ) = 1                       ! Moved camera direction y
   view.motion.z (                  $V_Exterior                   ) = 1                       ! Moved camera direction z
   view.motion.al (                 $V_Exterior                   ) = 1                       ! Moved camera direction alpha
   view.motion.be (                 $V_Exterior                   ) = 1                       ! Moved camera direction beta
   view.motion.ga (                 $V_Exterior                   ) = 1                       ! Moved camera direction gamma
   view.motion.pos (      1 ,       $V_Exterior                   ) = -1.29000000000000004E+00 ! Relative position
   view.motion.pos (      2 ,       $V_Exterior                   ) = -1.86625000000000019E+00 ! Relative position
   view.motion.pos (      3 ,       $V_Exterior                   ) = -4.29999999999999993E-01 ! Relative position
   view.motion.orient (   1 ,       $V_Exterior                   ) = -3.49999999999999978E-01 ! Relative orientation
   view.motion.orient (   2 ,       $V_Exterior                   ) = -5.99999999999999978E-01 ! Relative orientation
   view.motion.orient (   3 ,       $V_Exterior                   ) = 5.99999999999999978E-01 ! Relative orientation
   view.motion.orient (   4 ,       $V_Exterior                   ) = 3.49999999999999978E-01 ! Relative orientation

   view.type (                      $V_Contact                    ) = 1                       ! Projection type
   view.pos (             1 ,       $V_Contact                    ) = -2.10050821304321289E+00 ! Position
   view.pos (             2 ,       $V_Contact                    ) = -1.85263907909393311E+00 ! Position
   view.pos (             3 ,       $V_Contact                    ) = -1.04977440834045410E+00 ! Position
   view.orient (          1 ,       $V_Contact                    ) = 3.71832658193918919E-01 ! Orientation
   view.orient (          2 ,       $V_Contact                    ) = 6.74023668647723118E-01 ! Orientation
   view.orient (          3 ,       $V_Contact                    ) = -5.57195170749716917E-01 ! Orientation
   view.orient (          4 ,       $V_Contact                    ) = -3.11393818333477013E-01 ! Orientation
   view.angle (                     $V_Contact                    ) = 7.85398185253143311E-01 ! Lens angle
   view.height (                    $V_Contact                    ) = 1.00000000000000006E-01 ! View height
   view.fclip.auto (                $V_Contact                    ) = 0                       ! Front clipping plane auto
   view.bclip.auto (                $V_Contact                    ) = 0                       ! Back clipping plane auto
   view.fclip.value (               $V_Contact                    ) = 0.00000000000000000E+00 ! Front clipping plane value
   view.bclip.value (               $V_Contact                    ) = 1.29000000000000004E+00 ! Back clipping plane value
   view.rotcenter.type (            $V_Contact                    ) = 1                       ! Rotation center type
   view.rotcenter.ele (             $V_Contact                    ) = $M_R_Isys_ProfRef_RWP_IRW_Left ! Rotation center element
   view.rotcenter.adjust (          $V_Contact                    ) = 0                       ! Adjust rotation center
   view.motion.active (             $V_Contact                    ) = 1                       ! Camera is moved
   view.motion.ref (                $V_Contact                    ) = $M_B_IRW_L_ProfRef_RWP_IRW_Left ! Marker
   view.motion.x (                  $V_Contact                    ) = 1                       ! Moved camera direction x
   view.motion.y (                  $V_Contact                    ) = 1                       ! Moved camera direction y
   view.motion.z (                  $V_Contact                    ) = 1                       ! Moved camera direction z
   view.motion.al (                 $V_Contact                    ) = 1                       ! Moved camera direction alpha
   view.motion.be (                 $V_Contact                    ) = 1                       ! Moved camera direction beta
   view.motion.ga (                 $V_Contact                    ) = 1                       ! Moved camera direction gamma
   view.motion.pos (      1 ,       $V_Contact                    ) = -8.59999999999999987E-01 ! Relative position
   view.motion.pos (      2 ,       $V_Contact                    ) = 0.00000000000000000E+00 ! Relative position
   view.motion.pos (      3 ,       $V_Contact                    ) = 0.00000000000000000E+00 ! Relative position
   view.motion.orient (   1 ,       $V_Contact                    ) = 5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   2 ,       $V_Contact                    ) = 5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   3 ,       $V_Contact                    ) = -5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   4 ,       $V_Contact                    ) = -5.00000000000000000E-01 ! Relative orientation

viewgroup.end (                     $G_RWP_IRW_Left               )                           ! $G_RWP_IRW_Left

viewgroup.begin (                   $G_RWP_IRW_Right              )                           ! $G_RWP_IRW_Right
   view.type (                      $V_Exterior                   ) = 0                       ! Projection type
   view.pos (             1 ,       $V_Exterior                   ) = -3.07257914543151855E+00 ! Position
   view.pos (             2 ,       $V_Exterior                   ) = 8.43781650066375732E-01 ! Position
   view.pos (             3 ,       $V_Exterior                   ) = -1.34438610076904297E+00 ! Position
   view.orient (          1 ,       $V_Exterior                   ) = 6.03576719760894775E-01 ! Orientation
   view.orient (          2 ,       $V_Exterior                   ) = 5.10873675346374512E-01 ! Orientation
   view.orient (          3 ,       $V_Exterior                   ) = -3.84157508611679077E-01 ! Orientation
   view.orient (          4 ,       $V_Exterior                   ) = -4.76577728986740112E-01 ! Orientation
   view.angle (                     $V_Exterior                   ) = 6.10865238198015303E-01 ! Lens angle
   view.fclip.auto (                $V_Exterior                   ) = 1                       ! Front clipping plane auto
   view.bclip.auto (                $V_Exterior                   ) = 1                       ! Back clipping plane auto
   view.fclip.value (               $V_Exterior                   ) = 1.02654419839382172E-01 ! Front clipping plane value
   view.bclip.value (               $V_Exterior                   ) = 1.02654411315917969E+02 ! Back clipping plane value
   view.rotcenter.type (            $V_Exterior                   ) = 1                       ! Rotation center type
   view.rotcenter.ele (             $V_Exterior                   ) = $M_R_Isys_ProfRef_RWP_IRW_Right ! Rotation center element
   view.rotcenter.adjust (          $V_Exterior                   ) = 0                       ! Adjust rotation center
   view.motion.active (             $V_Exterior                   ) = 1                       ! Camera is moved
   view.motion.ref (                $V_Exterior                   ) = $M_Isys_TrackFrame_RWP_IRW_Right ! Marker
   view.motion.x (                  $V_Exterior                   ) = 1                       ! Moved camera direction x
   view.motion.y (                  $V_Exterior                   ) = 1                       ! Moved camera direction y
   view.motion.z (                  $V_Exterior                   ) = 1                       ! Moved camera direction z
   view.motion.al (                 $V_Exterior                   ) = 1                       ! Moved camera direction alpha
   view.motion.be (                 $V_Exterior                   ) = 1                       ! Moved camera direction beta
   view.motion.ga (                 $V_Exterior                   ) = 1                       ! Moved camera direction gamma
   view.motion.pos (      1 ,       $V_Exterior                   ) = -1.29000000000000004E+00 ! Relative position
   view.motion.pos (      2 ,       $V_Exterior                   ) = 1.86625000000000019E+00 ! Relative position
   view.motion.pos (      3 ,       $V_Exterior                   ) = -4.29999999999999993E-01 ! Relative position
   view.motion.orient (   1 ,       $V_Exterior                   ) = 5.99999999999999978E-01 ! Relative orientation
   view.motion.orient (   2 ,       $V_Exterior                   ) = 3.49999999999999978E-01 ! Relative orientation
   view.motion.orient (   3 ,       $V_Exterior                   ) = -3.49999999999999978E-01 ! Relative orientation
   view.motion.orient (   4 ,       $V_Exterior                   ) = -5.99999999999999978E-01 ! Relative orientation

   view.type (                      $V_Contact                    ) = 1                       ! Projection type
   view.pos (             1 ,       $V_Contact                    ) = -3.07257914543151855E+00 ! Position
   view.pos (             2 ,       $V_Contact                    ) = 8.43781650066375732E-01 ! Position
   view.pos (             3 ,       $V_Contact                    ) = -1.34438610076904297E+00 ! Position
   view.orient (          1 ,       $V_Contact                    ) = 6.03576719760894775E-01 ! Orientation
   view.orient (          2 ,       $V_Contact                    ) = 5.10873675346374512E-01 ! Orientation
   view.orient (          3 ,       $V_Contact                    ) = -3.84157508611679077E-01 ! Orientation
   view.orient (          4 ,       $V_Contact                    ) = -4.76577728986740112E-01 ! Orientation
   view.angle (                     $V_Contact                    ) = 7.85398185253143311E-01 ! Lens angle
   view.height (                    $V_Contact                    ) = 1.00000000000000006E-01 ! View height
   view.fclip.auto (                $V_Contact                    ) = 0                       ! Front clipping plane auto
   view.bclip.auto (                $V_Contact                    ) = 0                       ! Back clipping plane auto
   view.fclip.value (               $V_Contact                    ) = 0.00000000000000000E+00 ! Front clipping plane value
   view.bclip.value (               $V_Contact                    ) = 1.29000000000000004E+00 ! Back clipping plane value
   view.rotcenter.type (            $V_Contact                    ) = 1                       ! Rotation center type
   view.rotcenter.ele (             $V_Contact                    ) = $M_R_Isys_ProfRef_RWP_IRW_Right ! Rotation center element
   view.rotcenter.adjust (          $V_Contact                    ) = 0                       ! Adjust rotation center
   view.motion.active (             $V_Contact                    ) = 1                       ! Camera is moved
   view.motion.ref (                $V_Contact                    ) = $M_B_IRW_R_ProfRef_RWP_IRW_Right ! Marker
   view.motion.x (                  $V_Contact                    ) = 1                       ! Moved camera direction x
   view.motion.y (                  $V_Contact                    ) = 1                       ! Moved camera direction y
   view.motion.z (                  $V_Contact                    ) = 1                       ! Moved camera direction z
   view.motion.al (                 $V_Contact                    ) = 1                       ! Moved camera direction alpha
   view.motion.be (                 $V_Contact                    ) = 1                       ! Moved camera direction beta
   view.motion.ga (                 $V_Contact                    ) = 1                       ! Moved camera direction gamma
   view.motion.pos (      1 ,       $V_Contact                    ) = -8.59999999999999987E-01 ! Relative position
   view.motion.pos (      2 ,       $V_Contact                    ) = 0.00000000000000000E+00 ! Relative position
   view.motion.pos (      3 ,       $V_Contact                    ) = 0.00000000000000000E+00 ! Relative position
   view.motion.orient (   1 ,       $V_Contact                    ) = 5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   2 ,       $V_Contact                    ) = 5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   3 ,       $V_Contact                    ) = -5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   4 ,       $V_Contact                    ) = -5.00000000000000000E-01 ! Relative orientation

viewgroup.end (                     $G_RWP_IRW_Right              )                           ! $G_RWP_IRW_Right

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 200 Hz }              ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 2 s }                 ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 1.00000000000000004E-10 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force outpur values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.compat.solver (                 $SLV_SolverSettings           ) = 0                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -9.00000000000000000E+01
refsys.attr.2d.pos.y (              $R_Isys                       ) = -1.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 2.40000000000000000E+02
refsys.attr.2d.height (             $R_Isys                       ) = 2.20000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_Track_Moved           ) = -98                     ! Type
marker.parent (                     $M_Isys_Track_Moved           ) = $R_Isys                 ! Reference system
marker.par (              1 ,       $M_Isys_Track_Moved           ) = $J_DumAxle              ! [-] Track Connection/Joint
marker.par (              3 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track elevation
marker.par (              4 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track roll
marker.par (              5 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track pitch
marker.par (              6 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in x of Track frame
marker.par (              7 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in y of Track frame
marker.par (              8 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in z of Track frame
marker.par (              9 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in s along Track
marker.par (             10 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Calculate derivatives

marker.type (                       $M_Isys_TrackFrame_RWP_IRW_Left) = -98                    ! Type
marker.parent (                     $M_Isys_TrackFrame_RWP_IRW_Left) = $R_Isys                ! Reference system
marker.par (              1 ,       $M_Isys_TrackFrame_RWP_IRW_Left) = $J_DumAxle             ! [-] Track Connection/Joint

marker.type (                       $M_R_Isys_ProfRef_RWP_IRW_Left) = -78                     ! Type
marker.parent (                     $M_R_Isys_ProfRef_RWP_IRW_Left) = $R_Isys                 ! Reference system
marker.par (              1 ,       $M_R_Isys_ProfRef_RWP_IRW_Left) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair

marker.type (                       $M_Isys_TrackFrame_RWP_IRW_Right) = -98                   ! Type
marker.parent (                     $M_Isys_TrackFrame_RWP_IRW_Right) = $R_Isys               ! Reference system
marker.par (              1 ,       $M_Isys_TrackFrame_RWP_IRW_Right) = $J_DumAxle            ! [-] Track Connection/Joint

marker.type (                       $M_R_Isys_ProfRef_RWP_IRW_Right) = -78                    ! Type
marker.parent (                     $M_R_Isys_ProfRef_RWP_IRW_Right) = $R_Isys                ! Reference system
marker.par (              1 ,       $M_R_Isys_ProfRef_RWP_IRW_Right) = $RWP_IRW_Right         ! [-] Rail-Wheel Pair

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length

prim.type (                         $P_R_Isys_Track               ) = 41                      ! Type
prim.ref (                          $P_R_Isys_Track               ) = $M_Isys                 ! Reference Marker

prim.type (                         $P_R_Isys_ProfRef_RWP_IRW_Left) = 79                      ! Type
prim.ref (                          $P_R_Isys_ProfRef_RWP_IRW_Left) = $M_R_Isys_ProfRef_RWP_IRW_Left ! Reference Marker
prim.color.r (            1 ,       $P_R_Isys_ProfRef_RWP_IRW_Left) = 1.07000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_R_Isys_ProfRef_RWP_IRW_Left) = 1.07000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_R_Isys_ProfRef_RWP_IRW_Left) = 1.07000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_R_Isys_ProfRef_RWP_IRW_Left) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                1 ,       $P_R_Isys_ProfRef_RWP_IRW_Left) = $RWP_IRW_Left           ! [-] Rail-wheel pair

prim.type (                         $P_R_Isys_ProfRef_RWP_IRW_Right) = 79                     ! Type
prim.ref (                          $P_R_Isys_ProfRef_RWP_IRW_Right) = $M_R_Isys_ProfRef_RWP_IRW_Right ! Reference Marker
prim.color.r (            1 ,       $P_R_Isys_ProfRef_RWP_IRW_Right) = 1.07000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_R_Isys_ProfRef_RWP_IRW_Right) = 1.07000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_R_Isys_ProfRef_RWP_IRW_Right) = 1.07000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_R_Isys_ProfRef_RWP_IRW_Right) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                1 ,       $P_R_Isys_ProfRef_RWP_IRW_Right) = $RWP_IRW_Right         ! [-] Rail-wheel pair


!**********************************************************************
! Bodies
!**********************************************************************
body.mp (                           $B_DumAxle                    ) = 1                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.attr.2d.pos.x (                $B_DumAxle                    ) = -3.00000000000000000E+01
body.attr.2d.pos.y (                $B_DumAxle                    ) = 3.00000000000000000E+01
body.attr.2d.width (                $B_DumAxle                    ) = 1.10000000000000000E+02
body.attr.2d.height (               $B_DumAxle                    ) = 8.00000000000000000E+01

marker.type (                       $M_DumAxle_BRF                ) = 1                       ! Type
marker.parent (                     $M_DumAxle_BRF                ) = $B_DumAxle              ! Body
marker.flx.type (                   $M_DumAxle_BRF                ) = 4                       ! Flexible type

joint.from (                        $J_DumAxle                    ) = $M_Isys                 ! From Marker
joint.to (                          $J_DumAxle                    ) = $M_DumAxle_BRF          ! To Marker
joint.type (                        $J_DumAxle                    ) = 7                       ! Type
joint.st.pos (            1 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_DumAxle                    ) = { -860/2000 }           ! Position
joint.st.pos (            4 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            5 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            6 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_DumAxle                    ) = 5.55555555555555536E+00 ! Velocity
joint.st.vel (            2 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            4 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            5 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            6 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! Velocity
joint.par (               3 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! [-] Degrees of freedom
joint.par (              19 ,       $J_DumAxle                    ) = 0.00000000000000000E+00 ! [m] Longitudinal position offset
joint.attr.2d.pos.x (     1 ,       $J_DumAxle                    ) = 20
joint.attr.2d.pos.y (     1 ,       $J_DumAxle                    ) = 170
joint.attr.2d.ori (       1 ,       $J_DumAxle                    ) = 270

prim.type (                         $P_DumAxle                    ) = 2                       ! Type
prim.ref (                          $P_DumAxle                    ) = $M_DumAxle_BRF          ! Reference Marker
prim.color.r (            1 ,       $P_DumAxle                    ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_DumAxle                    ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_DumAxle                    ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_DumAxle                    ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_DumAxle                    ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_DumAxle                    ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_DumAxle                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_DumAxle                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.drawstyle (                    $P_DumAxle                    ) = 2                       ! Draw style
prim.transparency (                 $P_DumAxle                    ) = 2.50000000000000000E-01 ! Transparency
prim.mp.dens.solid (                $P_DumAxle                    ) = 1.00000000000000000E+02 ! Density
prim.par (                2 ,       $P_DumAxle                    ) = 2.00000000000000000E+00 ! [m] Height
prim.par (                3 ,       $P_DumAxle                    ) = { 130/1000 }            ! [m] Outer diameter
prim.par (                4 ,       $P_DumAxle                    ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_DumAxle                    ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_DumAxle                    ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_DumAxle                    ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_DumAxle                    ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_DumAxle                    ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_DumAxle                    ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_DumAxle                    ) = 0.00000000000000000E+00 ! [-] Close geometry with


body.m (                            $B_IRW_L                      ) = 5.00000000000000000E+02 ! Mass of the Body
body.I.tens (             1 ,   1 , $B_IRW_L                      ) = 2.80000000000000000E+02 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_IRW_L                      ) = 5.00000000000000000E+01 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_IRW_L                      ) = 2.80000000000000000E+02 ! Moments of inertia
body.I.kind (                       $B_IRW_L                      ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker

marker.type (                       $M_IRW_L_BRF                  ) = 1                       ! Type
marker.parent (                     $M_IRW_L_BRF                  ) = $B_IRW_L                ! Body
marker.flx.type (                   $M_IRW_L_BRF                  ) = 4                       ! Flexible type

marker.type (                       $M_B_IRW_L_ProfRef_RWP_IRW_Left) = -78                    ! Type
marker.parent (                     $M_B_IRW_L_ProfRef_RWP_IRW_Left) = $B_IRW_L               ! Body
marker.par (              1 ,       $M_B_IRW_L_ProfRef_RWP_IRW_Left) = $RWP_IRW_Left          ! [-] Rail-Wheel Pair

marker.type (                       $M_IRW_Motor_L                ) = 2                       ! Type
marker.parent (                     $M_IRW_Motor_L                ) = $B_IRW_L                ! Body
marker.pos (              2 ,       $M_IRW_Motor_L                ) = { -2050/2000 }          ! Position

joint.from (                        $J_IRW_L                      ) = $M_DumAxle_BRF          ! From Marker
joint.to (                          $J_IRW_L                      ) = $M_IRW_L_BRF            ! To Marker
joint.type (                        $J_IRW_L                      ) = 2                       ! Type
joint.st.pos (            1 ,       $J_IRW_L                      ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_IRW_L                      ) = -1.29198966408268738E+01 ! Velocity

prim.type (                         $P_B_IRW_L_ProfRef_RWP_IRW_Left) = 78                     ! Type
prim.ref (                          $P_B_IRW_L_ProfRef_RWP_IRW_Left) = $M_B_IRW_L_ProfRef_RWP_IRW_Left ! Reference Marker
prim.color.r (            1 ,       $P_B_IRW_L_ProfRef_RWP_IRW_Left) = 5.80000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_B_IRW_L_ProfRef_RWP_IRW_Left) = 9.80000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_B_IRW_L_ProfRef_RWP_IRW_Left) = 2.05000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_B_IRW_L_ProfRef_RWP_IRW_Left) = 5.00000000000000000E-01 ! Colors (transparency component)
prim.par (                1 ,       $P_B_IRW_L_ProfRef_RWP_IRW_Left) = $RWP_IRW_Left          ! [-] Rail-wheel pair


body.m (                            $B_IRW_R                      ) = 5.00000000000000000E+02 ! Mass of the Body
body.I.tens (             1 ,   1 , $B_IRW_R                      ) = 2.80000000000000000E+02 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_IRW_R                      ) = 5.00000000000000000E+01 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_IRW_R                      ) = 2.80000000000000000E+02 ! Moments of inertia
body.I.kind (                       $B_IRW_R                      ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker

marker.type (                       $M_IRW_R_BRF                  ) = 1                       ! Type
marker.parent (                     $M_IRW_R_BRF                  ) = $B_IRW_R                ! Body
marker.flx.type (                   $M_IRW_R_BRF                  ) = 4                       ! Flexible type

marker.type (                       $M_B_IRW_R_ProfRef_RWP_IRW_Right) = -78                   ! Type
marker.parent (                     $M_B_IRW_R_ProfRef_RWP_IRW_Right) = $B_IRW_R              ! Body
marker.par (              1 ,       $M_B_IRW_R_ProfRef_RWP_IRW_Right) = $RWP_IRW_Right        ! [-] Rail-Wheel Pair

marker.type (                       $M_IRW_Motor_R                ) = 2                       ! Type
marker.parent (                     $M_IRW_Motor_R                ) = $B_IRW_R                ! Body
marker.pos (              2 ,       $M_IRW_Motor_R                ) = { 2050/2000 }           ! Position

joint.from (                        $J_IRW_R                      ) = $M_DumAxle_BRF          ! From Marker
joint.to (                          $J_IRW_R                      ) = $M_IRW_R_BRF            ! To Marker
joint.type (                        $J_IRW_R                      ) = 2                       ! Type
joint.st.pos (            1 ,       $J_IRW_R                      ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_IRW_R                      ) = -1.29198966408268738E+01 ! Velocity

prim.type (                         $P_B_IRW_R_ProfRef_RWP_IRW_Right) = 78                    ! Type
prim.ref (                          $P_B_IRW_R_ProfRef_RWP_IRW_Right) = $M_B_IRW_R_ProfRef_RWP_IRW_Right ! Reference Marker
prim.color.r (            1 ,       $P_B_IRW_R_ProfRef_RWP_IRW_Right) = 5.80000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_B_IRW_R_ProfRef_RWP_IRW_Right) = 9.80000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_B_IRW_R_ProfRef_RWP_IRW_Right) = 2.05000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_B_IRW_R_ProfRef_RWP_IRW_Right) = 5.00000000000000000E-01 ! Colors (transparency component)
prim.par (                1 ,       $P_B_IRW_R_ProfRef_RWP_IRW_Right) = $RWP_IRW_Right        ! [-] Rail-wheel pair


body.m (                            $B_AxleBridge                 ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_AxleBridge                 ) = 1                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_AxleBridge                 ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_AxleBridge                 ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_AxleBridge                 ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_AxleBridge                 ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker

marker.type (                       $M_AxleBridge_BRF             ) = 1                       ! Type
marker.parent (                     $M_AxleBridge_BRF             ) = $B_AxleBridge           ! Body
marker.flx.type (                   $M_AxleBridge_BRF             ) = 4                       ! Flexible type

marker.type (                       $M_AxleBridge_PS_Spring_baseA ) = 2                       ! Type
marker.ref (                        $M_AxleBridge_PS_Spring_baseA ) = $M_AxleBridge_BRF_1     ! Reference Marker
marker.parent (                     $M_AxleBridge_PS_Spring_baseA ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_PS_Spring_baseA ) = { -275/1000 }           ! Position
marker.pos (              2 ,       $M_AxleBridge_PS_Spring_baseA ) = { -450/1000 }           ! Position
marker.pos (              3 ,       $M_AxleBridge_PS_Spring_baseA ) = { -98.5/1000+0.15 }     ! Position
marker.ang (              1 ,       $M_AxleBridge_PS_Spring_baseA ) = 0.00000000000000000E+00 ! Angles
marker.ang (              2 ,       $M_AxleBridge_PS_Spring_baseA ) = { 180deg }              ! Angles
marker.ang (              3 ,       $M_AxleBridge_PS_Spring_baseA ) = 0.00000000000000000E+00 ! Angles
marker.txt (                        $M_AxleBridge_PS_Spring_baseA ) = '0.15为一系悬挂上下节点的距离之半' ! Comment

marker.type (                       $M_AxleBridge_PS_Spring_baseB ) = 2                       ! Type
marker.ref (                        $M_AxleBridge_PS_Spring_baseB ) = $M_AxleBridge_BRF_1     ! Reference Marker
marker.parent (                     $M_AxleBridge_PS_Spring_baseB ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_PS_Spring_baseB ) = { -275/1000 }           ! Position
marker.pos (              2 ,       $M_AxleBridge_PS_Spring_baseB ) = { 450/1000 }            ! Position
marker.pos (              3 ,       $M_AxleBridge_PS_Spring_baseB ) = { -98.5/1000+0.15 }     ! Position
marker.ang (              2 ,       $M_AxleBridge_PS_Spring_baseB ) = { 180deg }              ! Angles
marker.txt (                        $M_AxleBridge_PS_Spring_baseB ) = '0.15为一系悬挂上下节点的距离之半' ! Comment

marker.type (                       $M_AxleBridge_PS_Spring_baseC ) = 2                       ! Type
marker.ref (                        $M_AxleBridge_PS_Spring_baseC ) = $M_AxleBridge_BRF_1     ! Reference Marker
marker.parent (                     $M_AxleBridge_PS_Spring_baseC ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_PS_Spring_baseC ) = { 275/1000 }            ! Position
marker.pos (              2 ,       $M_AxleBridge_PS_Spring_baseC ) = { -450/1000 }           ! Position
marker.pos (              3 ,       $M_AxleBridge_PS_Spring_baseC ) = { -98.5/1000+0.15 }     ! Position
marker.ang (              2 ,       $M_AxleBridge_PS_Spring_baseC ) = { 180deg }              ! Angles
marker.txt (                        $M_AxleBridge_PS_Spring_baseC ) = '0.15为一系悬挂上下节点的距离之半' ! Comment

marker.type (                       $M_AxleBridge_PS_Spring_baseD ) = 2                       ! Type
marker.ref (                        $M_AxleBridge_PS_Spring_baseD ) = $M_AxleBridge_BRF_1     ! Reference Marker
marker.parent (                     $M_AxleBridge_PS_Spring_baseD ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_PS_Spring_baseD ) = { 275/1000 }            ! Position
marker.pos (              2 ,       $M_AxleBridge_PS_Spring_baseD ) = { 450/1000 }            ! Position
marker.pos (              3 ,       $M_AxleBridge_PS_Spring_baseD ) = { -98.5/1000+0.15 }     ! Position
marker.ang (              2 ,       $M_AxleBridge_PS_Spring_baseD ) = { 180deg }              ! Angles
marker.txt (                        $M_AxleBridge_PS_Spring_baseD ) = '0.15为一系悬挂上下节点的距离之半' ! Comment

marker.type (                       $M_AxleBridge_PS_Dmp_baseA    ) = 2                       ! Type
marker.ref (                        $M_AxleBridge_PS_Dmp_baseA    ) = $M_AxleBridge_BRF_1     ! Reference Marker
marker.parent (                     $M_AxleBridge_PS_Dmp_baseA    ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_PS_Dmp_baseA    ) = { -930/2000 }           ! Position
marker.pos (              2 ,       $M_AxleBridge_PS_Dmp_baseA    ) = { -450/1000 }           ! Position
marker.pos (              3 ,       $M_AxleBridge_PS_Dmp_baseA    ) = { -98.5/1000+0.175 }    ! Position
marker.ang (              2 ,       $M_AxleBridge_PS_Dmp_baseA    ) = { 180deg }              ! Angles

marker.type (                       $M_AxleBridge_PS_Dmp_baseB    ) = 2                       ! Type
marker.ref (                        $M_AxleBridge_PS_Dmp_baseB    ) = $M_AxleBridge_BRF_1     ! Reference Marker
marker.parent (                     $M_AxleBridge_PS_Dmp_baseB    ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_PS_Dmp_baseB    ) = { -930/2000 }           ! Position
marker.pos (              2 ,       $M_AxleBridge_PS_Dmp_baseB    ) = { 450/1000 }            ! Position
marker.pos (              3 ,       $M_AxleBridge_PS_Dmp_baseB    ) = { -98.5/1000+0.175 }    ! Position
marker.ang (              2 ,       $M_AxleBridge_PS_Dmp_baseB    ) = { 180deg }              ! Angles

marker.type (                       $M_AxleBridge_PS_Dmp_baseC    ) = 2                       ! Type
marker.ref (                        $M_AxleBridge_PS_Dmp_baseC    ) = $M_AxleBridge_BRF_1     ! Reference Marker
marker.parent (                     $M_AxleBridge_PS_Dmp_baseC    ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_PS_Dmp_baseC    ) = { 930/2000 }            ! Position
marker.pos (              2 ,       $M_AxleBridge_PS_Dmp_baseC    ) = { -450/1000 }           ! Position
marker.pos (              3 ,       $M_AxleBridge_PS_Dmp_baseC    ) = { -98.5/1000+0.175 }    ! Position
marker.ang (              2 ,       $M_AxleBridge_PS_Dmp_baseC    ) = { 180deg }              ! Angles

marker.type (                       $M_AxleBridge_PS_Dmp_baseD    ) = 2                       ! Type
marker.ref (                        $M_AxleBridge_PS_Dmp_baseD    ) = $M_AxleBridge_BRF_1     ! Reference Marker
marker.parent (                     $M_AxleBridge_PS_Dmp_baseD    ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_PS_Dmp_baseD    ) = { 930/2000 }            ! Position
marker.pos (              2 ,       $M_AxleBridge_PS_Dmp_baseD    ) = { 450/1000 }            ! Position
marker.pos (              3 ,       $M_AxleBridge_PS_Dmp_baseD    ) = { -98.5/1000+0.175 }    ! Position
marker.ang (              2 ,       $M_AxleBridge_PS_Dmp_baseD    ) = { 180deg }              ! Angles

marker.type (                       $M_AxleBridge_BRF_1           ) = 2                       ! Type
marker.parent (                     $M_AxleBridge_BRF_1           ) = $B_AxleBridge           ! Body
marker.ang (              2 ,       $M_AxleBridge_BRF_1           ) = { 180deg }              ! Angles

marker.type (                       $M_AxleBridge_LongiBar_A      ) = 2                       ! Type
marker.parent (                     $M_AxleBridge_LongiBar_A      ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_LongiBar_A      ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_AxleBridge_LongiBar_A      ) = { -420/2000 }           ! Position
marker.pos (              3 ,       $M_AxleBridge_LongiBar_A      ) = 7.00000000000000067E-02 ! Position

marker.type (                       $M_AxleBridge_LongiBar_B      ) = 2                       ! Type
marker.parent (                     $M_AxleBridge_LongiBar_B      ) = $B_AxleBridge           ! Body
marker.pos (              1 ,       $M_AxleBridge_LongiBar_B      ) = 0.00000000000000000E+00 ! Position
marker.pos (              2 ,       $M_AxleBridge_LongiBar_B      ) = { 420/2000 }            ! Position
marker.pos (              3 ,       $M_AxleBridge_LongiBar_B      ) = 7.00000000000000067E-02 ! Position

joint.from (                        $J_AxleBridge                 ) = $M_DumAxle_BRF          ! From Marker
joint.to (                          $J_AxleBridge                 ) = $M_AxleBridge_BRF       ! To Marker
joint.type (                        $J_AxleBridge                 ) = 2                       ! Type

prim.type (                         $P_AxleBridge                 ) = 39                      ! Type
prim.ref (                          $P_AxleBridge                 ) = $M_AxleBridge_BRF_1     ! Reference Marker
prim.ang (                2 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_AxleBridge                 ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_AxleBridge                 ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_AxleBridge                 ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_AxleBridge                 ) = 7.20000000000000000E+03 ! Density
prim.par (                2 ,       $P_AxleBridge                 ) = './几何模型_STL版本_轴桥.STL' ! [-] CAD file name
prim.par (                9 ,       $P_AxleBridge                 ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_AxleBridge                 ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_AxleBridge                 ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation


!**********************************************************************
! Force Elements
!**********************************************************************
force.type (                        $F_RWContact_RWP_IRW_Left     ) = 78                      ! Type
force.from (                        $F_RWContact_RWP_IRW_Left     ) = $M_R_Isys_ProfRef_RWP_IRW_Left ! From Marker
force.to (                          $F_RWContact_RWP_IRW_Left     ) = $M_B_IRW_L_ProfRef_RWP_IRW_Left ! To Marker
force.st.desc (           1 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           2 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           3 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           4 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           5 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           6 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           7 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           8 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           9 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          10 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          11 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          12 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          13 ,       $F_RWContact_RWP_IRW_Left     ) = 0.00000000000000000E+00 ! Descriptive states
force.preld.calc (       10 ,       $F_RWContact_RWP_IRW_Left     ) = 1                       ! Select Preload cal.
force.par (               1 ,       $F_RWContact_RWP_IRW_Left     ) = 1.00000000000000000E+00 ! [-] Rail-Wheel Contact Element
force.par (               2 ,       $F_RWContact_RWP_IRW_Left     ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair

force.type (                        $F_RWContact_RWP_IRW_Right    ) = 78                      ! Type
force.from (                        $F_RWContact_RWP_IRW_Right    ) = $M_R_Isys_ProfRef_RWP_IRW_Right ! From Marker
force.to (                          $F_RWContact_RWP_IRW_Right    ) = $M_B_IRW_R_ProfRef_RWP_IRW_Right ! To Marker
force.st.desc (           1 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           2 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           3 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           4 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           5 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           6 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           7 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           8 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           9 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          10 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          11 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          12 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          13 ,       $F_RWContact_RWP_IRW_Right    ) = 0.00000000000000000E+00 ! Descriptive states
force.preld.calc (       10 ,       $F_RWContact_RWP_IRW_Right    ) = 1                       ! Select Preload cal.
force.par (               1 ,       $F_RWContact_RWP_IRW_Right    ) = 1.00000000000000000E+00 ! [-] Rail-Wheel Contact Element
force.par (               2 ,       $F_RWContact_RWP_IRW_Right    ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair

!**********************************************************************
! Tracks
!**********************************************************************
track.type (                        $Trk_Track                    ) = 2                       ! Type
track.kind (                        $Trk_Track                    ) = 1                       ! Kind
track.excit.lat (                   $Trk_Track                    ) = null                    ! Track::EXC_TRACK_LATERAL
track.excit.vert (                  $Trk_Track                    ) = null                    ! Track::EXC_TRACK_VERTICAL
track.excit.roll (                  $Trk_Track                    ) = null                    ! Track::EXC_TRACK_ROLL
track.excit.left.lat (              $Trk_Track                    ) = null                    ! Track::EXC_RAIL_LATERAL_LEFT
track.excit.left.vert (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_VERTICAL_LEFT
track.excit.left.roll (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_ROLL_LEFT
track.excit.right.lat (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_LATERAL_RIGHT
track.excit.right.vert (            $Trk_Track                    ) = null                    ! Track::EXC_RAIL_VERTICAL_RIGHT
track.excit.right.roll (            $Trk_Track                    ) = null                    ! Track::EXC_RAIL_ROLL_RIGHT
track.excit.gauge (                 $Trk_Track                    ) = null                    ! Track::EXC_TRACK_GAUGE
track.meas.superelev.kind (         $Trk_Track                    ) = 1                       ! Superelevation kind (measured track)
track.meas.superelev.reflen (       $Trk_Track                    ) = 0.00000000000000000E+00 ! Superelevation reference length (measured track)
track.meas.len (                    $Trk_Track                    ) = 0.00000000000000000E+00 ! Total measured length
track.meas.discr.fromfile (         $Trk_Track                    ) = 0                       ! Discretisation from file
track.meas.discr.num (              $Trk_Track                    ) = 0                       ! Number of discretisation points
track.cart.file (                   $Trk_Track                    ) = ''                      ! Cartographic filename
track.meas.file (                   $Trk_Track                    ) = ''                      ! Measured filename
track.crg.dir (                     $Trk_Track                    ) = ''                      ! CRG file directory
track.excit.type (                  $Trk_Track                    ) = 0                       ! Excitations type
track.excit.start (                 $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations start
track.excit.end (                   $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations end
track.excit.fade.len (              $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations fade in/out
track.meas.sec.start (              $Trk_Track                    ) = 0.00000000000000000E+00 ! Section start
track.meas.sec.end (                $Trk_Track                    ) = 0.00000000000000000E+00 ! Section end
track.meas.datared.fromfile (       $Trk_Track                    ) = 0                       ! Data reduction from file
track.meas.datared.incr (           $Trk_Track                    ) = 0                       ! Data increment
track.meas.startend.fromexcit (     $Trk_Track                    ) = 0                       ! Start/End from excitation
track.meas.start (                  $Trk_Track                    ) = 0.00000000000000000E+00 ! Start
track.meas.fade.len (               $Trk_Track                    ) = 0.00000000000000000E+00 ! Fade length
track.cart.horizontal.curvature.kind ( $Trk_Track                 ) = 0                       ! 0=radius; 1=arc length; 2=chord length
track.cart.horizontal.curvature.reflen ( $Trk_Track               ) = 1.00000000000000000E+00 ! Reference length
track.cart.superelev.fromfile (     $Trk_Track                    ) = 0                       ! Superelevation from file (cartographic track)
track.cart.superelev.kind (         $Trk_Track                    ) = 2                       ! Superelevation kind (cartographic track)
track.cart.superelev.reflen (       $Trk_Track                    ) = 1.50000000000000000E+00 ! Superelevation reference length (cartographic track)
track.cart.discr.gen (              $Trk_Track                    ) = 1.00000000000000000E+00 ! Discr. gen
track.cart.discr.fine (             $Trk_Track                    ) = 5.00000000000000000E-01 ! Discr. fine
track.txt (                         $Trk_Track                    ) = ''                      ! Comment
track.cart.h.type (       1 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   1 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       1 ,       $Trk_Track                    ) = 201                     ! Type
track.cart.v.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.v.par (        1 ,   1 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.v.par (        2 ,   1 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       1 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   1 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,   1 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2

!**********************************************************************
! Rails
!**********************************************************************
rail.sides (                        $RWR_Rail                     ) = 2                       ! Sides
rail.r.prof.file (        1 ,       $RWR_Rail                     ) = 'UIC60.prr'             ! Right Profiles
rail.r.cant (                       $RWR_Rail                     ) = 4.00000000000000000E+01 ! Right Cant
rail.lat.kind (                     $RWR_Rail                     ) = 2                       ! Lateral rail distance method
rail.r.lat.dist (                   $RWR_Rail                     ) = 0.00000000000000000E+00 ! Right Lateral rail distance
rail.l.prof.file (        1 ,       $RWR_Rail                     ) = 'UIC60.prr'             ! Left Profiles
rail.l.cant (                       $RWR_Rail                     ) = 4.00000000000000000E+01 ! Left Cant
rail.l.lat.dist (                   $RWR_Rail                     ) = 0.00000000000000000E+00 ! Left Lateral rail distance
rail.gauge (                        $RWR_Rail                     ) = 1.43500000000000005E+00 ! Track gauge
rail.gaugepos (                     $RWR_Rail                     ) = 1.40000000000000003E-02 ! Gauge measurement position

!**********************************************************************
! Rail Wheel Pairs
!**********************************************************************
rwpair.wheel.untrue.kind (          $RWP_IRW_Left                 ) = 1                       ! RWP_WHEEL_UNTRUENESS_KIND
rwpair.roller.untrue.kind (         $RWP_IRW_Left                 ) = 1                       ! RWP_ROLLER_UNTRUENESS_KIND
rwpair.rail.kind (                  $RWP_IRW_Left                 ) = 0                       ! RWP_RAIL_KIND
rwpair.cont.kind (                  $RWP_IRW_Left                 ) = 3                       ! RWP_CONTACT_POINT_SEARCH_KIND
rwpair.fn.kind (                    $RWP_IRW_Left                 ) = 2                       ! RWP_NORMAL_FORCE_KIND
rwpair.ft.refvel.kind (             $RWP_IRW_Left                 ) = 3                       ! RWP_FT_REFERENCE_VELOCITY_KIND
rwpair.result.ref (                 $RWP_IRW_Left                 ) = 1                       ! RWP_FORCE_REFSYS_TYPE
rwpair.side (                       $RWP_IRW_Left                 ) = 2                       ! RWP_SIDE
rwpair.carrier.body (               $RWP_IRW_Left                 ) = $B_DumAxle              ! RWP_CARRIER_BODY
rwpair.wheel.prof.file (            $RWP_IRW_Left                 ) = 'LM.prw'                ! RWP_WHEEL_PROFILE_URI
rwpair.wheel.joint (                $RWP_IRW_Left                 ) = $J_IRW_L                ! RWP_WHEEL_JOINT
rwpair.wheel.body (                 $RWP_IRW_Left                 ) = $B_IRW_L                ! RWP_WHEEL_BODY
rwpair.wheel.state (                $RWP_IRW_Left                 ) = 1                       ! RWP_WHEEL_ROT_STATE
rwpair.wheel.marker (               $RWP_IRW_Left                 ) = $M_IRW_L_BRF            ! RWP_WHEEL_MARKER
rwpair.wheel.rot.sign (             $RWP_IRW_Left                 ) = -1                      ! RWP_WHEEL_ROTATION
rwpair.wheel.rnom (                 $RWP_IRW_Left                 ) = { 860/2000 }            ! RWP_WHEEL_RADIUS
rwpair.wheel.latdist (              $RWP_IRW_Left                 ) = 7.46500000000000052E-01 ! RWP_WHEEL_LATERAL_DISTANCE
rwpair.ft.minvel (                  $RWP_IRW_Left                 ) = 1.00000000000000002E-02 ! RWP_FT_MINVEL
rwpair.ft.kalkerweight (            $RWP_IRW_Left                 ) = 1.00000000000000000E+00 ! RWP_FT_KALKERWEIGHT
rwpair.fric.mu (                    $RWP_IRW_Left                 ) = 4.00000000000000022E-01 ! RWP_FRICTION_COEFFICIENT
rwpair.cont.e (                     $RWP_IRW_Left                 ) = 2.10000000000000000E+11 ! RWP_CONTACT_E
rwpair.cont.pois (                  $RWP_IRW_Left                 ) = 2.80000000000000027E-01 ! RWP_CONTACT_POISSON_NUMBER
rwpair.fn.dref (                    $RWP_IRW_Left                 ) = 1.00000000000000000E+05 ! RWP_CONTACT_DAMPING
rwpair.standstill.enable (          $RWP_IRW_Left                 ) = 0                       ! RWP_STANDSTILL_ENABLE
rwpair.standstill.mu (              $RWP_IRW_Left                 ) = 4.00000000000000022E-01 ! RWP_STANDSTILL_FRICTION_COEFFICIENT
rwpair.standstill.stiff (           $RWP_IRW_Left                 ) = 1.00000000000000000E+08 ! RWP_STANDSTILL_STIFFNESS
rwpair.standstill.damp (            $RWP_IRW_Left                 ) = 1.00000000000000000E+03 ! RWP_STANDSTILL_DAMPING
rwpair.rail.freq.track.uele (       $RWP_IRW_Left                 ) = null                    ! Track roll
rwpair.wheel.prof.disc (            $RWP_IRW_Left                 ) = 5.00000000000000010E-04 ! RWP_WHEEL_PROFILE_DISC
rwpair.cont.ref (                   $RWP_IRW_Left                 ) = $RWC_ContactMethod      ! RWP_RWCONTACT
rwpair.rail.ref (                   $RWP_IRW_Left                 ) = $RWR_Rail               ! RWP_RAIL_REFERENCE

rwpair.wheel.untrue.kind (          $RWP_IRW_Right                ) = 1                       ! RWP_WHEEL_UNTRUENESS_KIND
rwpair.roller.untrue.kind (         $RWP_IRW_Right                ) = 1                       ! RWP_ROLLER_UNTRUENESS_KIND
rwpair.rail.kind (                  $RWP_IRW_Right                ) = 0                       ! RWP_RAIL_KIND
rwpair.cont.kind (                  $RWP_IRW_Right                ) = 3                       ! RWP_CONTACT_POINT_SEARCH_KIND
rwpair.fn.kind (                    $RWP_IRW_Right                ) = 2                       ! RWP_NORMAL_FORCE_KIND
rwpair.ft.refvel.kind (             $RWP_IRW_Right                ) = 3                       ! RWP_FT_REFERENCE_VELOCITY_KIND
rwpair.result.ref (                 $RWP_IRW_Right                ) = 1                       ! RWP_FORCE_REFSYS_TYPE
rwpair.side (                       $RWP_IRW_Right                ) = 1                       ! RWP_SIDE
rwpair.carrier.body (               $RWP_IRW_Right                ) = $B_DumAxle              ! RWP_CARRIER_BODY
rwpair.wheel.prof.file (            $RWP_IRW_Right                ) = 'LM.prw'                ! RWP_WHEEL_PROFILE_URI
rwpair.wheel.joint (                $RWP_IRW_Right                ) = $J_IRW_R                ! RWP_WHEEL_JOINT
rwpair.wheel.body (                 $RWP_IRW_Right                ) = $B_IRW_R                ! RWP_WHEEL_BODY
rwpair.wheel.state (                $RWP_IRW_Right                ) = 1                       ! RWP_WHEEL_ROT_STATE
rwpair.wheel.marker (               $RWP_IRW_Right                ) = $M_IRW_R_BRF            ! RWP_WHEEL_MARKER
rwpair.wheel.rot.sign (             $RWP_IRW_Right                ) = -1                      ! RWP_WHEEL_ROTATION
rwpair.wheel.rnom (                 $RWP_IRW_Right                ) = { 860/2000 }            ! RWP_WHEEL_RADIUS
rwpair.wheel.latdist (              $RWP_IRW_Right                ) = 7.46500000000000052E-01 ! RWP_WHEEL_LATERAL_DISTANCE
rwpair.ft.minvel (                  $RWP_IRW_Right                ) = 1.00000000000000002E-02 ! RWP_FT_MINVEL
rwpair.ft.kalkerweight (            $RWP_IRW_Right                ) = 1.00000000000000000E+00 ! RWP_FT_KALKERWEIGHT
rwpair.fric.mu (                    $RWP_IRW_Right                ) = 4.00000000000000022E-01 ! RWP_FRICTION_COEFFICIENT
rwpair.cont.e (                     $RWP_IRW_Right                ) = 2.10000000000000000E+11 ! RWP_CONTACT_E
rwpair.cont.pois (                  $RWP_IRW_Right                ) = 2.80000000000000027E-01 ! RWP_CONTACT_POISSON_NUMBER
rwpair.fn.dref (                    $RWP_IRW_Right                ) = 1.00000000000000000E+05 ! RWP_CONTACT_DAMPING
rwpair.standstill.enable (          $RWP_IRW_Right                ) = 0                       ! RWP_STANDSTILL_ENABLE
rwpair.standstill.mu (              $RWP_IRW_Right                ) = 4.00000000000000022E-01 ! RWP_STANDSTILL_FRICTION_COEFFICIENT
rwpair.standstill.stiff (           $RWP_IRW_Right                ) = 1.00000000000000000E+08 ! RWP_STANDSTILL_STIFFNESS
rwpair.standstill.damp (            $RWP_IRW_Right                ) = 1.00000000000000000E+03 ! RWP_STANDSTILL_DAMPING
rwpair.rail.freq.track.uele (       $RWP_IRW_Right                ) = null                    ! Track roll
rwpair.wheel.prof.disc (            $RWP_IRW_Right                ) = 5.00000000000000010E-04 ! RWP_WHEEL_PROFILE_DISC
rwpair.cont.ref (                   $RWP_IRW_Right                ) = $RWC_ContactMethod      ! RWP_RWCONTACT
rwpair.rail.ref (                   $RWP_IRW_Right                ) = $RWR_Rail               ! RWP_RAIL_REFERENCE

!**********************************************************************
! Rail Wheel Contacts
!**********************************************************************
rwcontact.type (                    $RWC_ContactMethod            ) = 6                       ! Type
rwcontact.par (           1 ,       $RWC_ContactMethod            ) = 1.10000000000000000E+01 ! [-] mx,my Initial patch discret.

!**********************************************************************
! Result Elements
!**********************************************************************
result.container (                  $RS_RWP_IRW_Left              ) = null                    ! Parent result element
result.type (                       $RS_RWP_IRW_Left              ) = -1                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left              ) = '$RWP_IRW_Left'         ! Description

result.container (                  $RS_RWP_IRW_Left_Pair         ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_Pair         ) = 78                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_Pair         ) = 'Pair'                  ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_Pair         ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair

result.container (                  $RS_RWP_IRW_Left_1            ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_1            ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_1            ) = 'Contact 1 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_1            ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_1            ) = 1.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_2            ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_2            ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_2            ) = 'Contact 2 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_2            ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_2            ) = 2.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_3            ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_3            ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_3            ) = 'Contact 3 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_3            ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_3            ) = 3.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_4            ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_4            ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_4            ) = 'Contact 4 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_4            ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_4            ) = 4.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_5            ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_5            ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_5            ) = 'Contact 5 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_5            ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_5            ) = 5.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_1_Adv        ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_1_Adv        ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_1_Adv        ) = 'Contact 1 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_1_Adv        ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_1_Adv        ) = 1.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_2_Adv        ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_2_Adv        ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_2_Adv        ) = 'Contact 2 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_2_Adv        ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_2_Adv        ) = 2.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_3_Adv        ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_3_Adv        ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_3_Adv        ) = 'Contact 3 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_3_Adv        ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_3_Adv        ) = 3.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_4_Adv        ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_4_Adv        ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_4_Adv        ) = 'Contact 4 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_4_Adv        ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_4_Adv        ) = 4.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Left_5_Adv        ) = $RS_RWP_IRW_Left        ! Parent result element
result.type (                       $RS_RWP_IRW_Left_5_Adv        ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Left_5_Adv        ) = 'Contact 5 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Left_5_Adv        ) = $RWP_IRW_Left           ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Left_5_Adv        ) = 5.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right             ) = null                    ! Parent result element
result.type (                       $RS_RWP_IRW_Right             ) = -1                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right             ) = '$RWP_IRW_Right'        ! Description

result.container (                  $RS_RWP_IRW_Right_Pair        ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_Pair        ) = 78                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_Pair        ) = 'Pair'                  ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_Pair        ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair

result.container (                  $RS_RWP_IRW_Right_1           ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_1           ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_1           ) = 'Contact 1 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_1           ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_1           ) = 1.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_2           ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_2           ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_2           ) = 'Contact 2 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_2           ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_2           ) = 2.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_3           ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_3           ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_3           ) = 'Contact 3 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_3           ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_3           ) = 3.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_4           ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_4           ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_4           ) = 'Contact 4 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_4           ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_4           ) = 4.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_5           ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_5           ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_5           ) = 'Contact 5 '            ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_5           ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_5           ) = 5.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_1_Adv       ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_1_Adv       ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_1_Adv       ) = 'Contact 1 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_1_Adv       ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_1_Adv       ) = 1.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_2_Adv       ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_2_Adv       ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_2_Adv       ) = 'Contact 2 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_2_Adv       ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_2_Adv       ) = 2.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_3_Adv       ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_3_Adv       ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_3_Adv       ) = 'Contact 3 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_3_Adv       ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_3_Adv       ) = 3.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_4_Adv       ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_4_Adv       ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_4_Adv       ) = 'Contact 4 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_4_Adv       ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_4_Adv       ) = 4.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_IRW_Right_5_Adv       ) = $RS_RWP_IRW_Right       ! Parent result element
result.type (                       $RS_RWP_IRW_Right_5_Adv       ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_IRW_Right_5_Adv       ) = 'Contact 5 Adv'         ! Description
result.par (              1 ,       $RS_RWP_IRW_Right_5_Adv       ) = $RWP_IRW_Right          ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_IRW_Right_5_Adv       ) = 5.00000000000000000E+00 ! [-] Contact patch number

                                                                                                                                                                    

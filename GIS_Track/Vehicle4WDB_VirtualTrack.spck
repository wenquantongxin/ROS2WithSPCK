!file.version=3.5! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20210000
version.desc   = ''
version.build  = 101

!**********************************************************************
!  Global parameters
!**********************************************************************
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = 0.00000000000000000E+00 ! Gravity
vehicle.startvel                                                    = { 300 km/h }            ! Vehicle initial velocity
vehicle.applystartvel                                               = 0                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = $Trk_Track              ! Active Track element
prop3d.bg.base.color.r                                              = 2.55000000000000000E+02 ! Background color (red component)
prop3d.bg.base.color.g                                              = 2.55000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.55000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 0                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = -8.10791015633820167E-01 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -4.17480468763526680E-01 ! Position
view.pos (                3 ,       $V_WorkingView                ) = -3.57421875000463463E-01 ! Position
view.orient (             1 ,       $V_WorkingView                ) = 4.94310380612853040E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = 6.62003419755636147E-01 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = -5.06165654375038132E-01 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = -2.47396544400499963E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 9.99999977648258209E-03 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 2.58099472656250000E+04 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 1                       ! Camera is moved
view.motion.ref (                   $V_WorkingView                ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_WorkingView                ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_WorkingView                ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_WorkingView                ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_WorkingView                ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_WorkingView                ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_WorkingView                ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_WorkingView                ) = -8.10791015633820167E-01 ! Relative position
view.motion.pos (         2 ,       $V_WorkingView                ) = -4.17480468763526680E-01 ! Relative position
view.motion.pos (         3 ,       $V_WorkingView                ) = -3.57421875000463463E-01 ! Relative position
view.motion.orient (      1 ,       $V_WorkingView                ) = 4.94310380612853206E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_WorkingView                ) = 6.62003419755636258E-01 ! Relative orientation
view.motion.orient (      3 ,       $V_WorkingView                ) = -5.06165654375038354E-01 ! Relative orientation
view.motion.orient (      4 ,       $V_WorkingView                ) = -2.47396544400499990E-01 ! Relative orientation

view.type (                         $V_Perspective_Moved          ) = 0                       ! Projection type
view.pos (                1 ,       $V_Perspective_Moved          ) = -1.14629710518056527E+00 ! Position
view.pos (                2 ,       $V_Perspective_Moved          ) = 5.40825615142239258E-01 ! Position
view.pos (                3 ,       $V_Perspective_Moved          ) = -3.16154684855064261E-01 ! Position
view.orient (             1 ,       $V_Perspective_Moved          ) = -6.13824307918548584E-01 ! Orientation
view.orient (             2 ,       $V_Perspective_Moved          ) = -4.47064399719238281E-01 ! Orientation
view.orient (             3 ,       $V_Perspective_Moved          ) = 3.80551487207412720E-01 ! Orientation
view.orient (             4 ,       $V_Perspective_Moved          ) = 5.27762949466705322E-01 ! Orientation
view.angle (                        $V_Perspective_Moved          ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Perspective_Moved          ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Perspective_Moved          ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Perspective_Moved          ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Perspective_Moved          ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Perspective_Moved          ) = 1                       ! Camera is moved
view.motion.ref (                   $V_Perspective_Moved          ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_Perspective_Moved          ) = -1.14629710518056527E+00 ! Relative position
view.motion.pos (         2 ,       $V_Perspective_Moved          ) = 5.40825615142239258E-01 ! Relative position
view.motion.pos (         3 ,       $V_Perspective_Moved          ) = -3.16154684855064261E-01 ! Relative position
view.motion.orient (      1 ,       $V_Perspective_Moved          ) = 6.13824300634425168E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_Perspective_Moved          ) = 4.47064394414019628E-01 ! Relative orientation
view.motion.orient (      3 ,       $V_Perspective_Moved          ) = -3.80551482691488641E-01 ! Relative orientation
view.motion.orient (      4 ,       $V_Perspective_Moved          ) = -5.27762943203853974E-01 ! Relative orientation

view.type (                         $V_Side_Orthographic_Moved    ) = 1                       ! Projection type
view.pos (                1 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Side_Orthographic_Moved    ) = 5.99845588207244873E-01 ! Position
view.pos (                3 ,       $V_Side_Orthographic_Moved    ) = -1.02445483207702637E-08 ! Position
view.orient (             1 ,       $V_Side_Orthographic_Moved    ) = 7.07106888294219971E-01 ! Orientation
view.orient (             2 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Side_Orthographic_Moved    ) = -7.07106709480285645E-01 ! Orientation
view.height (                       $V_Side_Orthographic_Moved    ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Side_Orthographic_Moved    ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Side_Orthographic_Moved    ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Side_Orthographic_Moved    ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Side_Orthographic_Moved    ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Side_Orthographic_Moved    ) = 1                       ! Camera is moved
view.motion.ref (                   $V_Side_Orthographic_Moved    ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_Side_Orthographic_Moved    ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Relative position
view.motion.pos (         2 ,       $V_Side_Orthographic_Moved    ) = 5.99845588207244873E-01 ! Relative position
view.motion.pos (         3 ,       $V_Side_Orthographic_Moved    ) = -1.02445483207702637E-08 ! Relative position
view.motion.orient (      1 ,       $V_Side_Orthographic_Moved    ) = 7.07106870593506742E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Relative orientation
view.motion.orient (      3 ,       $V_Side_Orthographic_Moved    ) = 0.00000000000000000E+00 ! Relative orientation
view.motion.orient (      4 ,       $V_Side_Orthographic_Moved    ) = -7.07106691779576968E-01 ! Relative orientation

view.type (                         $V_Top_Orthographic_Moved     ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top_Orthographic_Moved     ) = -5.06639480590820312E-07 ! Position
view.pos (                3 ,       $V_Top_Orthographic_Moved     ) = -9.67873191833496094E+00 ! Position
view.orient (             1 ,       $V_Top_Orthographic_Moved     ) = 1.00000000000000000E+00 ! Orientation
view.orient (             2 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top_Orthographic_Moved     ) = 1.05239450931549072E-07 ! Orientation
view.height (                       $V_Top_Orthographic_Moved     ) = 2.27604870733313946E+00 ! View height
view.fclip.auto (                   $V_Top_Orthographic_Moved     ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top_Orthographic_Moved     ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top_Orthographic_Moved     ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top_Orthographic_Moved     ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top_Orthographic_Moved     ) = 1                       ! Camera is moved
view.motion.ref (                   $V_Top_Orthographic_Moved     ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_Top_Orthographic_Moved     ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Relative position
view.motion.pos (         2 ,       $V_Top_Orthographic_Moved     ) = -5.06639480590820312E-07 ! Relative position
view.motion.pos (         3 ,       $V_Top_Orthographic_Moved     ) = -9.67873191833496094E+00 ! Relative position
view.motion.orient (      1 ,       $V_Top_Orthographic_Moved     ) = 9.99999999999994449E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Relative orientation
view.motion.orient (      3 ,       $V_Top_Orthographic_Moved     ) = 0.00000000000000000E+00 ! Relative orientation
view.motion.orient (      4 ,       $V_Top_Orthographic_Moved     ) = 1.05239450931548490E-07 ! Relative orientation

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 200 Hz }              ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 2 s }                 ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 1.00000000000000004E-10 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force outpur values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.compat.solver (                 $SLV_SolverSettings           ) = 0                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -9.00000000000000000E+01
refsys.attr.2d.pos.y (              $R_Isys                       ) = -1.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 2.40000000000000000E+02
refsys.attr.2d.height (             $R_Isys                       ) = 2.20000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_Track_Moved           ) = -98                     ! Type
marker.parent (                     $M_Isys_Track_Moved           ) = $R_Isys                 ! Reference system
marker.par (              1 ,       $M_Isys_Track_Moved           ) = $J_Vehicle_NoGravity    ! [-] Track Connection/Joint
marker.par (              3 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track elevation
marker.par (              4 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track roll
marker.par (              5 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track pitch
marker.par (              6 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in x of Track frame
marker.par (              7 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in y of Track frame
marker.par (              8 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in z of Track frame
marker.par (              9 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in s along Track
marker.par (             10 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Calculate derivatives

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length

prim.type (                         $P_R_Isys_Track               ) = 41                      ! Type
prim.ref (                          $P_R_Isys_Track               ) = $M_Isys                 ! Reference Marker


!**********************************************************************
! Bodies
!**********************************************************************
body.mp (                           $B_Vehicle_NoGravity          ) = 1                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.attr.2d.pos.x (                $B_Vehicle_NoGravity          ) = -3.00000000000000000E+01
body.attr.2d.pos.y (                $B_Vehicle_NoGravity          ) = 3.00000000000000000E+01
body.attr.2d.width (                $B_Vehicle_NoGravity          ) = 1.10000000000000000E+02
body.attr.2d.height (               $B_Vehicle_NoGravity          ) = 8.00000000000000000E+01

marker.type (                       $M_Vehicle_NoGravity_BRF      ) = 1                       ! Type
marker.parent (                     $M_Vehicle_NoGravity_BRF      ) = $B_Vehicle_NoGravity    ! Body
marker.flx.type (                   $M_Vehicle_NoGravity_BRF      ) = 4                       ! Flexible type

joint.from (                        $J_Vehicle_NoGravity          ) = $M_Isys                 ! From Marker
joint.to (                          $J_Vehicle_NoGravity          ) = $M_Vehicle_NoGravity_BRF ! To Marker
joint.type (                        $J_Vehicle_NoGravity          ) = 9                       ! Type
joint.st.pos (            1 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            5 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_Vehicle_NoGravity          ) = 8.33333333333333286E+01 ! Velocity
joint.st.vel (            2 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            4 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            5 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! Velocity
joint.par (               2 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! [-] Operating mode
joint.par (               3 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! [-] Degrees of freedom
joint.par (              19 ,       $J_Vehicle_NoGravity          ) = 0.00000000000000000E+00 ! [m] Longitudinal position offset
joint.par (              20 ,       $J_Vehicle_NoGravity          ) = 8.33333333333333286E+01 ! [m/s] Constant velocity
joint.attr.2d.pos.x (     1 ,       $J_Vehicle_NoGravity          ) = 20
joint.attr.2d.pos.y (     1 ,       $J_Vehicle_NoGravity          ) = 170
joint.attr.2d.ori (       1 ,       $J_Vehicle_NoGravity          ) = 270

prim.type (                         $P_Vehicle_NoGravity_cuboid   ) = 1                       ! Type
prim.ref (                          $P_Vehicle_NoGravity_cuboid   ) = $M_Vehicle_NoGravity_BRF ! Reference Marker
prim.color.r (            1 ,       $P_Vehicle_NoGravity_cuboid   ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Vehicle_NoGravity_cuboid   ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Vehicle_NoGravity_cuboid   ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Vehicle_NoGravity_cuboid   ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Vehicle_NoGravity_cuboid   ) = 2.50000000000000000E-01 ! Transparency
prim.mp.dens.solid (                $P_Vehicle_NoGravity_cuboid   ) = { 7850 kg/m^3 }         ! Density
prim.par (                2 ,       $P_Vehicle_NoGravity_cuboid   ) = 5.00000000000000000E-01 ! [m] Length in X
prim.par (                3 ,       $P_Vehicle_NoGravity_cuboid   ) = 4.00000000000000022E-01 ! [m] Length in Y
prim.par (                4 ,       $P_Vehicle_NoGravity_cuboid   ) = 2.99999999999999989E-01 ! [m] Length in Z


body.m (                            $B_HongqiaoStation_Line17     ) = 1.00000000000000000E+00 ! Mass of the Body
body.I.tens (             1 ,   1 , $B_HongqiaoStation_Line17     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_HongqiaoStation_Line17     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_HongqiaoStation_Line17     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_HongqiaoStation_Line17     ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker

marker.type (                       $M_HongqiaoStation_Line17_BRF ) = 1                       ! Type
marker.parent (                     $M_HongqiaoStation_Line17_BRF ) = $B_HongqiaoStation_Line17 ! Body
marker.flx.type (                   $M_HongqiaoStation_Line17_BRF ) = 4                       ! Flexible type

joint.from (                        $J_HongqiaoStation_Line17     ) = $M_Isys                 ! From Marker
joint.to (                          $J_HongqiaoStation_Line17     ) = $M_HongqiaoStation_Line17_BRF ! To Marker
joint.type (                        $J_HongqiaoStation_Line17     ) = 7                       ! Type
joint.st.pos (            1 ,       $J_HongqiaoStation_Line17     ) = 2.72636400000000003E+03 ! Position
joint.st.pos (            2 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            5 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            6 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            2 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            4 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            5 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            6 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Velocity
joint.par (               3 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! [-] Degrees of freedom
joint.par (              19 ,       $J_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! [m] Longitudinal position offset

prim.type (                         $P_HongqiaoStation_Line17     ) = 2                       ! Type
prim.ref (                          $P_HongqiaoStation_Line17     ) = $M_HongqiaoStation_Line17_BRF ! Reference Marker
prim.ang (                1 ,       $P_HongqiaoStation_Line17     ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_HongqiaoStation_Line17     ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_HongqiaoStation_Line17     ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_HongqiaoStation_Line17     ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_HongqiaoStation_Line17     ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                2 ,       $P_HongqiaoStation_Line17     ) = 1.00000000000000000E+02 ! [m] Height
prim.par (                3 ,       $P_HongqiaoStation_Line17     ) = 1.00000000000000000E+01 ! [m] Outer diameter
prim.par (                4 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_HongqiaoStation_Line17     ) = 2.00000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_HongqiaoStation_Line17     ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_HongqiaoStation_Line17     ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_HongqiaoStation_Line17     ) = 0.00000000000000000E+00 ! [-] Close geometry with


body.m (                            $B_ZhongchunRoad_JCLLX        ) = 1.00000000000000000E+00 ! Mass of the Body
body.I.tens (             1 ,   1 , $B_ZhongchunRoad_JCLLX        ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_ZhongchunRoad_JCLLX        ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_ZhongchunRoad_JCLLX        ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_ZhongchunRoad_JCLLX        ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker

marker.type (                       $M_ZhongchunRoad_JCLLX_BRF    ) = 1                       ! Type
marker.parent (                     $M_ZhongchunRoad_JCLLX_BRF    ) = $B_ZhongchunRoad_JCLLX  ! Body
marker.flx.type (                   $M_ZhongchunRoad_JCLLX_BRF    ) = 4                       ! Flexible type

joint.from (                        $J_ZhongchunRoad_JCLLX        ) = $M_Isys                 ! From Marker
joint.to (                          $J_ZhongchunRoad_JCLLX        ) = $M_ZhongchunRoad_JCLLX_BRF ! To Marker
joint.type (                        $J_ZhongchunRoad_JCLLX        ) = 7                       ! Type
joint.st.pos (            1 ,       $J_ZhongchunRoad_JCLLX        ) = 8.66636399999999958E+03 ! Position
joint.par (               3 ,       $J_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! [-] Degrees of freedom
joint.par (              19 ,       $J_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! [m] Longitudinal position offset

prim.type (                         $P_ZhongchunRoad_JCLLX        ) = 2                       ! Type
prim.ref (                          $P_ZhongchunRoad_JCLLX        ) = $M_ZhongchunRoad_JCLLX_BRF ! Reference Marker
prim.ang (                1 ,       $P_ZhongchunRoad_JCLLX        ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_ZhongchunRoad_JCLLX        ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_ZhongchunRoad_JCLLX        ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_ZhongchunRoad_JCLLX        ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_ZhongchunRoad_JCLLX        ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_ZhongchunRoad_JCLLX        ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_ZhongchunRoad_JCLLX        ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                2 ,       $P_ZhongchunRoad_JCLLX        ) = 1.00000000000000000E+02 ! [m] Height
prim.par (                3 ,       $P_ZhongchunRoad_JCLLX        ) = 1.00000000000000000E+01 ! [m] Outer diameter
prim.par (                4 ,       $P_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_ZhongchunRoad_JCLLX        ) = 2.00000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_ZhongchunRoad_JCLLX        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_ZhongchunRoad_JCLLX        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_ZhongchunRoad_JCLLX        ) = 0.00000000000000000E+00 ! [-] Close geometry with


body.m (                            $B_ChunshenRoad_JCLLX         ) = 1.00000000000000000E+00 ! Mass of the Body
body.I.tens (             1 ,   1 , $B_ChunshenRoad_JCLLX         ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_ChunshenRoad_JCLLX         ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_ChunshenRoad_JCLLX         ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_ChunshenRoad_JCLLX         ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker

marker.type (                       $M_ChunshenRoad_JCLLX_BRF     ) = 1                       ! Type
marker.parent (                     $M_ChunshenRoad_JCLLX_BRF     ) = $B_ChunshenRoad_JCLLX   ! Body
marker.flx.type (                   $M_ChunshenRoad_JCLLX_BRF     ) = 4                       ! Flexible type

joint.from (                        $J_ChunshenRoad_JCLLX         ) = $M_Isys                 ! From Marker
joint.to (                          $J_ChunshenRoad_JCLLX         ) = $M_ChunshenRoad_JCLLX_BRF ! To Marker
joint.type (                        $J_ChunshenRoad_JCLLX         ) = 7                       ! Type
joint.st.pos (            1 ,       $J_ChunshenRoad_JCLLX         ) = 1.86763640000000014E+04 ! Position
joint.par (               3 ,       $J_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! [-] Degrees of freedom
joint.par (              19 ,       $J_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! [m] Longitudinal position offset

prim.type (                         $P_ChunshenRoad_JCLLX         ) = 2                       ! Type
prim.ref (                          $P_ChunshenRoad_JCLLX         ) = $M_ChunshenRoad_JCLLX_BRF ! Reference Marker
prim.ang (                1 ,       $P_ChunshenRoad_JCLLX         ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_ChunshenRoad_JCLLX         ) = 1.65000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_ChunshenRoad_JCLLX         ) = 8.50000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_ChunshenRoad_JCLLX         ) = 4.20000000000000000E+01 ! Colors (green component)
prim.color.g (            2 ,       $P_ChunshenRoad_JCLLX         ) = 1.07000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_ChunshenRoad_JCLLX         ) = 4.20000000000000000E+01 ! Colors (blue component)
prim.color.b (            2 ,       $P_ChunshenRoad_JCLLX         ) = 4.70000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                2 ,       $P_ChunshenRoad_JCLLX         ) = 1.00000000000000000E+02 ! [m] Height
prim.par (                3 ,       $P_ChunshenRoad_JCLLX         ) = 1.00000000000000000E+01 ! [m] Outer diameter
prim.par (                4 ,       $P_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_ChunshenRoad_JCLLX         ) = 2.00000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_ChunshenRoad_JCLLX         ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_ChunshenRoad_JCLLX         ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_ChunshenRoad_JCLLX         ) = 0.00000000000000000E+00 ! [-] Close geometry with


body.m (                            $B_SongjiangStation_HSH       ) = 1.00000000000000000E+00 ! Mass of the Body
body.I.tens (             1 ,   1 , $B_SongjiangStation_HSH       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_SongjiangStation_HSH       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_SongjiangStation_HSH       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_SongjiangStation_HSH       ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker

marker.type (                       $M_SongjiangStation_HSH_BRF   ) = 1                       ! Type
marker.parent (                     $M_SongjiangStation_HSH_BRF   ) = $B_SongjiangStation_HSH ! Body
marker.flx.type (                   $M_SongjiangStation_HSH_BRF   ) = 4                       ! Flexible type

joint.from (                        $J_SongjiangStation_HSH       ) = $M_Isys                 ! From Marker
joint.to (                          $J_SongjiangStation_HSH       ) = $M_SongjiangStation_HSH_BRF ! To Marker
joint.type (                        $J_SongjiangStation_HSH       ) = 7                       ! Type
joint.st.pos (            1 ,       $J_SongjiangStation_HSH       ) = 3.38963640000000014E+04 ! Position
joint.par (               3 ,       $J_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! [-] Degrees of freedom
joint.par (              19 ,       $J_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! [m] Longitudinal position offset

prim.type (                         $P_SongjiangStation_HSH       ) = 2                       ! Type
prim.ref (                          $P_SongjiangStation_HSH       ) = $M_SongjiangStation_HSH_BRF ! Reference Marker
prim.ang (                1 ,       $P_SongjiangStation_HSH       ) = { 90deg }               ! Angles
prim.color.r (            1 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.r (            2 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.g (            2 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.b (            2 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                2 ,       $P_SongjiangStation_HSH       ) = 1.00000000000000000E+02 ! [m] Height
prim.par (                3 ,       $P_SongjiangStation_HSH       ) = 1.00000000000000000E+01 ! [m] Outer diameter
prim.par (                4 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $P_SongjiangStation_HSH       ) = 2.00000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_SongjiangStation_HSH       ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_SongjiangStation_HSH       ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $P_SongjiangStation_HSH       ) = 0.00000000000000000E+00 ! [-] Close geometry with


!**********************************************************************
! Tracks
!**********************************************************************
track.type (                        $Trk_Track                    ) = 2                       ! Type
track.kind (                        $Trk_Track                    ) = 1                       ! Kind
track.excit.lat (                   $Trk_Track                    ) = null                    ! Track::EXC_TRACK_LATERAL
track.excit.vert (                  $Trk_Track                    ) = null                    ! Track::EXC_TRACK_VERTICAL
track.excit.roll (                  $Trk_Track                    ) = null                    ! Track::EXC_TRACK_ROLL
track.excit.left.lat (              $Trk_Track                    ) = null                    ! Track::EXC_RAIL_LATERAL_LEFT
track.excit.left.vert (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_VERTICAL_LEFT
track.excit.left.roll (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_ROLL_LEFT
track.excit.right.lat (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_LATERAL_RIGHT
track.excit.right.vert (            $Trk_Track                    ) = null                    ! Track::EXC_RAIL_VERTICAL_RIGHT
track.excit.right.roll (            $Trk_Track                    ) = null                    ! Track::EXC_RAIL_ROLL_RIGHT
track.excit.gauge (                 $Trk_Track                    ) = null                    ! Track::EXC_TRACK_GAUGE
track.meas.superelev.kind (         $Trk_Track                    ) = 1                       ! Superelevation kind (measured track)
track.meas.superelev.reflen (       $Trk_Track                    ) = 0.00000000000000000E+00 ! Superelevation reference length (measured track)
track.meas.len (                    $Trk_Track                    ) = 0.00000000000000000E+00 ! Total measured length
track.meas.discr.fromfile (         $Trk_Track                    ) = 0                       ! Discretisation from file
track.meas.discr.num (              $Trk_Track                    ) = 0                       ! Number of discretisation points
track.cart.file (                   $Trk_Track                    ) = ''                      ! Cartographic filename
track.meas.file (                   $Trk_Track                    ) = ''                      ! Measured filename
track.crg.dir (                     $Trk_Track                    ) = ''                      ! CRG file directory
track.excit.type (                  $Trk_Track                    ) = 0                       ! Excitations type
track.excit.start (                 $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations start
track.excit.end (                   $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations end
track.excit.fade.len (              $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations fade in/out
track.meas.sec.start (              $Trk_Track                    ) = 0.00000000000000000E+00 ! Section start
track.meas.sec.end (                $Trk_Track                    ) = 0.00000000000000000E+00 ! Section end
track.meas.datared.fromfile (       $Trk_Track                    ) = 0                       ! Data reduction from file
track.meas.datared.incr (           $Trk_Track                    ) = 0                       ! Data increment
track.meas.startend.fromexcit (     $Trk_Track                    ) = 0                       ! Start/End from excitation
track.meas.start (                  $Trk_Track                    ) = 0.00000000000000000E+00 ! Start
track.meas.fade.len (               $Trk_Track                    ) = 0.00000000000000000E+00 ! Fade length
track.cart.horizontal.curvature.kind ( $Trk_Track                 ) = 0                       ! 0=radius; 1=arc length; 2=chord length
track.cart.horizontal.curvature.reflen ( $Trk_Track               ) = 1.00000000000000000E+00 ! Reference length
track.cart.superelev.fromfile (     $Trk_Track                    ) = 0                       ! Superelevation from file (cartographic track)
track.cart.superelev.kind (         $Trk_Track                    ) = 1                       ! Superelevation kind (cartographic track)
track.cart.superelev.reflen (       $Trk_Track                    ) = 1.50000000000000000E+00 ! Superelevation reference length (cartographic track)
track.cart.discr.gen (              $Trk_Track                    ) = 1.00000000000000000E+00 ! Discr. gen
track.cart.discr.fine (             $Trk_Track                    ) = 5.00000000000000000E-01 ! Discr. fine
track.txt (                         $Trk_Track                    ) = ''                      ! Comment
track.plot.par (          1 ,       $Trk_Track                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   1 , $Trk_Track                    ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   1 ,   1 , $Trk_Track              ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   2 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   3 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   4 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   5 , $Trk_Track                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 , $Trk_Track                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 , $Trk_Track              ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 ,   1 , $Trk_Track        ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 ,   2 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 , $Trk_Track                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   1 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   2 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 , $Trk_Track              ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   2 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   3 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   4 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   5 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   6 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   7 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   8 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   9 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  10 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  11 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  12 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  13 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  14 ,   1 , $Trk_Track        ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  15 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  16 ,   1 , $Trk_Track        ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 , $Trk_Track                    ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   2 ,   1 , $Trk_Track        ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   3 ,   1 , $Trk_Track        ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   4 ,   1 , $Trk_Track        ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.cart.h.type (       1 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   1 , $Trk_Track                    ) = 3.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       2 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (        2 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   2 , $Trk_Track                    ) = 2.75000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,   2 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,   2 , $Trk_Track                    ) = -1.50000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,   2 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       3 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (        3 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   3 , $Trk_Track                    ) = 1.38893000000000001E+02 ! [m] L
track.cart.h.par (        2 ,   3 , $Trk_Track                    ) = -1.50000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,   3 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       4 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (        4 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   4 , $Trk_Track                    ) = 2.75000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,   4 , $Trk_Track                    ) = -1.50000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,   4 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,   4 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       5 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (        5 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   5 , $Trk_Track                    ) = 2.50000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,   5 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       6 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (        6 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   6 , $Trk_Track                    ) = 4.25000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,   6 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,   6 , $Trk_Track                    ) = 6.50000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,   6 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       7 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (        7 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   7 , $Trk_Track                    ) = 5.65173999999999978E+02 ! [m] L
track.cart.h.par (        2 ,   7 , $Trk_Track                    ) = 6.50000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,   7 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       8 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (        8 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   8 , $Trk_Track                    ) = 4.25000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,   8 , $Trk_Track                    ) = 6.50000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,   8 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,   8 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       9 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (        9 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   9 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,   9 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      10 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       10 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  10 , $Trk_Track                    ) = 3.75000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  10 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  10 , $Trk_Track                    ) = -5.50000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,  10 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      11 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       11 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  11 , $Trk_Track                    ) = 2.57297000000000025E+02 ! [m] L
track.cart.h.par (        2 ,  11 , $Trk_Track                    ) = -5.50000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,  11 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      12 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       12 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  12 , $Trk_Track                    ) = 3.75000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  12 , $Trk_Track                    ) = -5.50000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,  12 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  12 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      13 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       13 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  13 , $Trk_Track                    ) = 9.50000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  13 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      14 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       14 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  14 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  14 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  14 , $Trk_Track                    ) = 4.50000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,  14 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      15 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       15 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  15 , $Trk_Track                    ) = 8.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  15 , $Trk_Track                    ) = 4.50000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,  15 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      16 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       16 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  16 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  16 , $Trk_Track                    ) = 4.50000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,  16 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  16 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      17 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       17 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  17 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  17 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      18 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       18 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  18 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  18 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  18 , $Trk_Track                    ) = -6.00000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,  18 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      19 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       19 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  19 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  19 , $Trk_Track                    ) = -6.00000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,  19 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      20 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       20 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  20 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  20 , $Trk_Track                    ) = -6.00000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,  20 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  20 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      21 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       21 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  21 , $Trk_Track                    ) = 2.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  21 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      22 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       22 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  22 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  22 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  22 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  22 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      23 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       23 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  23 , $Trk_Track                    ) = 6.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  23 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  23 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      24 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       24 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  24 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  24 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  24 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  24 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      25 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       25 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  25 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  25 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      26 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       26 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  26 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  26 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  26 , $Trk_Track                    ) = -1.60000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  26 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      27 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       27 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  27 , $Trk_Track                    ) = 5.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  27 , $Trk_Track                    ) = -1.60000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  27 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      28 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       28 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  28 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  28 , $Trk_Track                    ) = -1.60000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  28 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  28 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      29 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       29 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  29 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  29 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      30 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       30 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  30 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  30 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  30 , $Trk_Track                    ) = -1.60000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  30 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      31 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       31 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  31 , $Trk_Track                    ) = 6.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  31 , $Trk_Track                    ) = -1.60000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  31 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      32 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       32 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  32 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  32 , $Trk_Track                    ) = -1.60000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  32 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  32 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      33 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       33 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  33 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  33 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      34 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       34 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  34 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  34 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  34 , $Trk_Track                    ) = 3.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  34 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      35 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       35 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  35 , $Trk_Track                    ) = 3.60000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  35 , $Trk_Track                    ) = 3.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  35 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      36 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       36 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  36 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  36 , $Trk_Track                    ) = 3.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  36 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  36 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      37 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       37 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  37 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  37 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      38 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       38 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  38 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  38 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  38 , $Trk_Track                    ) = -3.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  38 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      39 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       39 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  39 , $Trk_Track                    ) = 6.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  39 , $Trk_Track                    ) = -3.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  39 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      40 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       40 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  40 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  40 , $Trk_Track                    ) = -3.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  40 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  40 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      41 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       41 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  41 , $Trk_Track                    ) = 2.80000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  41 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      42 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       42 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  42 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  42 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  42 , $Trk_Track                    ) = 3.80000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  42 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      43 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       43 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  43 , $Trk_Track                    ) = 2.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  43 , $Trk_Track                    ) = 3.80000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  43 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      44 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       44 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  44 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  44 , $Trk_Track                    ) = 3.80000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  44 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  44 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      45 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       45 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  45 , $Trk_Track                    ) = 4.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  45 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      46 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       46 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  46 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  46 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  46 , $Trk_Track                    ) = -2.00000000000000000E+04 ! [m] R2
track.cart.h.par (       10 ,  46 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      47 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       47 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  47 , $Trk_Track                    ) = 2.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  47 , $Trk_Track                    ) = -2.00000000000000000E+04 ! [m] R
track.cart.h.par (       10 ,  47 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      48 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       48 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  48 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  48 , $Trk_Track                    ) = -2.00000000000000000E+04 ! [m] R1
track.cart.h.par (        3 ,  48 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  48 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      49 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       49 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  49 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  49 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      50 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       50 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  50 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  50 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  50 , $Trk_Track                    ) = 1.90000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  50 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      51 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       51 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  51 , $Trk_Track                    ) = 2.40000000000000000E+03 ! [m] L
track.cart.h.par (        2 ,  51 , $Trk_Track                    ) = 1.90000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  51 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      52 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       52 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  52 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  52 , $Trk_Track                    ) = 1.90000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  52 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  52 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      53 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       53 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  53 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  53 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      54 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       54 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  54 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  54 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  54 , $Trk_Track                    ) = 3.50000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  54 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      55 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       55 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  55 , $Trk_Track                    ) = 8.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  55 , $Trk_Track                    ) = 3.50000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  55 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      56 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       56 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  56 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  56 , $Trk_Track                    ) = 3.50000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  56 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  56 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      57 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       57 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  57 , $Trk_Track                    ) = 2.50000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  57 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      58 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       58 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  58 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  58 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  58 , $Trk_Track                    ) = -6.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  58 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      59 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       59 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  59 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  59 , $Trk_Track                    ) = -6.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  59 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      60 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       60 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  60 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  60 , $Trk_Track                    ) = -6.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  60 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  60 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      61 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       61 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  61 , $Trk_Track                    ) = 2.50000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  61 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      62 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       62 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  62 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  62 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  62 , $Trk_Track                    ) = -8.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  62 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      63 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       63 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  63 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.h.par (        2 ,  63 , $Trk_Track                    ) = -8.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  63 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      64 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       64 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  64 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  64 , $Trk_Track                    ) = -8.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  64 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  64 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      65 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       65 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  65 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  65 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      66 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       66 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  66 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  66 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  66 , $Trk_Track                    ) = -6.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  66 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      67 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       67 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  67 , $Trk_Track                    ) = 9.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  67 , $Trk_Track                    ) = -6.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  67 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      68 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       68 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  68 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  68 , $Trk_Track                    ) = -6.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  68 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  68 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      69 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       69 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  69 , $Trk_Track                    ) = 3.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  69 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      70 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       70 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  70 , $Trk_Track                    ) = 1.20000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  70 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  70 , $Trk_Track                    ) = -1.00000000000000000E+04 ! [m] R2
track.cart.h.par (       10 ,  70 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      71 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       71 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  71 , $Trk_Track                    ) = 8.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  71 , $Trk_Track                    ) = -1.00000000000000000E+04 ! [m] R
track.cart.h.par (       10 ,  71 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      72 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       72 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  72 , $Trk_Track                    ) = 1.20000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  72 , $Trk_Track                    ) = -1.00000000000000000E+04 ! [m] R1
track.cart.h.par (        3 ,  72 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  72 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      73 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       73 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  73 , $Trk_Track                    ) = 5.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  73 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      74 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       74 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  74 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  74 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  74 , $Trk_Track                    ) = 2.60000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  74 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      75 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       75 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  75 , $Trk_Track                    ) = 1.20000000000000000E+03 ! [m] L
track.cart.h.par (        2 ,  75 , $Trk_Track                    ) = 2.60000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  75 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      76 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       76 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  76 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  76 , $Trk_Track                    ) = 2.60000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  76 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  76 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      77 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       77 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  77 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  77 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      78 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       78 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  78 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  78 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  78 , $Trk_Track                    ) = 2.50000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  78 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      79 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       79 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  79 , $Trk_Track                    ) = 4.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  79 , $Trk_Track                    ) = 2.50000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  79 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      80 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       80 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  80 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  80 , $Trk_Track                    ) = 2.50000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  80 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  80 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      81 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (       81 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  81 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  81 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      82 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       82 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  82 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  82 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  82 , $Trk_Track                    ) = 5.00000000000000000E+04 ! [m] R2
track.cart.h.par (       10 ,  82 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      83 ,       $Trk_Track                    ) = 2                       ! Type
track.cart.h.txt (       83 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  83 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  83 , $Trk_Track                    ) = 5.00000000000000000E+04 ! [m] R
track.cart.h.par (       10 ,  83 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      84 ,       $Trk_Track                    ) = 4                       ! Type
track.cart.h.txt (       84 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,  84 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  84 , $Trk_Track                    ) = 5.00000000000000000E+04 ! [m] R1
track.cart.h.par (        3 ,  84 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  84 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       1 ,       $Trk_Track                    ) = 201                     ! Type
track.cart.v.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.v.par (        1 ,   1 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.v.par (        2 ,   1 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       1 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   1 , $Trk_Track                    ) = 3.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,   1 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       2 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (        2 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   2 , $Trk_Track                    ) = 2.75000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   2 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,   2 , $Trk_Track                    ) = -5.39999999999999994E-02 ! [m] U2
track.cart.s.par (       10 ,   2 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       3 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (        3 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   3 , $Trk_Track                    ) = 1.38893000000000001E+02 ! [m] L
track.cart.s.par (        2 ,   3 , $Trk_Track                    ) = -5.39999999999999994E-02 ! [m] U
track.cart.s.par (       10 ,   3 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       4 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (        4 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   4 , $Trk_Track                    ) = 2.75000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   4 , $Trk_Track                    ) = -5.39999999999999994E-02 ! [m] U1
track.cart.s.par (        3 ,   4 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,   4 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       5 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (        5 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   5 , $Trk_Track                    ) = 2.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,   5 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   5 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       6 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (        6 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   6 , $Trk_Track                    ) = 4.25000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   6 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,   6 , $Trk_Track                    ) = 1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,   6 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       7 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (        7 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   7 , $Trk_Track                    ) = 5.65173999999999978E+02 ! [m] L
track.cart.s.par (        2 ,   7 , $Trk_Track                    ) = 1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,   7 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       8 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (        8 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   8 , $Trk_Track                    ) = 4.25000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   8 , $Trk_Track                    ) = 1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,   8 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,   8 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       9 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (        9 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   9 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   9 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   9 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      10 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       10 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  10 , $Trk_Track                    ) = 3.75000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  10 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  10 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,  10 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      11 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       11 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  11 , $Trk_Track                    ) = 2.57297000000000025E+02 ! [m] L
track.cart.s.par (        2 ,  11 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,  11 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      12 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       12 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  12 , $Trk_Track                    ) = 3.75000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  12 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,  12 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  12 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      13 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       13 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  13 , $Trk_Track                    ) = 9.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  13 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  13 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      14 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       14 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  14 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  14 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  14 , $Trk_Track                    ) = 1.00000000000000006E-01 ! [m] U2
track.cart.s.par (       10 ,  14 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      15 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       15 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  15 , $Trk_Track                    ) = 8.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  15 , $Trk_Track                    ) = 1.00000000000000006E-01 ! [m] U
track.cart.s.par (       10 ,  15 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      16 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       16 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  16 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  16 , $Trk_Track                    ) = 1.00000000000000006E-01 ! [m] U1
track.cart.s.par (        3 ,  16 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  16 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      17 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       17 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  17 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  17 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  17 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      18 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       18 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  18 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  18 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  18 , $Trk_Track                    ) = -7.00000000000000067E-02 ! [m] U2
track.cart.s.par (       10 ,  18 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      19 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       19 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  19 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  19 , $Trk_Track                    ) = -7.00000000000000067E-02 ! [m] U
track.cart.s.par (       10 ,  19 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      20 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       20 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  20 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  20 , $Trk_Track                    ) = -7.00000000000000067E-02 ! [m] U1
track.cart.s.par (        3 ,  20 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  20 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      21 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       21 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  21 , $Trk_Track                    ) = 2.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  21 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  21 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      22 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       22 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  22 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  22 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  22 , $Trk_Track                    ) = 2.99999999999999989E-02 ! [m] U2
track.cart.s.par (       10 ,  22 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      23 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       23 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  23 , $Trk_Track                    ) = 6.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  23 , $Trk_Track                    ) = 2.99999999999999989E-02 ! [m] U
track.cart.s.par (       10 ,  23 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      24 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       24 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  24 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  24 , $Trk_Track                    ) = 2.99999999999999989E-02 ! [m] U1
track.cart.s.par (        3 ,  24 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  24 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      25 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       25 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  25 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  25 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  25 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      26 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       26 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  26 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  26 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  26 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,  26 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      27 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       27 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  27 , $Trk_Track                    ) = 5.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  27 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,  27 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      28 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       28 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  28 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  28 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,  28 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  28 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      29 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       29 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  29 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  29 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  29 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      30 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       30 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  30 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  30 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  30 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,  30 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      31 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       31 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  31 , $Trk_Track                    ) = 6.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  31 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,  31 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      32 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       32 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  32 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  32 , $Trk_Track                    ) = -1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,  32 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  32 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      33 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       33 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  33 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  33 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  33 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      34 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       34 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  34 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  34 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  34 , $Trk_Track                    ) = 8.00000000000000017E-02 ! [m] U2
track.cart.s.par (       10 ,  34 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      35 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       35 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  35 , $Trk_Track                    ) = 3.60000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  35 , $Trk_Track                    ) = 8.00000000000000017E-02 ! [m] U
track.cart.s.par (       10 ,  35 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      36 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       36 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  36 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  36 , $Trk_Track                    ) = 8.00000000000000017E-02 ! [m] U1
track.cart.s.par (        3 ,  36 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  36 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      37 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       37 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  37 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  37 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  37 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      38 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       38 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  38 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  38 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  38 , $Trk_Track                    ) = -8.00000000000000017E-02 ! [m] U2
track.cart.s.par (       10 ,  38 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      39 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       39 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  39 , $Trk_Track                    ) = 6.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  39 , $Trk_Track                    ) = -8.00000000000000017E-02 ! [m] U
track.cart.s.par (       10 ,  39 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      40 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       40 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  40 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  40 , $Trk_Track                    ) = -8.00000000000000017E-02 ! [m] U1
track.cart.s.par (        3 ,  40 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  40 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      41 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       41 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  41 , $Trk_Track                    ) = 2.80000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  41 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  41 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      42 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       42 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  42 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  42 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  42 , $Trk_Track                    ) = 7.00000000000000067E-02 ! [m] U2
track.cart.s.par (       10 ,  42 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      43 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       43 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  43 , $Trk_Track                    ) = 2.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  43 , $Trk_Track                    ) = 7.00000000000000067E-02 ! [m] U
track.cart.s.par (       10 ,  43 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      44 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       44 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  44 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  44 , $Trk_Track                    ) = 7.00000000000000067E-02 ! [m] U1
track.cart.s.par (        3 ,  44 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  44 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      45 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       45 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  45 , $Trk_Track                    ) = 4.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  45 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  45 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      46 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       46 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  46 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  46 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  46 , $Trk_Track                    ) = -1.00000000000000002E-02 ! [m] U2
track.cart.s.par (       10 ,  46 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      47 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       47 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  47 , $Trk_Track                    ) = 2.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  47 , $Trk_Track                    ) = -1.00000000000000002E-02 ! [m] U
track.cart.s.par (       10 ,  47 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      48 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       48 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  48 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  48 , $Trk_Track                    ) = -1.00000000000000002E-02 ! [m] U1
track.cart.s.par (        3 ,  48 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  48 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      49 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       49 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  49 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  49 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  49 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      50 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       50 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  50 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  50 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  50 , $Trk_Track                    ) = 9.50000000000000011E-02 ! [m] U2
track.cart.s.par (       10 ,  50 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      51 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       51 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  51 , $Trk_Track                    ) = 2.40000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  51 , $Trk_Track                    ) = 9.50000000000000011E-02 ! [m] U
track.cart.s.par (       10 ,  51 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      52 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       52 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  52 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  52 , $Trk_Track                    ) = 9.50000000000000011E-02 ! [m] U1
track.cart.s.par (        3 ,  52 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  52 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      53 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       53 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  53 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  53 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  53 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      54 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       54 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  54 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  54 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  54 , $Trk_Track                    ) = 8.00000000000000017E-02 ! [m] U2
track.cart.s.par (       10 ,  54 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      55 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       55 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  55 , $Trk_Track                    ) = 8.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  55 , $Trk_Track                    ) = 8.00000000000000017E-02 ! [m] U
track.cart.s.par (       10 ,  55 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      56 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       56 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  56 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  56 , $Trk_Track                    ) = 8.00000000000000017E-02 ! [m] U1
track.cart.s.par (        3 ,  56 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  56 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      57 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       57 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  57 , $Trk_Track                    ) = 2.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  57 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  57 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      58 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       58 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  58 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  58 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  58 , $Trk_Track                    ) = -2.99999999999999989E-02 ! [m] U2
track.cart.s.par (       10 ,  58 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      59 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       59 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  59 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  59 , $Trk_Track                    ) = -2.99999999999999989E-02 ! [m] U
track.cart.s.par (       10 ,  59 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      60 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       60 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  60 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  60 , $Trk_Track                    ) = -2.99999999999999989E-02 ! [m] U1
track.cart.s.par (        3 ,  60 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  60 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      61 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       61 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  61 , $Trk_Track                    ) = 2.50000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  61 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  61 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      62 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       62 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  62 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  62 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  62 , $Trk_Track                    ) = -2.00000000000000004E-02 ! [m] U2
track.cart.s.par (       10 ,  62 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      63 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       63 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  63 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  63 , $Trk_Track                    ) = -2.00000000000000004E-02 ! [m] U
track.cart.s.par (       10 ,  63 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      64 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       64 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  64 , $Trk_Track                    ) = 1.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  64 , $Trk_Track                    ) = -2.00000000000000004E-02 ! [m] U1
track.cart.s.par (        3 ,  64 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  64 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      65 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       65 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  65 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  65 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  65 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      66 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       66 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  66 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  66 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  66 , $Trk_Track                    ) = -5.00000000000000028E-02 ! [m] U2
track.cart.s.par (       10 ,  66 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      67 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       67 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  67 , $Trk_Track                    ) = 9.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  67 , $Trk_Track                    ) = -5.00000000000000028E-02 ! [m] U
track.cart.s.par (       10 ,  67 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      68 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       68 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  68 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  68 , $Trk_Track                    ) = -5.00000000000000028E-02 ! [m] U1
track.cart.s.par (        3 ,  68 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  68 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      69 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       69 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  69 , $Trk_Track                    ) = 3.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  69 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  69 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      70 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       70 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  70 , $Trk_Track                    ) = 1.20000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  70 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  70 , $Trk_Track                    ) = -2.99999999999999989E-02 ! [m] U2
track.cart.s.par (       10 ,  70 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      71 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       71 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  71 , $Trk_Track                    ) = 8.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  71 , $Trk_Track                    ) = -2.99999999999999989E-02 ! [m] U
track.cart.s.par (       10 ,  71 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      72 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       72 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  72 , $Trk_Track                    ) = 1.20000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  72 , $Trk_Track                    ) = -2.99999999999999989E-02 ! [m] U1
track.cart.s.par (        3 ,  72 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  72 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      73 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       73 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  73 , $Trk_Track                    ) = 5.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  73 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  73 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      74 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       74 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  74 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  74 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  74 , $Trk_Track                    ) = 1.15000000000000005E-01 ! [m] U2
track.cart.s.par (       10 ,  74 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      75 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       75 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  75 , $Trk_Track                    ) = 1.20000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  75 , $Trk_Track                    ) = 1.15000000000000005E-01 ! [m] U
track.cart.s.par (       10 ,  75 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      76 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       76 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  76 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  76 , $Trk_Track                    ) = 1.15000000000000005E-01 ! [m] U1
track.cart.s.par (        3 ,  76 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  76 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      77 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       77 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  77 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  77 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  77 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      78 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       78 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  78 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  78 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  78 , $Trk_Track                    ) = 1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,  78 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      79 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       79 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  79 , $Trk_Track                    ) = 4.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  79 , $Trk_Track                    ) = 1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,  79 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      80 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       80 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  80 , $Trk_Track                    ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  80 , $Trk_Track                    ) = 1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,  80 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  80 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      81 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       81 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  81 , $Trk_Track                    ) = 2.00000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  81 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  81 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      82 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       82 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  82 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  82 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  82 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  82 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      83 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (       83 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  83 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  83 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  83 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      84 ,       $Trk_Track                    ) = 103                     ! Type
track.cart.s.txt (       84 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,  84 , $Trk_Track                    ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  84 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  84 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  84 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2

                                                                                                                                                                          

!file.version=3.5! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20210000
version.desc   = ''
version.build  = 101

!**********************************************************************
!  Global parameters
!**********************************************************************
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = 9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = 2.00000000000000000E+01 ! Vehicle initial velocity
vehicle.applystartvel                                               = 1                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = $Trk_Track_Virtual      ! Active Track element
prop3d.bg.base.color.r                                              = 2.15000000000000000E+02 ! Background color (red component)
prop3d.bg.base.color.g                                              = 2.15000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.15000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = -4.81525039672899524E+00 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -2.57934188842768730E+00 ! Position
view.pos (                3 ,       $V_WorkingView                ) = -1.67621493339535732E+00 ! Position
view.orient (             1 ,       $V_WorkingView                ) = 4.17981194930262423E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = 6.32523622560086873E-01 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = -5.45341991188455055E-01 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = -3.57502028294589935E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 6.10865238198015303E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 9.99999977648258209E-03 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 1.47065869140625000E+04 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.ele (                $V_WorkingView                ) = null                    ! Rotation center element
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 1                       ! Camera is moved
view.motion.ref (                   $V_WorkingView                ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_WorkingView                ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_WorkingView                ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_WorkingView                ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_WorkingView                ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_WorkingView                ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_WorkingView                ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_WorkingView                ) = -4.81525039672899524E+00 ! Relative position
view.motion.pos (         2 ,       $V_WorkingView                ) = -2.57934188842768730E+00 ! Relative position
view.motion.pos (         3 ,       $V_WorkingView                ) = -1.67621493339535732E+00 ! Relative position
view.motion.orient (      1 ,       $V_WorkingView                ) = 4.17981194930262423E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_WorkingView                ) = 6.32523622560086873E-01 ! Relative orientation
view.motion.orient (      3 ,       $V_WorkingView                ) = -5.45341991188455055E-01 ! Relative orientation
view.motion.orient (      4 ,       $V_WorkingView                ) = -3.57502028294589935E-01 ! Relative orientation

view.type (                         $V_Perspective_Moved          ) = 0                       ! Projection type
view.pos (                1 ,       $V_Perspective_Moved          ) = -2.56024833446238631E+00 ! Position
view.pos (                2 ,       $V_Perspective_Moved          ) = 5.61697721481323242E-01 ! Position
view.pos (                3 ,       $V_Perspective_Moved          ) = -7.10260748863220215E-01 ! Position
view.orient (             1 ,       $V_Perspective_Moved          ) = 5.69158155810647548E-01 ! Orientation
view.orient (             2 ,       $V_Perspective_Moved          ) = 4.69129041568876859E-01 ! Orientation
view.orient (             3 ,       $V_Perspective_Moved          ) = -4.25183101755699622E-01 ! Orientation
view.orient (             4 ,       $V_Perspective_Moved          ) = -5.24591523008418381E-01 ! Orientation
view.angle (                        $V_Perspective_Moved          ) = 6.10865238198015303E-01 ! Lens angle
view.fclip.auto (                   $V_Perspective_Moved          ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Perspective_Moved          ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_Perspective_Moved          ) = 1.01413190364837646E-01 ! Front clipping plane value
view.bclip.value (                  $V_Perspective_Moved          ) = 1.01413185119628906E+02 ! Back clipping plane value
view.rotcenter.type (               $V_Perspective_Moved          ) = 0                       ! Rotation center type
view.rotcenter.ele (                $V_Perspective_Moved          ) = null                    ! Rotation center element
view.rotcenter.adjust (             $V_Perspective_Moved          ) = 0                       ! Adjust rotation center
view.motion.active (                $V_Perspective_Moved          ) = 1                       ! Camera is moved
view.motion.ref (                   $V_Perspective_Moved          ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_Perspective_Moved          ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_Perspective_Moved          ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_Perspective_Moved          ) = -2.56024833446238631E+00 ! Relative position
view.motion.pos (         2 ,       $V_Perspective_Moved          ) = 5.61697721481323242E-01 ! Relative position
view.motion.pos (         3 ,       $V_Perspective_Moved          ) = -7.10260748863220215E-01 ! Relative position
view.motion.orient (      1 ,       $V_Perspective_Moved          ) = 5.69158155810647548E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_Perspective_Moved          ) = 4.69129041568876859E-01 ! Relative orientation
view.motion.orient (      3 ,       $V_Perspective_Moved          ) = -4.25183101755699622E-01 ! Relative orientation
view.motion.orient (      4 ,       $V_Perspective_Moved          ) = -5.24591523008418381E-01 ! Relative orientation

view.type (                         $V_Perspective_Fixed          ) = 0                       ! Projection type
view.pos (                1 ,       $V_Perspective_Fixed          ) = -2.56024833446238631E+00 ! Position
view.pos (                2 ,       $V_Perspective_Fixed          ) = 5.61697721481323242E-01 ! Position
view.pos (                3 ,       $V_Perspective_Fixed          ) = -7.10260748863220215E-01 ! Position
view.orient (             1 ,       $V_Perspective_Fixed          ) = 5.69158155810647548E-01 ! Orientation
view.orient (             2 ,       $V_Perspective_Fixed          ) = 4.69129041568876859E-01 ! Orientation
view.orient (             3 ,       $V_Perspective_Fixed          ) = -4.25183101755699622E-01 ! Orientation
view.orient (             4 ,       $V_Perspective_Fixed          ) = -5.24591523008418381E-01 ! Orientation
view.angle (                        $V_Perspective_Fixed          ) = 6.10865238198015303E-01 ! Lens angle
view.fclip.auto (                   $V_Perspective_Fixed          ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Perspective_Fixed          ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_Perspective_Fixed          ) = 1.01413190364837646E-01 ! Front clipping plane value
view.bclip.value (                  $V_Perspective_Fixed          ) = 1.01413185119628906E+02 ! Back clipping plane value
view.rotcenter.type (               $V_Perspective_Fixed          ) = 0                       ! Rotation center type
view.rotcenter.ele (                $V_Perspective_Fixed          ) = null                    ! Rotation center element
view.rotcenter.adjust (             $V_Perspective_Fixed          ) = 0                       ! Adjust rotation center
view.motion.active (                $V_Perspective_Fixed          ) = 0                       ! Camera is moved
view.motion.ref (                   $V_Perspective_Fixed          ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_Perspective_Fixed          ) = 0                       ! Moved camera direction x
view.motion.y (                     $V_Perspective_Fixed          ) = 0                       ! Moved camera direction y
view.motion.z (                     $V_Perspective_Fixed          ) = 0                       ! Moved camera direction z
view.motion.al (                    $V_Perspective_Fixed          ) = 0                       ! Moved camera direction alpha
view.motion.be (                    $V_Perspective_Fixed          ) = 0                       ! Moved camera direction beta
view.motion.ga (                    $V_Perspective_Fixed          ) = 0                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_Perspective_Fixed          ) = -2.56024833446238631E+00 ! Relative position
view.motion.pos (         2 ,       $V_Perspective_Fixed          ) = 5.61697721481323242E-01 ! Relative position
view.motion.pos (         3 ,       $V_Perspective_Fixed          ) = -7.10260748863220215E-01 ! Relative position
view.motion.orient (      1 ,       $V_Perspective_Fixed          ) = 5.69158155810647548E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_Perspective_Fixed          ) = 4.69129041568876859E-01 ! Relative orientation
view.motion.orient (      3 ,       $V_Perspective_Fixed          ) = -4.25183101755699622E-01 ! Relative orientation
view.motion.orient (      4 ,       $V_Perspective_Fixed          ) = -5.24591523008418381E-01 ! Relative orientation

view.type (                         $V_RWT_Wheelset               ) = 1                       ! Projection type
view.pos (                1 ,       $V_RWT_Wheelset               ) = -9.21479108388167489E-01 ! Position
view.pos (                2 ,       $V_RWT_Wheelset               ) = 0.00000000000000000E+00 ! Position
view.pos (                3 ,       $V_RWT_Wheelset               ) = -2.30000000000000010E-01 ! Position
view.orient (             1 ,       $V_RWT_Wheelset               ) = -5.00000000000000000E-01 ! Orientation
view.orient (             2 ,       $V_RWT_Wheelset               ) = -5.00000000000000000E-01 ! Orientation
view.orient (             3 ,       $V_RWT_Wheelset               ) = 5.00000000000000000E-01 ! Orientation
view.orient (             4 ,       $V_RWT_Wheelset               ) = 5.00000000000000000E-01 ! Orientation
view.height (                       $V_RWT_Wheelset               ) = 1.00000000000000000E+00 ! View height
view.fclip.auto (                   $V_RWT_Wheelset               ) = 0                       ! Front clipping plane auto
view.bclip.auto (                   $V_RWT_Wheelset               ) = 0                       ! Back clipping plane auto
view.fclip.value (                  $V_RWT_Wheelset               ) = 9.99499037861824036E-02 ! Front clipping plane value
view.bclip.value (                  $V_RWT_Wheelset               ) = 9.99498977661132812E+01 ! Back clipping plane value
view.rotcenter.type (               $V_RWT_Wheelset               ) = 0                       ! Rotation center type
view.rotcenter.ele (                $V_RWT_Wheelset               ) = $M_Isys_TrackFrame_RWP_Right ! Rotation center element
view.rotcenter.adjust (             $V_RWT_Wheelset               ) = 0                       ! Adjust rotation center
view.motion.active (                $V_RWT_Wheelset               ) = 1                       ! Camera is moved
view.motion.ref (                   $V_RWT_Wheelset               ) = $M_Isys_Track_Moved     ! Marker
view.motion.x (                     $V_RWT_Wheelset               ) = 1                       ! Moved camera direction x
view.motion.y (                     $V_RWT_Wheelset               ) = 1                       ! Moved camera direction y
view.motion.z (                     $V_RWT_Wheelset               ) = 1                       ! Moved camera direction z
view.motion.al (                    $V_RWT_Wheelset               ) = 1                       ! Moved camera direction alpha
view.motion.be (                    $V_RWT_Wheelset               ) = 1                       ! Moved camera direction beta
view.motion.ga (                    $V_RWT_Wheelset               ) = 1                       ! Moved camera direction gamma
view.motion.pos (         1 ,       $V_RWT_Wheelset               ) = -9.21479108388167489E-01 ! Relative position
view.motion.pos (         2 ,       $V_RWT_Wheelset               ) = 0.00000000000000000E+00 ! Relative position
view.motion.pos (         3 ,       $V_RWT_Wheelset               ) = -2.30000000000000010E-01 ! Relative position
view.motion.orient (      1 ,       $V_RWT_Wheelset               ) = -5.00000000000000000E-01 ! Relative orientation
view.motion.orient (      2 ,       $V_RWT_Wheelset               ) = -5.00000000000000000E-01 ! Relative orientation
view.motion.orient (      3 ,       $V_RWT_Wheelset               ) = 5.00000000000000000E-01 ! Relative orientation
view.motion.orient (      4 ,       $V_RWT_Wheelset               ) = 5.00000000000000000E-01 ! Relative orientation

viewgroup.begin (                   $G_RWP_Right                  )                           ! $G_RWP_Right
   view.type (                      $V_Exterior                   ) = 0                       ! Projection type
   view.pos (             1 ,       $V_Exterior                   ) = -2.56416511535644531E+00 ! Position
   view.pos (             2 ,       $V_Exterior                   ) = 5.59527456760406494E-01 ! Position
   view.pos (             3 ,       $V_Exterior                   ) = -6.61686539649963379E-01 ! Position
   view.orient (          1 ,       $V_Exterior                   ) = 5.63800503067136360E-01 ! Orientation
   view.orient (          2 ,       $V_Exterior                   ) = 4.65752324582245747E-01 ! Orientation
   view.orient (          3 ,       $V_Exterior                   ) = -4.29538688869741836E-01 ! Orientation
   view.orient (          4 ,       $V_Exterior                   ) = -5.29811551074097942E-01 ! Orientation
   view.angle (                     $V_Exterior                   ) = 6.10865238198015303E-01 ! Lens angle
   view.fclip.auto (                $V_Exterior                   ) = 1                       ! Front clipping plane auto
   view.bclip.auto (                $V_Exterior                   ) = 1                       ! Back clipping plane auto
   view.fclip.value (               $V_Exterior                   ) = 1.01421564817428589E-01 ! Front clipping plane value
   view.bclip.value (               $V_Exterior                   ) = 1.01421562194824219E+02 ! Back clipping plane value
   view.rotcenter.type (            $V_Exterior                   ) = 1                       ! Rotation center type
   view.rotcenter.ele (             $V_Exterior                   ) = $M_B_Ballast_ProfRef_RWP_Right ! Rotation center element
   view.rotcenter.adjust (          $V_Exterior                   ) = 0                       ! Adjust rotation center
   view.motion.active (             $V_Exterior                   ) = 1                       ! Camera is moved
   view.motion.ref (                $V_Exterior                   ) = $M_Isys_TrackFrame_RWP_Right ! Marker
   view.motion.x (                  $V_Exterior                   ) = 1                       ! Moved camera direction x
   view.motion.y (                  $V_Exterior                   ) = 1                       ! Moved camera direction y
   view.motion.z (                  $V_Exterior                   ) = 1                       ! Moved camera direction z
   view.motion.al (                 $V_Exterior                   ) = 1                       ! Moved camera direction alpha
   view.motion.be (                 $V_Exterior                   ) = 1                       ! Moved camera direction beta
   view.motion.ga (                 $V_Exterior                   ) = 1                       ! Moved camera direction gamma
   view.motion.pos (      1 ,       $V_Exterior                   ) = -1.38000000000000012E+00 ! Relative position
   view.motion.pos (      2 ,       $V_Exterior                   ) = 1.87500000000000000E+00 ! Relative position
   view.motion.pos (      3 ,       $V_Exterior                   ) = -4.60000000000000020E-01 ! Relative position
   view.motion.orient (   1 ,       $V_Exterior                   ) = 5.99999999999999978E-01 ! Relative orientation
   view.motion.orient (   2 ,       $V_Exterior                   ) = 3.49999999999999978E-01 ! Relative orientation
   view.motion.orient (   3 ,       $V_Exterior                   ) = -3.49999999999999978E-01 ! Relative orientation
   view.motion.orient (   4 ,       $V_Exterior                   ) = -5.99999999999999978E-01 ! Relative orientation

   view.type (                      $V_Contact                    ) = 1                       ! Projection type
   view.pos (             1 ,       $V_Contact                    ) = -2.56416511535644531E+00 ! Position
   view.pos (             2 ,       $V_Contact                    ) = 5.59527456760406494E-01 ! Position
   view.pos (             3 ,       $V_Contact                    ) = -6.61686539649963379E-01 ! Position
   view.orient (          1 ,       $V_Contact                    ) = 5.63800503067136360E-01 ! Orientation
   view.orient (          2 ,       $V_Contact                    ) = 4.65752324582245747E-01 ! Orientation
   view.orient (          3 ,       $V_Contact                    ) = -4.29538688869741836E-01 ! Orientation
   view.orient (          4 ,       $V_Contact                    ) = -5.29811551074097942E-01 ! Orientation
   view.angle (                     $V_Contact                    ) = 6.10865238198015303E-01 ! Lens angle
   view.height (                    $V_Contact                    ) = 1.00000000000000006E-01 ! View height
   view.fclip.auto (                $V_Contact                    ) = 0                       ! Front clipping plane auto
   view.bclip.auto (                $V_Contact                    ) = 0                       ! Back clipping plane auto
   view.fclip.value (               $V_Contact                    ) = 0.00000000000000000E+00 ! Front clipping plane value
   view.bclip.value (               $V_Contact                    ) = 1.38000000000000012E+00 ! Back clipping plane value
   view.rotcenter.type (            $V_Contact                    ) = 1                       ! Rotation center type
   view.rotcenter.ele (             $V_Contact                    ) = $M_B_Ballast_ProfRef_RWP_Right ! Rotation center element
   view.rotcenter.adjust (          $V_Contact                    ) = 0                       ! Adjust rotation center
   view.motion.active (             $V_Contact                    ) = 1                       ! Camera is moved
   view.motion.ref (                $V_Contact                    ) = $M_B_Wheelset_ProfRef_RWP_Right ! Marker
   view.motion.x (                  $V_Contact                    ) = 1                       ! Moved camera direction x
   view.motion.y (                  $V_Contact                    ) = 1                       ! Moved camera direction y
   view.motion.z (                  $V_Contact                    ) = 1                       ! Moved camera direction z
   view.motion.al (                 $V_Contact                    ) = 1                       ! Moved camera direction alpha
   view.motion.be (                 $V_Contact                    ) = 1                       ! Moved camera direction beta
   view.motion.ga (                 $V_Contact                    ) = 1                       ! Moved camera direction gamma
   view.motion.pos (      1 ,       $V_Contact                    ) = -9.20000000000000040E-01 ! Relative position
   view.motion.pos (      2 ,       $V_Contact                    ) = 0.00000000000000000E+00 ! Relative position
   view.motion.pos (      3 ,       $V_Contact                    ) = 0.00000000000000000E+00 ! Relative position
   view.motion.orient (   1 ,       $V_Contact                    ) = 5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   2 ,       $V_Contact                    ) = 5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   3 ,       $V_Contact                    ) = -5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   4 ,       $V_Contact                    ) = -5.00000000000000000E-01 ! Relative orientation

viewgroup.end (                     $G_RWP_Right                  )                           ! $G_RWP_Right

viewgroup.begin (                   $G_RWP_Left                   )                           ! $G_RWP_Left
   view.type (                      $V_Exterior                   ) = 0                       ! Projection type
   view.pos (             1 ,       $V_Exterior                   ) = -2.56416511535644531E+00 ! Position
   view.pos (             2 ,       $V_Exterior                   ) = 5.59527456760406494E-01 ! Position
   view.pos (             3 ,       $V_Exterior                   ) = -6.61686539649963379E-01 ! Position
   view.orient (          1 ,       $V_Exterior                   ) = 5.63800503067136360E-01 ! Orientation
   view.orient (          2 ,       $V_Exterior                   ) = 4.65752324582245747E-01 ! Orientation
   view.orient (          3 ,       $V_Exterior                   ) = -4.29538688869741836E-01 ! Orientation
   view.orient (          4 ,       $V_Exterior                   ) = -5.29811551074097942E-01 ! Orientation
   view.angle (                     $V_Exterior                   ) = 6.10865238198015303E-01 ! Lens angle
   view.fclip.auto (                $V_Exterior                   ) = 1                       ! Front clipping plane auto
   view.bclip.auto (                $V_Exterior                   ) = 1                       ! Back clipping plane auto
   view.fclip.value (               $V_Exterior                   ) = 1.01421564817428589E-01 ! Front clipping plane value
   view.bclip.value (               $V_Exterior                   ) = 1.01421562194824219E+02 ! Back clipping plane value
   view.rotcenter.type (            $V_Exterior                   ) = 1                       ! Rotation center type
   view.rotcenter.ele (             $V_Exterior                   ) = $M_B_Ballast_ProfRef_RWP_Left ! Rotation center element
   view.rotcenter.adjust (          $V_Exterior                   ) = 0                       ! Adjust rotation center
   view.motion.active (             $V_Exterior                   ) = 1                       ! Camera is moved
   view.motion.ref (                $V_Exterior                   ) = $M_Isys_TrackFrame_RWP_Left ! Marker
   view.motion.x (                  $V_Exterior                   ) = 1                       ! Moved camera direction x
   view.motion.y (                  $V_Exterior                   ) = 1                       ! Moved camera direction y
   view.motion.z (                  $V_Exterior                   ) = 1                       ! Moved camera direction z
   view.motion.al (                 $V_Exterior                   ) = 1                       ! Moved camera direction alpha
   view.motion.be (                 $V_Exterior                   ) = 1                       ! Moved camera direction beta
   view.motion.ga (                 $V_Exterior                   ) = 1                       ! Moved camera direction gamma
   view.motion.pos (      1 ,       $V_Exterior                   ) = -1.38000000000000012E+00 ! Relative position
   view.motion.pos (      2 ,       $V_Exterior                   ) = -1.87500000000000000E+00 ! Relative position
   view.motion.pos (      3 ,       $V_Exterior                   ) = -4.60000000000000020E-01 ! Relative position
   view.motion.orient (   1 ,       $V_Exterior                   ) = -3.49999999999999978E-01 ! Relative orientation
   view.motion.orient (   2 ,       $V_Exterior                   ) = -5.99999999999999978E-01 ! Relative orientation
   view.motion.orient (   3 ,       $V_Exterior                   ) = 5.99999999999999978E-01 ! Relative orientation
   view.motion.orient (   4 ,       $V_Exterior                   ) = 3.49999999999999978E-01 ! Relative orientation

   view.type (                      $V_Contact                    ) = 1                       ! Projection type
   view.pos (             1 ,       $V_Contact                    ) = -2.56416511535644531E+00 ! Position
   view.pos (             2 ,       $V_Contact                    ) = 5.59527456760406494E-01 ! Position
   view.pos (             3 ,       $V_Contact                    ) = -6.61686539649963379E-01 ! Position
   view.orient (          1 ,       $V_Contact                    ) = 5.63800503067136360E-01 ! Orientation
   view.orient (          2 ,       $V_Contact                    ) = 4.65752324582245747E-01 ! Orientation
   view.orient (          3 ,       $V_Contact                    ) = -4.29538688869741836E-01 ! Orientation
   view.orient (          4 ,       $V_Contact                    ) = -5.29811551074097942E-01 ! Orientation
   view.angle (                     $V_Contact                    ) = 6.10865238198015303E-01 ! Lens angle
   view.height (                    $V_Contact                    ) = 1.00000000000000006E-01 ! View height
   view.fclip.auto (                $V_Contact                    ) = 0                       ! Front clipping plane auto
   view.bclip.auto (                $V_Contact                    ) = 0                       ! Back clipping plane auto
   view.fclip.value (               $V_Contact                    ) = 0.00000000000000000E+00 ! Front clipping plane value
   view.bclip.value (               $V_Contact                    ) = 1.38000000000000012E+00 ! Back clipping plane value
   view.rotcenter.type (            $V_Contact                    ) = 1                       ! Rotation center type
   view.rotcenter.ele (             $V_Contact                    ) = $M_B_Ballast_ProfRef_RWP_Left ! Rotation center element
   view.rotcenter.adjust (          $V_Contact                    ) = 0                       ! Adjust rotation center
   view.motion.active (             $V_Contact                    ) = 1                       ! Camera is moved
   view.motion.ref (                $V_Contact                    ) = $M_B_Wheelset_ProfRef_RWP_Left ! Marker
   view.motion.x (                  $V_Contact                    ) = 1                       ! Moved camera direction x
   view.motion.y (                  $V_Contact                    ) = 1                       ! Moved camera direction y
   view.motion.z (                  $V_Contact                    ) = 1                       ! Moved camera direction z
   view.motion.al (                 $V_Contact                    ) = 1                       ! Moved camera direction alpha
   view.motion.be (                 $V_Contact                    ) = 1                       ! Moved camera direction beta
   view.motion.ga (                 $V_Contact                    ) = 1                       ! Moved camera direction gamma
   view.motion.pos (      1 ,       $V_Contact                    ) = -9.20000000000000040E-01 ! Relative position
   view.motion.pos (      2 ,       $V_Contact                    ) = 0.00000000000000000E+00 ! Relative position
   view.motion.pos (      3 ,       $V_Contact                    ) = 0.00000000000000000E+00 ! Relative position
   view.motion.orient (   1 ,       $V_Contact                    ) = 5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   2 ,       $V_Contact                    ) = 5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   3 ,       $V_Contact                    ) = -5.00000000000000000E-01 ! Relative orientation
   view.motion.orient (   4 ,       $V_Contact                    ) = -5.00000000000000000E-01 ! Relative orientation

viewgroup.end (                     $G_RWP_Left                   )                           ! $G_RWP_Left

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 50 Hz }               ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 30 s }                ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.hmax (                    $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_TIMEPAR_MAX_STEPSIZE
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 9.99999999999999980E-13 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force outpur values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.output.file.desc (              $SLV_SolverSettings           ) = ''                      ! Description written to the output file if supported
slv.compat.solver (                 $SLV_SolverSettings           ) = 0                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -2.40000000000000000E+02
refsys.attr.2d.pos.y (              $R_Isys                       ) = -2.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 7.50000000000000000E+02
refsys.attr.2d.height (             $R_Isys                       ) = 2.90000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_Track_Moved           ) = -98                     ! Type
marker.parent (                     $M_Isys_Track_Moved           ) = $R_Isys                 ! Reference system
marker.par (              1 ,       $M_Isys_Track_Moved           ) = $J_Wheelset             ! [-] Track Connection/Joint
marker.par (              3 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track elevation
marker.par (              4 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track roll
marker.par (              5 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Disregard Track pitch
marker.par (              6 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in x of Track frame
marker.par (              7 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in y of Track frame
marker.par (              8 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in z of Track frame
marker.par (              9 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [m] Offset in s along Track
marker.par (             10 ,       $M_Isys_Track_Moved           ) = 0.00000000000000000E+00 ! [-] Calculate derivatives

marker.type (                       $M_Isys_Ballast               ) = -98                     ! Type
marker.parent (                     $M_Isys_Ballast               ) = $R_Isys                 ! Reference system
marker.par (              1 ,       $M_Isys_Ballast               ) = $J_Wheelset             ! [-] Track Connection/Joint
marker.par (              3 ,       $M_Isys_Ballast               ) = 0.00000000000000000E+00 ! [-] Disregard Track elevation
marker.par (              4 ,       $M_Isys_Ballast               ) = 0.00000000000000000E+00 ! [-] Disregard Track roll
marker.par (              5 ,       $M_Isys_Ballast               ) = 0.00000000000000000E+00 ! [-] Disregard Track pitch
marker.par (              6 ,       $M_Isys_Ballast               ) = 0.00000000000000000E+00 ! [m] Offset in x of Track frame
marker.par (              7 ,       $M_Isys_Ballast               ) = 0.00000000000000000E+00 ! [m] Offset in y of Track frame
marker.par (              8 ,       $M_Isys_Ballast               ) = 0.00000000000000000E+00 ! [m] Offset in z of Track frame
marker.par (              9 ,       $M_Isys_Ballast               ) = 0.00000000000000000E+00 ! [m] Offset in s along Track
marker.par (             10 ,       $M_Isys_Ballast               ) = 0.00000000000000000E+00 ! [-] Calculate derivatives

marker.type (                       $M_Isys_TrackFrame_RWP_Right  ) = -98                     ! Type
marker.parent (                     $M_Isys_TrackFrame_RWP_Right  ) = $R_Isys                 ! Reference system
marker.par (              1 ,       $M_Isys_TrackFrame_RWP_Right  ) = $J_Wheelset             ! [-] Track Connection/Joint

marker.type (                       $M_Isys_TrackFrame_RWP_Left   ) = -98                     ! Type
marker.parent (                     $M_Isys_TrackFrame_RWP_Left   ) = $R_Isys                 ! Reference system
marker.par (              1 ,       $M_Isys_TrackFrame_RWP_Left   ) = $J_Wheelset             ! [-] Track Connection/Joint

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length

prim.type (                         $P_R_Isys_Track               ) = 41                      ! Type
prim.ref (                          $P_R_Isys_Track               ) = $M_Isys                 ! Reference Marker


!**********************************************************************
! Bodies
!**********************************************************************
body.m (                            $B_Wheelset                   ) = 1.00000000000000000E+03 ! Mass of the Body
body.mp (                           $B_Wheelset                   ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_Wheelset                   ) = 1.00000000000000000E+03 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_Wheelset                   ) = 1.00000000000000000E+02 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_Wheelset                   ) = 1.00000000000000000E+03 ! Moments of inertia
body.I.kind (                       $B_Wheelset                   ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.attr.2d.pos.x (                $B_Wheelset                   ) = 4.00000000000000000E+01
body.attr.2d.pos.y (                $B_Wheelset                   ) = 3.00000000000000000E+01
body.attr.2d.width (                $B_Wheelset                   ) = 2.20000000000000000E+02
body.attr.2d.height (               $B_Wheelset                   ) = 5.00000000000000000E+01

marker.type (                       $M_Wheelset_BRF               ) = 1                       ! Type
marker.parent (                     $M_Wheelset_BRF               ) = $B_Wheelset             ! Body
marker.flx.type (                   $M_Wheelset_BRF               ) = 4                       ! Flexible type

marker.type (                       $M_B_Wheelset_ProfRef_RWP_Right) = -78                    ! Type
marker.parent (                     $M_B_Wheelset_ProfRef_RWP_Right) = $B_Wheelset            ! Body
marker.par (              1 ,       $M_B_Wheelset_ProfRef_RWP_Right) = $RWP_Right             ! [-] Rail-Wheel Pair

marker.type (                       $M_B_Wheelset_ProfRef_RWP_Left) = -78                     ! Type
marker.parent (                     $M_B_Wheelset_ProfRef_RWP_Left) = $B_Wheelset             ! Body
marker.par (              1 ,       $M_B_Wheelset_ProfRef_RWP_Left) = $RWP_Left               ! [-] Rail-Wheel Pair

joint.from (                        $J_Wheelset                   ) = $M_Isys                 ! From Marker
joint.to (                          $J_Wheelset                   ) = $M_Wheelset_BRF         ! To Marker
joint.type (                        $J_Wheelset                   ) = 7                       ! Type
joint.st.pos (            1 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_Wheelset                   ) = -4.60000000000000020E-01 ! Position
joint.st.pos (            4 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            5 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            6 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_Wheelset                   ) = 2.00000000000000000E+01 ! Velocity
joint.st.vel (            2 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            4 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            5 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            6 ,       $J_Wheelset                   ) = -4.34866625205467940E+01 ! Velocity
joint.par (               3 ,       $J_Wheelset                   ) = 0.00000000000000000E+00 ! [-] Degrees of freedom
joint.attr.2d.pos.x (     1 ,       $J_Wheelset                   ) = -20
joint.attr.2d.pos.y (     1 ,       $J_Wheelset                   ) = 60
joint.attr.2d.ori (       1 ,       $J_Wheelset                   ) = 0

prim.type (                         $P_Wheelset_Shaft             ) = 2                       ! Type
prim.ref (                          $P_Wheelset_Shaft             ) = $M_Wheelset_BRF         ! Reference Marker
prim.color.r (            1 ,       $P_Wheelset_Shaft             ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.r (            2 ,       $P_Wheelset_Shaft             ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Wheelset_Shaft             ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Wheelset_Shaft             ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Wheelset_Shaft             ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Wheelset_Shaft             ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Wheelset_Shaft             ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Wheelset_Shaft             ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Wheelset_Shaft             ) = 0.00000000000000000E+00 ! Transparency
prim.mp.dens.solid (                $P_Wheelset_Shaft             ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Wheelset_Shaft             ) = 2.20000000000000018E+00 ! [m] Height
prim.par (                3 ,       $P_Wheelset_Shaft             ) = 1.79999999999999993E-01 ! [m] Outer diameter
prim.par (                4 ,       $P_Wheelset_Shaft             ) = 8.00000000000000017E-02 ! [m] Inner diameter
prim.par (                5 ,       $P_Wheelset_Shaft             ) = 2.50000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $P_Wheelset_Shaft             ) = 1.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $P_Wheelset_Shaft             ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $P_Wheelset_Shaft             ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $P_Wheelset_Shaft             ) = 0.00000000000000000E+00 ! [rad] Start angle

prim.type (                         $P_B_Wheelset_ProfRef_RWP_Right) = 78                     ! Type
prim.ref (                          $P_B_Wheelset_ProfRef_RWP_Right) = $M_B_Wheelset_ProfRef_RWP_Right ! Reference Marker
prim.color.r (            1 ,       $P_B_Wheelset_ProfRef_RWP_Right) = 5.80000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_B_Wheelset_ProfRef_RWP_Right) = 9.80000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_B_Wheelset_ProfRef_RWP_Right) = 2.05000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_B_Wheelset_ProfRef_RWP_Right) = 5.00000000000000000E-01 ! Colors (transparency component)
prim.par (                1 ,       $P_B_Wheelset_ProfRef_RWP_Right) = $RWP_Right             ! [-] Rail-wheel pair

prim.type (                         $P_B_Wheelset_ProfRef_RWP_Left) = 78                      ! Type
prim.ref (                          $P_B_Wheelset_ProfRef_RWP_Left) = $M_B_Wheelset_ProfRef_RWP_Left ! Reference Marker
prim.color.r (            1 ,       $P_B_Wheelset_ProfRef_RWP_Left) = 5.80000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_B_Wheelset_ProfRef_RWP_Left) = 9.80000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_B_Wheelset_ProfRef_RWP_Left) = 2.05000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_B_Wheelset_ProfRef_RWP_Left) = 5.00000000000000000E-01 ! Colors (transparency component)
prim.par (                1 ,       $P_B_Wheelset_ProfRef_RWP_Left) = $RWP_Left               ! [-] Rail-wheel pair


body.m (                            $B_Ballast                    ) = 3.30000000000000000E+02 ! Mass of the Body
body.mp (                           $B_Ballast                    ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_Ballast                    ) = 1.00000000000000000E+01 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_Ballast                    ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_Ballast                    ) = 1.00000000000000000E+01 ! Moments of inertia
body.I.kind (                       $B_Ballast                    ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.attr.2d.pos.x (                $B_Ballast                    ) = 4.00000000000000000E+01
body.attr.2d.pos.y (                $B_Ballast                    ) = 1.50000000000000000E+02
body.attr.2d.width (                $B_Ballast                    ) = 2.20000000000000000E+02
body.attr.2d.height (               $B_Ballast                    ) = 4.00000000000000000E+01

marker.type (                       $M_Ballast_BRF                ) = 1                       ! Type
marker.parent (                     $M_Ballast_BRF                ) = $B_Ballast              ! Body
marker.flx.type (                   $M_Ballast_BRF                ) = 4                       ! Flexible type

marker.type (                       $M_Ballast_Force              ) = 2                       ! Type
marker.parent (                     $M_Ballast_Force              ) = $B_Ballast              ! Body

marker.type (                       $M_B_Ballast_ProfRef_RWP_Right) = -78                     ! Type
marker.parent (                     $M_B_Ballast_ProfRef_RWP_Right) = $B_Ballast              ! Body
marker.par (              1 ,       $M_B_Ballast_ProfRef_RWP_Right) = $RWP_Right              ! [-] Rail-Wheel Pair

marker.type (                       $M_B_Ballast_ProfRef_RWP_Left ) = -78                     ! Type
marker.parent (                     $M_B_Ballast_ProfRef_RWP_Left ) = $B_Ballast              ! Body
marker.par (              1 ,       $M_B_Ballast_ProfRef_RWP_Left ) = $RWP_Left               ! [-] Rail-Wheel Pair

joint.from (                        $J_Ballast                    ) = $M_Isys                 ! From Marker
joint.to (                          $J_Ballast                    ) = $M_Ballast_BRF          ! To Marker
joint.type (                        $J_Ballast                    ) = 91                      ! Type
joint.st.pos (            1 ,       $J_Ballast                    ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $J_Ballast                    ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_Ballast                    ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_Ballast                    ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            2 ,       $J_Ballast                    ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_Ballast                    ) = 0.00000000000000000E+00 ! Velocity
joint.par (               1 ,       $J_Ballast                    ) = $J_Wheelset             ! [-] Connection/Joint holding s(t)
joint.par (               2 ,       $J_Ballast                    ) = 0.00000000000000000E+00 ! [-] Motion Type
joint.par (               3 ,       $J_Ballast                    ) = 0.00000000000000000E+00 ! [m] s_offset
joint.attr.2d.pos.x (     1 ,       $J_Ballast                    ) = 170
joint.attr.2d.pos.y (     1 ,       $J_Ballast                    ) = 230
joint.attr.2d.ori (       1 ,       $J_Ballast                    ) = 270

prim.type (                         $P_Ballast                    ) = 1                       ! Type
prim.ref (                          $P_Ballast                    ) = $M_Ballast_BRF          ! Reference Marker
prim.pos (                3 ,       $P_Ballast                    ) = 7.49999999999999972E-02 ! Position
prim.color.r (            1 ,       $P_Ballast                    ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Ballast                    ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Ballast                    ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Ballast                    ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Ballast                    ) = 5.00000000000000000E-01 ! Transparency
prim.mp.incl (                      $P_Ballast                    ) = 0                       ! Include Primitive in computation
prim.mp.dens.solid (                $P_Ballast                    ) = 1.00000000000000000E+00 ! Density
prim.par (                2 ,       $P_Ballast                    ) = 2.00000000000000011E-01 ! [m] Length in X
prim.par (                3 ,       $P_Ballast                    ) = 2.00000000000000000E+00 ! [m] Length in Y
prim.par (                4 ,       $P_Ballast                    ) = 5.00000000000000028E-02 ! [m] Length in Z

prim.type (                         $P_B_Ballast_ProfRef_RWP_Right) = 79                      ! Type
prim.ref (                          $P_B_Ballast_ProfRef_RWP_Right) = $M_B_Ballast_ProfRef_RWP_Right ! Reference Marker
prim.color.r (            1 ,       $P_B_Ballast_ProfRef_RWP_Right) = 1.07000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_B_Ballast_ProfRef_RWP_Right) = 1.07000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_B_Ballast_ProfRef_RWP_Right) = 1.07000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_B_Ballast_ProfRef_RWP_Right) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                1 ,       $P_B_Ballast_ProfRef_RWP_Right) = $RWP_Right              ! [-] Rail-wheel pair

prim.type (                         $P_B_Ballast_ProfRef_RWP_Left ) = 79                      ! Type
prim.ref (                          $P_B_Ballast_ProfRef_RWP_Left ) = $M_B_Ballast_ProfRef_RWP_Left ! Reference Marker
prim.color.r (            1 ,       $P_B_Ballast_ProfRef_RWP_Left ) = 1.07000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_B_Ballast_ProfRef_RWP_Left ) = 1.07000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_B_Ballast_ProfRef_RWP_Left ) = 1.07000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_B_Ballast_ProfRef_RWP_Left ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                1 ,       $P_B_Ballast_ProfRef_RWP_Left ) = $RWP_Left               ! [-] Rail-wheel pair


!**********************************************************************
! Force Elements
!**********************************************************************
force.type (                        $F_Ballast                    ) = 99                      ! Type
force.from (                        $F_Ballast                    ) = $M_Isys_Ballast         ! From Marker
force.to (                          $F_Ballast                    ) = $M_Ballast_Force        ! To Marker
force.preld.calc (        3 ,       $F_Ballast                    ) = 0                       ! Select Preload cal.
force.preld.calc (        4 ,       $F_Ballast                    ) = 1                       ! Select Preload cal.
force.preld.calc (        5 ,       $F_Ballast                    ) = 1                       ! Select Preload cal.
force.par (               1 ,       $F_Ballast                    ) = $J_Wheelset             ! [-] Track Connection/Joint
force.par (               2 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [m] s0 Start position in track
force.par (               3 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [N] Nominal force in y
force.par (               4 ,       $F_Ballast                    ) = 1.30472999999999993E+04 ! [N] Nominal force in z
force.par (               5 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [Nm] Nominal torque abt x
force.par (               6 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [m] lnomz nominal length in z
force.par (               7 ,       $F_Ballast                    ) = 1.00000000000000000E+00 ! [-] Operating mode
force.par (               9 ,       $F_Ballast                    ) = 4.00000000000000000E+07 ! [N/m] cy0  Constant c in y
force.par (              10 ,       $F_Ballast                    ) = 1.50000000000000000E+08 ! [N/m] cz0  Constant c in z
force.par (              11 ,       $F_Ballast                    ) = { 150000000*0.75^2 }    ! [Nm/rad] cphi0  Constant c abt x
force.par (              12 ,       $F_Ballast                    ) = 9.80000000000000000E+04 ! [Ns/m] dy0  Constant d in y
force.par (              13 ,       $F_Ballast                    ) = 1.88000000000000000E+05 ! [Ns/m] dz0  Constant d in z
force.par (              14 ,       $F_Ballast                    ) = { 188000*0.75^2 }       ! [Nms/rad] dphi0  Constant d abt x
force.par (              25 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [-] Input Function for cy
force.par (              26 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [-] Input Function for cz
force.par (              27 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [-] Input Function for cphi
force.par (              28 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [-] Input Function for dy
force.par (              29 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [-] Input Function for dz
force.par (              30 ,       $F_Ballast                    ) = 0.00000000000000000E+00 ! [-] Input Function for dphi
force.attr.2d.pos.x (     1 ,       $F_Ballast                    ) = 130
force.attr.2d.pos.y (     1 ,       $F_Ballast                    ) = 230
force.attr.2d.ori (       1 ,       $F_Ballast                    ) = 270

force.type (                        $F_RWContact_RWP_Right        ) = 78                      ! Type
force.from (                        $F_RWContact_RWP_Right        ) = $M_B_Ballast_ProfRef_RWP_Right ! From Marker
force.to (                          $F_RWContact_RWP_Right        ) = $M_B_Wheelset_ProfRef_RWP_Right ! To Marker
force.st.desc (           1 ,       $F_RWContact_RWP_Right        ) = -9.40868853385281228E-05 ! Descriptive states
force.st.desc (           2 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           3 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           4 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           5 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           6 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           7 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           8 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           9 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          10 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          11 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          12 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          13 ,       $F_RWContact_RWP_Right        ) = 0.00000000000000000E+00 ! Descriptive states
force.preld.calc (       10 ,       $F_RWContact_RWP_Right        ) = 1                       ! Select Preload cal.
force.par (               1 ,       $F_RWContact_RWP_Right        ) = 1.00000000000000000E+00 ! [-] Rail-Wheel Contact Element
force.par (               2 ,       $F_RWContact_RWP_Right        ) = $RWP_Right              ! [-] Rail-Wheel Pair
force.par (              10 ,       $F_RWContact_RWP_Right        ) = 4.90500000000000000E+03 ! [N] Nominal preload
force.attr.2d.pos.x (     1 ,       $F_RWContact_RWP_Right        ) = 230
force.attr.2d.pos.y (     1 ,       $F_RWContact_RWP_Right        ) = 120
force.attr.2d.ori (       1 ,       $F_RWContact_RWP_Right        ) = 270

force.type (                        $F_RWContact_RWP_Left         ) = 78                      ! Type
force.from (                        $F_RWContact_RWP_Left         ) = $M_B_Ballast_ProfRef_RWP_Left ! From Marker
force.to (                          $F_RWContact_RWP_Left         ) = $M_B_Wheelset_ProfRef_RWP_Left ! To Marker
force.st.desc (           1 ,       $F_RWContact_RWP_Left         ) = -9.40868853385281228E-05 ! Descriptive states
force.st.desc (           2 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           3 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           4 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           5 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           6 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           7 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           8 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (           9 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          10 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          11 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          12 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.st.desc (          13 ,       $F_RWContact_RWP_Left         ) = 0.00000000000000000E+00 ! Descriptive states
force.preld.calc (       10 ,       $F_RWContact_RWP_Left         ) = 1                       ! Select Preload cal.
force.par (               1 ,       $F_RWContact_RWP_Left         ) = 1.00000000000000000E+00 ! [-] Rail-Wheel Contact Element
force.par (               2 ,       $F_RWContact_RWP_Left         ) = $RWP_Left               ! [-] Rail-Wheel Pair
force.par (              10 ,       $F_RWContact_RWP_Left         ) = 4.90500000000000000E+03 ! [N] Nominal preload
force.attr.2d.pos.x (     1 ,       $F_RWContact_RWP_Left         ) = 70
force.attr.2d.pos.y (     1 ,       $F_RWContact_RWP_Left         ) = 120
force.attr.2d.ori (       1 ,       $F_RWContact_RWP_Left         ) = 270

!**********************************************************************
! Tracks
!**********************************************************************
track.type (                        $Trk_Track                    ) = 2                       ! Type
track.kind (                        $Trk_Track                    ) = 1                       ! Kind
track.excit.lat (                   $Trk_Track                    ) = null                    ! Track::EXC_TRACK_LATERAL
track.excit.vert (                  $Trk_Track                    ) = null                    ! Track::EXC_TRACK_VERTICAL
track.excit.roll (                  $Trk_Track                    ) = null                    ! Track::EXC_TRACK_ROLL
track.excit.left.lat (              $Trk_Track                    ) = null                    ! Track::EXC_RAIL_LATERAL_LEFT
track.excit.left.vert (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_VERTICAL_LEFT
track.excit.left.roll (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_ROLL_LEFT
track.excit.right.lat (             $Trk_Track                    ) = null                    ! Track::EXC_RAIL_LATERAL_RIGHT
track.excit.right.vert (            $Trk_Track                    ) = null                    ! Track::EXC_RAIL_VERTICAL_RIGHT
track.excit.right.roll (            $Trk_Track                    ) = null                    ! Track::EXC_RAIL_ROLL_RIGHT
track.excit.gauge (                 $Trk_Track                    ) = null                    ! Track::EXC_TRACK_GAUGE
track.meas.superelev.kind (         $Trk_Track                    ) = 1                       ! Superelevation kind (measured track)
track.meas.superelev.reflen (       $Trk_Track                    ) = 0.00000000000000000E+00 ! Superelevation reference length (measured track)
track.meas.len (                    $Trk_Track                    ) = 0.00000000000000000E+00 ! Total measured length
track.meas.discr.fromfile (         $Trk_Track                    ) = 0                       ! Discretisation from file
track.meas.discr.num (              $Trk_Track                    ) = 0                       ! Number of discretisation points
track.cart.file (                   $Trk_Track                    ) = ''                      ! Cartographic filename
track.meas.file (                   $Trk_Track                    ) = ''                      ! Measured filename
track.crg.dir (                     $Trk_Track                    ) = ''                      ! CRG file directory
track.excit.type (                  $Trk_Track                    ) = 0                       ! Excitations type
track.excit.start (                 $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations start
track.excit.end (                   $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations end
track.excit.fade.len (              $Trk_Track                    ) = 0.00000000000000000E+00 ! Excitations fade in/out
track.meas.sec.start (              $Trk_Track                    ) = 0.00000000000000000E+00 ! Section start
track.meas.sec.end (                $Trk_Track                    ) = 0.00000000000000000E+00 ! Section end
track.meas.datared.fromfile (       $Trk_Track                    ) = 0                       ! Data reduction from file
track.meas.datared.incr (           $Trk_Track                    ) = 0                       ! Data increment
track.meas.startend.fromexcit (     $Trk_Track                    ) = 0                       ! Start/End from excitation
track.meas.start (                  $Trk_Track                    ) = 0.00000000000000000E+00 ! Start
track.meas.fade.len (               $Trk_Track                    ) = 0.00000000000000000E+00 ! Fade length
track.cart.horizontal.curvature.kind ( $Trk_Track                 ) = 0                       ! 0=radius; 1=arc length; 2=chord length
track.cart.horizontal.curvature.reflen ( $Trk_Track               ) = 1.00000000000000000E+00 ! Reference length
track.cart.superelev.fromfile (     $Trk_Track                    ) = 0                       ! Superelevation from file (cartographic track)
track.cart.superelev.kind (         $Trk_Track                    ) = 2                       ! Superelevation kind (cartographic track)
track.cart.superelev.reflen (       $Trk_Track                    ) = 1.50000000000000000E+00 ! Superelevation reference length (cartographic track)
track.cart.discr.gen (              $Trk_Track                    ) = 1.00000000000000000E+00 ! Discr. gen
track.cart.discr.fine (             $Trk_Track                    ) = 5.00000000000000000E-01 ! Discr. fine
track.txt (                         $Trk_Track                    ) = ''                      ! Comment
track.cart.h.type (       1 ,       $Trk_Track                    ) = 1                       ! Type
track.cart.h.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.h.par (        1 ,   1 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       1 ,       $Trk_Track                    ) = 201                     ! Type
track.cart.v.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.v.par (        1 ,   1 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.v.par (        2 ,   1 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       1 ,       $Trk_Track                    ) = 101                     ! Type
track.cart.s.txt (        1 ,       $Trk_Track                    ) = ''                      ! Comment
track.cart.s.par (        1 ,   1 , $Trk_Track                    ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,   1 , $Trk_Track                    ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   1 , $Trk_Track                    ) = 1.50000000000000000E+00 ! [m] Lsmo/2

track.type (                        $Trk_Simple                   ) = 2                       ! Type
track.kind (                        $Trk_Simple                   ) = 1                       ! Kind
track.excit.lat (                   $Trk_Simple                   ) = null                    ! Track::EXC_TRACK_LATERAL
track.excit.vert (                  $Trk_Simple                   ) = null                    ! Track::EXC_TRACK_VERTICAL
track.excit.roll (                  $Trk_Simple                   ) = null                    ! Track::EXC_TRACK_ROLL
track.excit.left.lat (              $Trk_Simple                   ) = null                    ! Track::EXC_RAIL_LATERAL_LEFT
track.excit.left.vert (             $Trk_Simple                   ) = null                    ! Track::EXC_RAIL_VERTICAL_LEFT
track.excit.left.roll (             $Trk_Simple                   ) = null                    ! Track::EXC_RAIL_ROLL_LEFT
track.excit.right.lat (             $Trk_Simple                   ) = null                    ! Track::EXC_RAIL_LATERAL_RIGHT
track.excit.right.vert (            $Trk_Simple                   ) = null                    ! Track::EXC_RAIL_VERTICAL_RIGHT
track.excit.right.roll (            $Trk_Simple                   ) = null                    ! Track::EXC_RAIL_ROLL_RIGHT
track.excit.gauge (                 $Trk_Simple                   ) = null                    ! Track::EXC_TRACK_GAUGE
track.meas.superelev.kind (         $Trk_Simple                   ) = 1                       ! Superelevation kind (measured track)
track.meas.superelev.reflen (       $Trk_Simple                   ) = 1.50600000000000001E+00 ! Superelevation reference length (measured track)
track.meas.len (                    $Trk_Simple                   ) = 0.00000000000000000E+00 ! Total measured length
track.meas.discr.fromfile (         $Trk_Simple                   ) = 1                       ! Discretisation from file
track.meas.discr.num (              $Trk_Simple                   ) = 0                       ! Number of discretisation points
track.cart.file (                   $Trk_Simple                   ) = ''                      ! Cartographic filename
track.meas.file (                   $Trk_Simple                   ) = ''                      ! Measured filename
track.crg.dir (                     $Trk_Simple                   ) = ''                      ! CRG file directory
track.excit.type (                  $Trk_Simple                   ) = 0                       ! Excitations type
track.excit.start (                 $Trk_Simple                   ) = 0.00000000000000000E+00 ! Excitations start
track.excit.end (                   $Trk_Simple                   ) = 0.00000000000000000E+00 ! Excitations end
track.excit.fade.len (              $Trk_Simple                   ) = 0.00000000000000000E+00 ! Excitations fade in/out
track.meas.sec.start (              $Trk_Simple                   ) = 0.00000000000000000E+00 ! Section start
track.meas.sec.end (                $Trk_Simple                   ) = 0.00000000000000000E+00 ! Section end
track.meas.datared.fromfile (       $Trk_Simple                   ) = 0                       ! Data reduction from file
track.meas.datared.incr (           $Trk_Simple                   ) = 0                       ! Data increment
track.meas.startend.fromexcit (     $Trk_Simple                   ) = 0                       ! Start/End from excitation
track.meas.start (                  $Trk_Simple                   ) = 0.00000000000000000E+00 ! Start
track.meas.fade.len (               $Trk_Simple                   ) = 0.00000000000000000E+00 ! Fade length
track.cart.horizontal.curvature.kind ( $Trk_Simple                ) = 0                       ! 0=radius; 1=arc length; 2=chord length
track.cart.horizontal.curvature.reflen ( $Trk_Simple              ) = 1.00000000000000000E+00 ! Reference length
track.cart.superelev.fromfile (     $Trk_Simple                   ) = 0                       ! Superelevation from file (cartographic track)
track.cart.superelev.kind (         $Trk_Simple                   ) = 1                       ! Superelevation kind (cartographic track)
track.cart.superelev.reflen (       $Trk_Simple                   ) = 1.50000000000000000E+00 ! Superelevation reference length (cartographic track)
track.cart.discr.gen (              $Trk_Simple                   ) = 1.00000000000000000E+00 ! Discr. gen
track.cart.discr.fine (             $Trk_Simple                   ) = 5.00000000000000000E-01 ! Discr. fine
track.txt (                         $Trk_Simple                   ) = ''                      ! Comment
track.plot.par (          1 ,       $Trk_Simple                   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   1 , $Trk_Simple                   ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   2 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   3 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   4 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   5 , $Trk_Simple                   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 , $Trk_Simple                   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 , $Trk_Simple             ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 ,   1 , $Trk_Simple       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 ,   2 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 , $Trk_Simple                   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   1 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   2 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 , $Trk_Simple             ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   1 , $Trk_Simple       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   2 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   3 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   4 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   5 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   6 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   7 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   8 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   9 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  10 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  11 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  12 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  13 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  14 ,   1 , $Trk_Simple       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  15 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  16 ,   1 , $Trk_Simple       ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 , $Trk_Simple                   ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   2 ,   1 , $Trk_Simple       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   3 ,   1 , $Trk_Simple       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   4 ,   1 , $Trk_Simple       ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.cart.h.type (       1 ,       $Trk_Simple                   ) = 1                       ! Type
track.cart.h.par (        1 ,   1 , $Trk_Simple                   ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,   1 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       2 ,       $Trk_Simple                   ) = 4                       ! Type
track.cart.h.txt (        2 ,       $Trk_Simple                   ) = ''                      ! Comment
track.cart.h.par (        1 ,   2 , $Trk_Simple                   ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,   2 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,   2 , $Trk_Simple                   ) = 4.00000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,   2 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       3 ,       $Trk_Simple                   ) = 2                       ! Type
track.cart.h.txt (        3 ,       $Trk_Simple                   ) = ''                      ! Comment
track.cart.h.par (        1 ,   3 , $Trk_Simple                   ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,   3 , $Trk_Simple                   ) = 4.00000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,   3 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       4 ,       $Trk_Simple                   ) = 3                       ! Type
track.cart.h.txt (        4 ,       $Trk_Simple                   ) = ''                      ! Comment
track.cart.h.par (        1 ,   4 , $Trk_Simple                   ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,   4 , $Trk_Simple                   ) = 4.00000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,   4 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,   4 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       5 ,       $Trk_Simple                   ) = 1                       ! Type
track.cart.h.txt (        5 ,       $Trk_Simple                   ) = ''                      ! Comment
track.cart.h.par (        1 ,   5 , $Trk_Simple                   ) = 1.00000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,   5 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       1 ,       $Trk_Simple                   ) = 201                     ! Type
track.cart.v.par (        1 ,   1 , $Trk_Simple                   ) = 1.00000000000000000E+02 ! [m] L
track.cart.v.par (        2 ,   1 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   1 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       2 ,       $Trk_Simple                   ) = 202                     ! Type
track.cart.v.txt (        2 ,       $Trk_Simple                   ) = ''                      ! Comment
track.cart.v.par (        1 ,   2 , $Trk_Simple                   ) = 3.00000000000000000E+01 ! [m] L
track.cart.v.par (        2 ,   2 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [-] P1
track.cart.v.par (        3 ,   2 , $Trk_Simple                   ) = 5.00000000000000028E-02 ! [-] P2
track.cart.v.par (       10 ,   2 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       3 ,       $Trk_Simple                   ) = 201                     ! Type
track.cart.v.txt (        3 ,       $Trk_Simple                   ) = ''                      ! Comment
track.cart.v.par (        1 ,   3 , $Trk_Simple                   ) = 1.50000000000000000E+02 ! [m] L
track.cart.v.par (        2 ,   3 , $Trk_Simple                   ) = 5.00000000000000028E-02 ! [-] P
track.cart.v.par (       10 ,   3 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       4 ,       $Trk_Simple                   ) = 202                     ! Type
track.cart.v.txt (        4 ,       $Trk_Simple                   ) = ''                      ! Comment
track.cart.v.par (        1 ,   4 , $Trk_Simple                   ) = 3.00000000000000000E+01 ! [m] L
track.cart.v.par (        2 ,   4 , $Trk_Simple                   ) = 5.00000000000000028E-02 ! [-] P1
track.cart.v.par (        3 ,   4 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [-] P2
track.cart.v.par (       10 ,   4 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       5 ,       $Trk_Simple                   ) = 201                     ! Type
track.cart.v.txt (        5 ,       $Trk_Simple                   ) = ''                      ! Comment
track.cart.v.par (        1 ,   5 , $Trk_Simple                   ) = 1.00000000000000000E+02 ! [m] L
track.cart.v.par (        2 ,   5 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   5 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       1 ,       $Trk_Simple                   ) = 101                     ! Type
track.cart.s.par (        1 ,   1 , $Trk_Simple                   ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,   1 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   1 , $Trk_Simple                   ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.w.type (       1 ,       $Trk_Simple                   ) = 301                     ! Type
track.cart.w.par (        1 ,   1 , $Trk_Simple                   ) = 1.00000000000000000E+02 ! [m] L
track.cart.w.par (        2 ,   1 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [m] W
track.cart.w.par (       10 ,   1 , $Trk_Simple                   ) = 0.00000000000000000E+00 ! [m] Lsmo/2

track.type (                        $Trk_Track_Virtual            ) = 2                       ! Type
track.kind (                        $Trk_Track_Virtual            ) = 1                       ! Kind
track.excit.lat (                   $Trk_Track_Virtual            ) = null                    ! Track::EXC_TRACK_LATERAL
track.excit.vert (                  $Trk_Track_Virtual            ) = null                    ! Track::EXC_TRACK_VERTICAL
track.excit.roll (                  $Trk_Track_Virtual            ) = null                    ! Track::EXC_TRACK_ROLL
track.excit.left.lat (              $Trk_Track_Virtual            ) = null                    ! Track::EXC_RAIL_LATERAL_LEFT
track.excit.left.vert (             $Trk_Track_Virtual            ) = null                    ! Track::EXC_RAIL_VERTICAL_LEFT
track.excit.left.roll (             $Trk_Track_Virtual            ) = null                    ! Track::EXC_RAIL_ROLL_LEFT
track.excit.right.lat (             $Trk_Track_Virtual            ) = null                    ! Track::EXC_RAIL_LATERAL_RIGHT
track.excit.right.vert (            $Trk_Track_Virtual            ) = null                    ! Track::EXC_RAIL_VERTICAL_RIGHT
track.excit.right.roll (            $Trk_Track_Virtual            ) = null                    ! Track::EXC_RAIL_ROLL_RIGHT
track.excit.gauge (                 $Trk_Track_Virtual            ) = null                    ! Track::EXC_TRACK_GAUGE
track.meas.superelev.kind (         $Trk_Track_Virtual            ) = 1                       ! Superelevation kind (measured track)
track.meas.superelev.reflen (       $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Superelevation reference length (measured track)
track.meas.len (                    $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Total measured length
track.meas.discr.fromfile (         $Trk_Track_Virtual            ) = 0                       ! Discretisation from file
track.meas.discr.num (              $Trk_Track_Virtual            ) = 0                       ! Number of discretisation points
track.cart.file (                   $Trk_Track_Virtual            ) = ''                      ! Cartographic filename
track.meas.file (                   $Trk_Track_Virtual            ) = ''                      ! Measured filename
track.crg.dir (                     $Trk_Track_Virtual            ) = ''                      ! CRG file directory
track.excit.type (                  $Trk_Track_Virtual            ) = 0                       ! Excitations type
track.excit.start (                 $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Excitations start
track.excit.end (                   $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Excitations end
track.excit.fade.len (              $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Excitations fade in/out
track.meas.sec.start (              $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Section start
track.meas.sec.end (                $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Section end
track.meas.datared.fromfile (       $Trk_Track_Virtual            ) = 0                       ! Data reduction from file
track.meas.datared.incr (           $Trk_Track_Virtual            ) = 0                       ! Data increment
track.meas.startend.fromexcit (     $Trk_Track_Virtual            ) = 0                       ! Start/End from excitation
track.meas.start (                  $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Start
track.meas.fade.len (               $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! Fade length
track.cart.horizontal.curvature.kind ( $Trk_Track_Virtual         ) = 0                       ! 0=radius; 1=arc length; 2=chord length
track.cart.horizontal.curvature.reflen ( $Trk_Track_Virtual       ) = 1.00000000000000000E+00 ! Reference length
track.cart.superelev.fromfile (     $Trk_Track_Virtual            ) = 0                       ! Superelevation from file (cartographic track)
track.cart.superelev.kind (         $Trk_Track_Virtual            ) = 1                       ! Superelevation kind (cartographic track)
track.cart.superelev.reflen (       $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! Superelevation reference length (cartographic track)
track.cart.discr.gen (              $Trk_Track_Virtual            ) = 1.00000000000000000E+00 ! Discr. gen
track.cart.discr.fine (             $Trk_Track_Virtual            ) = 5.00000000000000000E-01 ! Discr. fine
track.txt (                         $Trk_Track_Virtual            ) = ''                      ! Comment
track.plot.par (          1 ,       $Trk_Track_Virtual            ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   1 , $Trk_Track_Virtual            ) = 3.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   1 ,   1 , $Trk_Track_Virtual      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   2 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   3 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   4 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   5 , $Trk_Track_Virtual            ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 , $Trk_Track_Virtual            ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 , $Trk_Track_Virtual      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 ,   1 , $Trk_Track_Virtual) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   6 ,   1 ,   2 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 , $Trk_Track_Virtual            ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   1 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   2 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 , $Trk_Track_Virtual      ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   1 , $Trk_Track_Virtual) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   2 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   3 ,   3 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   4 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   5 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   6 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   7 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   8 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,   9 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  10 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  11 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  12 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  13 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  14 ,   1 , $Trk_Track_Virtual) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  15 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   7 ,  16 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 , $Trk_Track_Virtual            ) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   2 ,   1 , $Trk_Track_Virtual) = 1.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   3 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.plot.par (          1 ,   8 ,   4 ,   1 , $Trk_Track_Virtual) = 0.00000000000000000E+00 ! [-] Unknown plot parameter
track.cart.h.type (       1 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (        1 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   1 , $Trk_Track_Virtual            ) = 3.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,   1 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       2 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (        2 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   2 , $Trk_Track_Virtual            ) = 2.75000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,   2 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,   2 , $Trk_Track_Virtual            ) = -1.50000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,   2 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       3 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (        3 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   3 , $Trk_Track_Virtual            ) = 1.38893000000000001E+02 ! [m] L
track.cart.h.par (        2 ,   3 , $Trk_Track_Virtual            ) = -1.50000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,   3 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       4 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (        4 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   4 , $Trk_Track_Virtual            ) = 2.75000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,   4 , $Trk_Track_Virtual            ) = -1.50000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,   4 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,   4 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       5 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (        5 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   5 , $Trk_Track_Virtual            ) = 2.50000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,   5 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       6 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (        6 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   6 , $Trk_Track_Virtual            ) = 4.25000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,   6 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,   6 , $Trk_Track_Virtual            ) = 6.50000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,   6 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       7 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (        7 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   7 , $Trk_Track_Virtual            ) = 5.65173999999999978E+02 ! [m] L
track.cart.h.par (        2 ,   7 , $Trk_Track_Virtual            ) = 6.50000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,   7 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       8 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (        8 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   8 , $Trk_Track_Virtual            ) = 4.25000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,   8 , $Trk_Track_Virtual            ) = 6.50000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,   8 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,   8 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (       9 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (        9 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,   9 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,   9 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      10 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       10 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  10 , $Trk_Track_Virtual            ) = 3.75000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  10 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  10 , $Trk_Track_Virtual            ) = -5.50000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,  10 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      11 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       11 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  11 , $Trk_Track_Virtual            ) = 2.57297000000000025E+02 ! [m] L
track.cart.h.par (        2 ,  11 , $Trk_Track_Virtual            ) = -5.50000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,  11 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      12 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       12 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  12 , $Trk_Track_Virtual            ) = 3.75000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  12 , $Trk_Track_Virtual            ) = -5.50000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,  12 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  12 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      13 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       13 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  13 , $Trk_Track_Virtual            ) = 9.50000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  13 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      14 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       14 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  14 , $Trk_Track_Virtual            ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  14 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  14 , $Trk_Track_Virtual            ) = 4.50000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,  14 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      15 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       15 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  15 , $Trk_Track_Virtual            ) = 8.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  15 , $Trk_Track_Virtual            ) = 4.50000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,  15 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      16 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       16 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  16 , $Trk_Track_Virtual            ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  16 , $Trk_Track_Virtual            ) = 4.50000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,  16 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  16 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      17 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       17 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  17 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  17 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      18 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       18 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  18 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  18 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  18 , $Trk_Track_Virtual            ) = -6.00000000000000000E+02 ! [m] R2
track.cart.h.par (       10 ,  18 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      19 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       19 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  19 , $Trk_Track_Virtual            ) = 1.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  19 , $Trk_Track_Virtual            ) = -6.00000000000000000E+02 ! [m] R
track.cart.h.par (       10 ,  19 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      20 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       20 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  20 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  20 , $Trk_Track_Virtual            ) = -6.00000000000000000E+02 ! [m] R1
track.cart.h.par (        3 ,  20 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  20 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      21 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       21 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  21 , $Trk_Track_Virtual            ) = 2.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  21 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      22 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       22 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  22 , $Trk_Track_Virtual            ) = 1.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  22 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  22 , $Trk_Track_Virtual            ) = 2.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  22 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      23 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       23 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  23 , $Trk_Track_Virtual            ) = 6.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  23 , $Trk_Track_Virtual            ) = 2.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  23 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      24 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       24 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  24 , $Trk_Track_Virtual            ) = 1.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  24 , $Trk_Track_Virtual            ) = 2.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  24 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  24 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      25 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       25 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  25 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  25 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      26 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       26 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  26 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  26 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  26 , $Trk_Track_Virtual            ) = -1.60000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  26 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      27 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       27 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  27 , $Trk_Track_Virtual            ) = 5.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  27 , $Trk_Track_Virtual            ) = -1.60000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  27 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      28 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       28 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  28 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  28 , $Trk_Track_Virtual            ) = -1.60000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  28 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  28 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      29 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       29 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  29 , $Trk_Track_Virtual            ) = 8.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  29 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      30 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       30 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  30 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  30 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  30 , $Trk_Track_Virtual            ) = -1.60000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  30 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      31 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       31 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  31 , $Trk_Track_Virtual            ) = 6.50000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  31 , $Trk_Track_Virtual            ) = -1.60000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  31 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      32 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       32 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  32 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  32 , $Trk_Track_Virtual            ) = -1.60000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  32 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  32 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      33 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       33 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  33 , $Trk_Track_Virtual            ) = 2.00000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  33 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      34 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       34 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  34 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  34 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  34 , $Trk_Track_Virtual            ) = 3.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  34 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      35 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       35 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  35 , $Trk_Track_Virtual            ) = 3.60000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  35 , $Trk_Track_Virtual            ) = 3.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  35 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      36 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       36 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  36 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  36 , $Trk_Track_Virtual            ) = 3.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  36 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  36 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      37 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       37 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  37 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (       10 ,  37 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      38 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       38 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  38 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  38 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  38 , $Trk_Track_Virtual            ) = -3.00000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  38 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      39 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       39 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  39 , $Trk_Track_Virtual            ) = 6.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  39 , $Trk_Track_Virtual            ) = -3.00000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  39 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      40 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       40 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  40 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.h.par (        2 ,  40 , $Trk_Track_Virtual            ) = -3.00000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  40 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  40 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      41 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       41 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  41 , $Trk_Track_Virtual            ) = 2.80000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  41 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      42 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       42 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  42 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  42 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  42 , $Trk_Track_Virtual            ) = 3.80000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  42 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      43 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       43 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  43 , $Trk_Track_Virtual            ) = 2.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  43 , $Trk_Track_Virtual            ) = 3.80000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  43 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      44 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       44 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  44 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  44 , $Trk_Track_Virtual            ) = 3.80000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  44 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  44 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      45 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       45 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  45 , $Trk_Track_Virtual            ) = 4.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  45 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      46 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       46 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  46 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  46 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  46 , $Trk_Track_Virtual            ) = -2.00000000000000000E+04 ! [m] R2
track.cart.h.par (       10 ,  46 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      47 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       47 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  47 , $Trk_Track_Virtual            ) = 2.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  47 , $Trk_Track_Virtual            ) = -2.00000000000000000E+04 ! [m] R
track.cart.h.par (       10 ,  47 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      48 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       48 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  48 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  48 , $Trk_Track_Virtual            ) = -2.00000000000000000E+04 ! [m] R1
track.cart.h.par (        3 ,  48 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  48 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      49 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       49 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  49 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (       10 ,  49 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      50 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       50 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  50 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  50 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R1
track.cart.h.par (        3 ,  50 , $Trk_Track_Virtual            ) = 1.90000000000000000E+03 ! [m] R2
track.cart.h.par (       10 ,  50 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      51 ,       $Trk_Track_Virtual            ) = 2                       ! Type
track.cart.h.txt (       51 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  51 , $Trk_Track_Virtual            ) = 2.40000000000000000E+03 ! [m] L
track.cart.h.par (        2 ,  51 , $Trk_Track_Virtual            ) = 1.90000000000000000E+03 ! [m] R
track.cart.h.par (       10 ,  51 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      52 ,       $Trk_Track_Virtual            ) = 4                       ! Type
track.cart.h.txt (       52 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  52 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.h.par (        2 ,  52 , $Trk_Track_Virtual            ) = 1.90000000000000000E+03 ! [m] R1
track.cart.h.par (        3 ,  52 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] R2
track.cart.h.par (       10 ,  52 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.h.type (      53 ,       $Trk_Track_Virtual            ) = 1                       ! Type
track.cart.h.txt (       53 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.h.par (        1 ,  53 , $Trk_Track_Virtual            ) = 2.00000000000000000E+03 ! [m] L
track.cart.h.par (       10 ,  53 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       1 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (        1 ,       $Trk_Track_Virtual            ) = '1-20 段'              ! Comment
track.cart.v.par (        1 ,   1 , $Trk_Track_Virtual            ) = 4.08636400000000003E+03 ! [m] L
track.cart.v.par (        2 ,   1 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   1 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       2 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (        2 ,       $Trk_Track_Virtual            ) = '21 段开始上坡'    ! Comment
track.cart.v.par (        1 ,   2 , $Trk_Track_Virtual            ) = 5.00000000000000000E+00 ! [m] L
track.cart.v.par (        2 ,   2 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   2 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       3 ,       $Trk_Track_Virtual            ) = 202                     ! Type
track.cart.v.txt (        3 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.v.par (        1 ,   3 , $Trk_Track_Virtual            ) = 2.00000000000000000E+01 ! [m] L
track.cart.v.par (        2 ,   3 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P1
track.cart.v.par (        3 ,   3 , $Trk_Track_Virtual            ) = 5.00000000000000028E-02 ! [-] P2
track.cart.v.par (       10 ,   3 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       4 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (        4 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.v.par (        1 ,   4 , $Trk_Track_Virtual            ) = 1.50000000000000000E+02 ! [m] L
track.cart.v.par (        2 ,   4 , $Trk_Track_Virtual            ) = 5.00000000000000028E-02 ! [-] P
track.cart.v.par (       10 ,   4 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       5 ,       $Trk_Track_Virtual            ) = 202                     ! Type
track.cart.v.txt (        5 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.v.par (        1 ,   5 , $Trk_Track_Virtual            ) = 2.00000000000000000E+01 ! [m] L
track.cart.v.par (        2 ,   5 , $Trk_Track_Virtual            ) = 5.00000000000000028E-02 ! [-] P1
track.cart.v.par (        3 ,   5 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P2
track.cart.v.par (       10 ,   5 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       6 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (        6 ,       $Trk_Track_Virtual            ) = '21 段收尾'          ! Comment
track.cart.v.par (        1 ,   6 , $Trk_Track_Virtual            ) = 5.00000000000000000E+00 ! [m] L
track.cart.v.par (        2 ,   6 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   6 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       7 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (        7 ,       $Trk_Track_Virtual            ) = '22-32 段'             ! Comment
track.cart.v.par (        1 ,   7 , $Trk_Track_Virtual            ) = 2.38000000000000000E+03 ! [m] L
track.cart.v.par (        2 ,   7 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   7 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       8 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (        8 ,       $Trk_Track_Virtual            ) = '33 段开始上坡'    ! Comment
track.cart.v.par (        1 ,   8 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.v.par (        2 ,   8 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,   8 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (       9 ,       $Trk_Track_Virtual            ) = 202                     ! Type
track.cart.v.txt (        9 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.v.par (        1 ,   9 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.v.par (        2 ,   9 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P1
track.cart.v.par (        3 ,   9 , $Trk_Track_Virtual            ) = 2.99999999999999989E-02 ! [-] P2
track.cart.v.par (       10 ,   9 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (      10 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (       10 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.v.par (        1 ,  10 , $Trk_Track_Virtual            ) = 6.50000000000000000E+02 ! [m] L
track.cart.v.par (        2 ,  10 , $Trk_Track_Virtual            ) = 2.99999999999999989E-02 ! [-] P
track.cart.v.par (       10 ,  10 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (      11 ,       $Trk_Track_Virtual            ) = 202                     ! Type
track.cart.v.txt (       11 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.v.par (        1 ,  11 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.v.par (        2 ,  11 , $Trk_Track_Virtual            ) = 2.99999999999999989E-02 ! [-] P1
track.cart.v.par (        3 ,  11 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P2
track.cart.v.par (       10 ,  11 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (      12 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (       12 ,       $Trk_Track_Virtual            ) = '33 段收尾'          ! Comment
track.cart.v.par (        1 ,  12 , $Trk_Track_Virtual            ) = 1.20000000000000000E+03 ! [m] L
track.cart.v.par (        2 ,  12 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,  12 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.v.type (      13 ,       $Trk_Track_Virtual            ) = 201                     ! Type
track.cart.v.txt (       13 ,       $Trk_Track_Virtual            ) = '34-80 段'             ! Comment
track.cart.v.par (        1 ,  13 , $Trk_Track_Virtual            ) = 1.00100000000000000E+04 ! [m] L
track.cart.v.par (        2 ,  13 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [-] P
track.cart.v.par (       10 ,  13 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       1 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (        1 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   1 , $Trk_Track_Virtual            ) = 3.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,   1 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   1 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       2 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (        2 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   2 , $Trk_Track_Virtual            ) = 2.75000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   2 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,   2 , $Trk_Track_Virtual            ) = -5.39999999999999994E-02 ! [m] U2
track.cart.s.par (       10 ,   2 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       3 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (        3 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   3 , $Trk_Track_Virtual            ) = 1.38893000000000001E+02 ! [m] L
track.cart.s.par (        2 ,   3 , $Trk_Track_Virtual            ) = -5.39999999999999994E-02 ! [m] U
track.cart.s.par (       10 ,   3 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       4 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (        4 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   4 , $Trk_Track_Virtual            ) = 2.75000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   4 , $Trk_Track_Virtual            ) = -5.39999999999999994E-02 ! [m] U1
track.cart.s.par (        3 ,   4 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,   4 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       5 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (        5 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   5 , $Trk_Track_Virtual            ) = 2.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,   5 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   5 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       6 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (        6 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   6 , $Trk_Track_Virtual            ) = 4.25000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   6 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,   6 , $Trk_Track_Virtual            ) = 1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,   6 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       7 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (        7 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   7 , $Trk_Track_Virtual            ) = 5.65173999999999978E+02 ! [m] L
track.cart.s.par (        2 ,   7 , $Trk_Track_Virtual            ) = 1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,   7 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       8 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (        8 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   8 , $Trk_Track_Virtual            ) = 4.25000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   8 , $Trk_Track_Virtual            ) = 1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,   8 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,   8 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (       9 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (        9 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,   9 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,   9 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,   9 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      10 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       10 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  10 , $Trk_Track_Virtual            ) = 3.75000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  10 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  10 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,  10 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      11 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       11 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  11 , $Trk_Track_Virtual            ) = 2.57297000000000025E+02 ! [m] L
track.cart.s.par (        2 ,  11 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,  11 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      12 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       12 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  12 , $Trk_Track_Virtual            ) = 3.75000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  12 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,  12 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  12 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      13 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       13 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  13 , $Trk_Track_Virtual            ) = 9.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  13 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  13 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      14 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       14 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  14 , $Trk_Track_Virtual            ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  14 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  14 , $Trk_Track_Virtual            ) = 1.00000000000000006E-01 ! [m] U2
track.cart.s.par (       10 ,  14 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      15 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       15 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  15 , $Trk_Track_Virtual            ) = 8.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  15 , $Trk_Track_Virtual            ) = 1.00000000000000006E-01 ! [m] U
track.cart.s.par (       10 ,  15 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      16 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       16 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  16 , $Trk_Track_Virtual            ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  16 , $Trk_Track_Virtual            ) = 1.00000000000000006E-01 ! [m] U1
track.cart.s.par (        3 ,  16 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  16 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      17 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       17 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  17 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  17 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  17 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      18 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       18 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  18 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  18 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  18 , $Trk_Track_Virtual            ) = -7.00000000000000067E-02 ! [m] U2
track.cart.s.par (       10 ,  18 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      19 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       19 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  19 , $Trk_Track_Virtual            ) = 1.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  19 , $Trk_Track_Virtual            ) = -7.00000000000000067E-02 ! [m] U
track.cart.s.par (       10 ,  19 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      20 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       20 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  20 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  20 , $Trk_Track_Virtual            ) = -7.00000000000000067E-02 ! [m] U1
track.cart.s.par (        3 ,  20 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  20 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      21 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       21 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  21 , $Trk_Track_Virtual            ) = 2.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  21 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  21 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      22 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       22 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  22 , $Trk_Track_Virtual            ) = 1.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  22 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  22 , $Trk_Track_Virtual            ) = 2.99999999999999989E-02 ! [m] U2
track.cart.s.par (       10 ,  22 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      23 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       23 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  23 , $Trk_Track_Virtual            ) = 6.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  23 , $Trk_Track_Virtual            ) = 2.99999999999999989E-02 ! [m] U
track.cart.s.par (       10 ,  23 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      24 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       24 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  24 , $Trk_Track_Virtual            ) = 1.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  24 , $Trk_Track_Virtual            ) = 2.99999999999999989E-02 ! [m] U1
track.cart.s.par (        3 ,  24 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  24 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      25 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       25 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  25 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  25 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  25 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      26 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       26 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  26 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  26 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  26 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,  26 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      27 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       27 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  27 , $Trk_Track_Virtual            ) = 5.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  27 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,  27 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      28 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       28 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  28 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  28 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,  28 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  28 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      29 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       29 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  29 , $Trk_Track_Virtual            ) = 8.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  29 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  29 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      30 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       30 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  30 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  30 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  30 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U2
track.cart.s.par (       10 ,  30 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      31 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       31 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  31 , $Trk_Track_Virtual            ) = 6.50000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  31 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U
track.cart.s.par (       10 ,  31 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      32 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       32 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  32 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  32 , $Trk_Track_Virtual            ) = -1.19999999999999996E-01 ! [m] U1
track.cart.s.par (        3 ,  32 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  32 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      33 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       33 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  33 , $Trk_Track_Virtual            ) = 2.00000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  33 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  33 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      34 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       34 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  34 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  34 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  34 , $Trk_Track_Virtual            ) = 1.00000000000000006E-01 ! [m] U2
track.cart.s.par (       10 ,  34 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      35 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       35 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  35 , $Trk_Track_Virtual            ) = 3.60000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  35 , $Trk_Track_Virtual            ) = 1.00000000000000006E-01 ! [m] U
track.cart.s.par (       10 ,  35 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      36 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       36 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  36 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  36 , $Trk_Track_Virtual            ) = 1.00000000000000006E-01 ! [m] U1
track.cart.s.par (        3 ,  36 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  36 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      37 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       37 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  37 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  37 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  37 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      38 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       38 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  38 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  38 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  38 , $Trk_Track_Virtual            ) = -1.00000000000000006E-01 ! [m] U2
track.cart.s.par (       10 ,  38 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      39 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       39 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  39 , $Trk_Track_Virtual            ) = 6.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  39 , $Trk_Track_Virtual            ) = -1.00000000000000006E-01 ! [m] U
track.cart.s.par (       10 ,  39 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      40 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       40 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  40 , $Trk_Track_Virtual            ) = 5.00000000000000000E+01 ! [m] L
track.cart.s.par (        2 ,  40 , $Trk_Track_Virtual            ) = -1.00000000000000006E-01 ! [m] U1
track.cart.s.par (        3 ,  40 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  40 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      41 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       41 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  41 , $Trk_Track_Virtual            ) = 2.80000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  41 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  41 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      42 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       42 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  42 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  42 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  42 , $Trk_Track_Virtual            ) = 8.50000000000000061E-02 ! [m] U2
track.cart.s.par (       10 ,  42 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      43 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       43 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  43 , $Trk_Track_Virtual            ) = 2.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  43 , $Trk_Track_Virtual            ) = 8.50000000000000061E-02 ! [m] U
track.cart.s.par (       10 ,  43 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      44 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       44 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  44 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  44 , $Trk_Track_Virtual            ) = 8.50000000000000061E-02 ! [m] U1
track.cart.s.par (        3 ,  44 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  44 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      45 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       45 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  45 , $Trk_Track_Virtual            ) = 4.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  45 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  45 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      46 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       46 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  46 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  46 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  46 , $Trk_Track_Virtual            ) = -1.00000000000000002E-02 ! [m] U2
track.cart.s.par (       10 ,  46 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      47 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       47 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  47 , $Trk_Track_Virtual            ) = 2.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  47 , $Trk_Track_Virtual            ) = -1.00000000000000002E-02 ! [m] U
track.cart.s.par (       10 ,  47 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      48 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       48 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  48 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  48 , $Trk_Track_Virtual            ) = -1.00000000000000002E-02 ! [m] U1
track.cart.s.par (        3 ,  48 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  48 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      49 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       49 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  49 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  49 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  49 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      50 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       50 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  50 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  50 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U1
track.cart.s.par (        3 ,  50 , $Trk_Track_Virtual            ) = 1.40000000000000013E-01 ! [m] U2
track.cart.s.par (       10 ,  50 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      51 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       51 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  51 , $Trk_Track_Virtual            ) = 2.40000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  51 , $Trk_Track_Virtual            ) = 1.40000000000000013E-01 ! [m] U
track.cart.s.par (       10 ,  51 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      52 ,       $Trk_Track_Virtual            ) = 103                     ! Type
track.cart.s.txt (       52 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  52 , $Trk_Track_Virtual            ) = 1.00000000000000000E+02 ! [m] L
track.cart.s.par (        2 ,  52 , $Trk_Track_Virtual            ) = 1.40000000000000013E-01 ! [m] U1
track.cart.s.par (        3 ,  52 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U2
track.cart.s.par (       10 ,  52 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2
track.cart.s.type (      53 ,       $Trk_Track_Virtual            ) = 101                     ! Type
track.cart.s.txt (       53 ,       $Trk_Track_Virtual            ) = ''                      ! Comment
track.cart.s.par (        1 ,  53 , $Trk_Track_Virtual            ) = 2.00000000000000000E+03 ! [m] L
track.cart.s.par (        2 ,  53 , $Trk_Track_Virtual            ) = 0.00000000000000000E+00 ! [m] U
track.cart.s.par (       10 ,  53 , $Trk_Track_Virtual            ) = 1.50000000000000000E+00 ! [m] Lsmo/2

!**********************************************************************
! Rails
!**********************************************************************
rail.sides (                        $RWR_Rails                    ) = 2                       ! Sides
rail.r.prof.file (        1 ,       $RWR_Rails                    ) = 'UIC60.prr'             ! Right Profiles
rail.r.prof.s (           1 ,       $RWR_Rails                    ) = 0.00000000000000000E+00 ! Right Profile Positions
rail.r.cant (                       $RWR_Rails                    ) = 4.00000000000000000E+01 ! Right Cant
rail.lat.kind (                     $RWR_Rails                    ) = 2                       ! Lateral rail distance method
rail.r.lat.dist (                   $RWR_Rails                    ) = 7.53000000000000003E-01 ! Right Lateral rail distance
rail.r.prof.disc (                  $RWR_Rails                    ) = 5.00000000000000010E-04 ! Right Rediscretization step
rail.l.prof.file (        1 ,       $RWR_Rails                    ) = 'UIC60.prr'             ! Left Profiles
rail.l.prof.s (           1 ,       $RWR_Rails                    ) = 0.00000000000000000E+00 ! Left Profile Positions
rail.l.cant (                       $RWR_Rails                    ) = 4.00000000000000000E+01 ! Left Cant
rail.l.lat.dist (                   $RWR_Rails                    ) = 7.53000000000000003E-01 ! Left Lateral rail distance
rail.l.prof.disc (                  $RWR_Rails                    ) = 5.00000000000000010E-04 ! Left Rediscretization step
rail.gauge (                        $RWR_Rails                    ) = 1.43500000000000005E+00 ! Track gauge
rail.gaugepos (                     $RWR_Rails                    ) = 1.40000000000000003E-02 ! Gauge measurement position
rail.txt (                          $RWR_Rails                    ) = ''                      ! Comment

!**********************************************************************
! Rail Wheel Pairs
!**********************************************************************
rwpair.wheel.untrue.kind (          $RWP_Right                    ) = 1                       ! RWP_WHEEL_UNTRUENESS_KIND
rwpair.roller.untrue.kind (         $RWP_Right                    ) = 1                       ! RWP_ROLLER_UNTRUENESS_KIND
rwpair.rail.kind (                  $RWP_Right                    ) = 1                       ! RWP_RAIL_KIND
rwpair.cont.kind (                  $RWP_Right                    ) = 3                       ! RWP_CONTACT_POINT_SEARCH_KIND
rwpair.fn.kind (                    $RWP_Right                    ) = 2                       ! RWP_NORMAL_FORCE_KIND
rwpair.ft.refvel.kind (             $RWP_Right                    ) = 3                       ! RWP_FT_REFERENCE_VELOCITY_KIND
rwpair.result.ref (                 $RWP_Right                    ) = 1                       ! RWP_FORCE_REFSYS_TYPE
rwpair.side (                       $RWP_Right                    ) = 1                       ! RWP_SIDE
rwpair.carrier.body (               $RWP_Right                    ) = $B_Wheelset             ! RWP_CARRIER_BODY
rwpair.wheel.prof.file (            $RWP_Right                    ) = 'S1002.prw'             ! RWP_WHEEL_PROFILE_URI
rwpair.wheel.joint (                $RWP_Right                    ) = $J_Wheelset             ! RWP_WHEEL_JOINT
rwpair.wheel.body (                 $RWP_Right                    ) = $B_Wheelset             ! RWP_WHEEL_BODY
rwpair.wheel.state (                $RWP_Right                    ) = 6                       ! RWP_WHEEL_ROT_STATE
rwpair.wheel.marker (               $RWP_Right                    ) = $M_Wheelset_BRF         ! RWP_WHEEL_MARKER
rwpair.wheel.rot.sign (             $RWP_Right                    ) = -1                      ! RWP_WHEEL_ROTATION
rwpair.wheel.rnom (                 $RWP_Right                    ) = 4.60000000000000020E-01 ! RWP_WHEEL_RADIUS
rwpair.wheel.latdist (              $RWP_Right                    ) = 7.50000000000000000E-01 ! RWP_WHEEL_LATERAL_DISTANCE
rwpair.rail.body (                  $RWP_Right                    ) = $B_Ballast              ! RWP_RAIL_ROLLER_BODY
rwpair.ft.minvel (                  $RWP_Right                    ) = 1.00000000000000002E-02 ! RWP_FT_MINVEL
rwpair.ft.kalkerweight (            $RWP_Right                    ) = 1.00000000000000000E+00 ! RWP_FT_KALKERWEIGHT
rwpair.fric.mu (                    $RWP_Right                    ) = 4.00000000000000022E-01 ! RWP_FRICTION_COEFFICIENT
rwpair.cont.e (                     $RWP_Right                    ) = 2.10000000000000000E+11 ! RWP_CONTACT_E
rwpair.cont.pois (                  $RWP_Right                    ) = 2.80000000000000027E-01 ! RWP_CONTACT_POISSON_NUMBER
rwpair.fn.dref (                    $RWP_Right                    ) = 1.00000000000000000E+05 ! RWP_CONTACT_DAMPING
rwpair.standstill.enable (          $RWP_Right                    ) = 0                       ! RWP_STANDSTILL_ENABLE
rwpair.standstill.mu (              $RWP_Right                    ) = 4.00000000000000022E-01 ! RWP_STANDSTILL_FRICTION_COEFFICIENT
rwpair.standstill.stiff (           $RWP_Right                    ) = 1.00000000000000000E+08 ! RWP_STANDSTILL_STIFFNESS
rwpair.standstill.damp (            $RWP_Right                    ) = 1.00000000000000000E+03 ! RWP_STANDSTILL_DAMPING
rwpair.wheel.prof.disc (            $RWP_Right                    ) = 5.00000000000000010E-04 ! RWP_WHEEL_PROFILE_DISC
rwpair.cont.ref (                   $RWP_Right                    ) = $RWC_FASTSIM            ! RWP_RWCONTACT
rwpair.rail.ref (                   $RWP_Right                    ) = $RWR_Rails              ! RWP_RAIL_REFERENCE

rwpair.wheel.untrue.kind (          $RWP_Left                     ) = 1                       ! RWP_WHEEL_UNTRUENESS_KIND
rwpair.roller.untrue.kind (         $RWP_Left                     ) = 1                       ! RWP_ROLLER_UNTRUENESS_KIND
rwpair.rail.kind (                  $RWP_Left                     ) = 1                       ! RWP_RAIL_KIND
rwpair.cont.kind (                  $RWP_Left                     ) = 3                       ! RWP_CONTACT_POINT_SEARCH_KIND
rwpair.fn.kind (                    $RWP_Left                     ) = 2                       ! RWP_NORMAL_FORCE_KIND
rwpair.ft.refvel.kind (             $RWP_Left                     ) = 3                       ! RWP_FT_REFERENCE_VELOCITY_KIND
rwpair.result.ref (                 $RWP_Left                     ) = 1                       ! RWP_FORCE_REFSYS_TYPE
rwpair.side (                       $RWP_Left                     ) = 2                       ! RWP_SIDE
rwpair.carrier.body (               $RWP_Left                     ) = $B_Wheelset             ! RWP_CARRIER_BODY
rwpair.wheel.prof.file (            $RWP_Left                     ) = 'S1002.prw'             ! RWP_WHEEL_PROFILE_URI
rwpair.wheel.joint (                $RWP_Left                     ) = $J_Wheelset             ! RWP_WHEEL_JOINT
rwpair.wheel.body (                 $RWP_Left                     ) = $B_Wheelset             ! RWP_WHEEL_BODY
rwpair.wheel.state (                $RWP_Left                     ) = 6                       ! RWP_WHEEL_ROT_STATE
rwpair.wheel.marker (               $RWP_Left                     ) = $M_Wheelset_BRF         ! RWP_WHEEL_MARKER
rwpair.wheel.rot.sign (             $RWP_Left                     ) = -1                      ! RWP_WHEEL_ROTATION
rwpair.wheel.rnom (                 $RWP_Left                     ) = 4.60000000000000020E-01 ! RWP_WHEEL_RADIUS
rwpair.wheel.latdist (              $RWP_Left                     ) = 7.50000000000000000E-01 ! RWP_WHEEL_LATERAL_DISTANCE
rwpair.rail.body (                  $RWP_Left                     ) = $B_Ballast              ! RWP_RAIL_ROLLER_BODY
rwpair.ft.minvel (                  $RWP_Left                     ) = 1.00000000000000002E-02 ! RWP_FT_MINVEL
rwpair.ft.kalkerweight (            $RWP_Left                     ) = 1.00000000000000000E+00 ! RWP_FT_KALKERWEIGHT
rwpair.fric.mu (                    $RWP_Left                     ) = 4.00000000000000022E-01 ! RWP_FRICTION_COEFFICIENT
rwpair.cont.e (                     $RWP_Left                     ) = 2.10000000000000000E+11 ! RWP_CONTACT_E
rwpair.cont.pois (                  $RWP_Left                     ) = 2.80000000000000027E-01 ! RWP_CONTACT_POISSON_NUMBER
rwpair.fn.dref (                    $RWP_Left                     ) = 1.00000000000000000E+05 ! RWP_CONTACT_DAMPING
rwpair.standstill.enable (          $RWP_Left                     ) = 0                       ! RWP_STANDSTILL_ENABLE
rwpair.standstill.mu (              $RWP_Left                     ) = 4.00000000000000022E-01 ! RWP_STANDSTILL_FRICTION_COEFFICIENT
rwpair.standstill.stiff (           $RWP_Left                     ) = 1.00000000000000000E+08 ! RWP_STANDSTILL_STIFFNESS
rwpair.standstill.damp (            $RWP_Left                     ) = 1.00000000000000000E+03 ! RWP_STANDSTILL_DAMPING
rwpair.wheel.prof.disc (            $RWP_Left                     ) = 5.00000000000000010E-04 ! RWP_WHEEL_PROFILE_DISC
rwpair.cont.ref (                   $RWP_Left                     ) = $RWC_FASTSIM            ! RWP_RWCONTACT
rwpair.rail.ref (                   $RWP_Left                     ) = $RWR_Rails              ! RWP_RAIL_REFERENCE

!**********************************************************************
! Wheelsets
!**********************************************************************
whlset.pair.left (                  $RWT_Wheelset                 ) = $RWP_Left               ! Left rail-wheel pair
whlset.pair.right (                 $RWT_Wheelset                 ) = $RWP_Right              ! Right rail-wheel pair
whlset.qlin.kind (                  $RWT_Wheelset                 ) = 1                       ! Quasilinearisation method
whlset.qlin.roll (                  $RWT_Wheelset                 ) = 1                       ! Roll angle consideration method
whlset.qlin.a (                     $RWT_Wheelset                 ) = 3.00000000000000006E-03 ! Linearisation amplitude
whlset.qlin.lambda (                $RWT_Wheelset                 ) = 1.85999999999999999E-01 ! User equivalent conicity
whlset.qlin.sigma (                 $RWT_Wheelset                 ) = 3.71999999999999970E-02 ! User roll angle parameter
whlset.qlin.epsilon (               $RWT_Wheelset                 ) = 1.58100000000000005E+01 ! User contact angle parameter
whlset.result.ref (                 $RWT_Wheelset                 ) = 1                       ! Result rail-wheel force reference system
whlset.qlin.qforce (                $RWT_Wheelset                 ) = 5.00000000000000000E+04 ! Vertical wheel force for quasilinearization

!**********************************************************************
! Rail Wheel Contacts
!**********************************************************************
rwcontact.type (                    $RWC_FASTSIM                  ) = 6                       ! Type
rwcontact.par (           1 ,       $RWC_FASTSIM                  ) = 1.10000000000000000E+01 ! [-] mx,my Initial patch discret.

!**********************************************************************
! Sensors
!**********************************************************************
sensor.from (                       $S_WS                         ) = $M_Isys                 ! From Marker
sensor.to (                         $S_WS                         ) = $M_Wheelset_BRF         ! To Marker

!**********************************************************************
! Result Elements
!**********************************************************************
result.container (                  $RS_RWP_Right                 ) = null                    ! Parent result element
result.type (                       $RS_RWP_Right                 ) = -1                      ! Type
result.desc (             1 ,       $RS_RWP_Right                 ) = '$RWP_Right'            ! Description

result.container (                  $RS_RWP_Right_Pair            ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_Pair            ) = 78                      ! Type
result.desc (             1 ,       $RS_RWP_Right_Pair            ) = 'Pair'                  ! Description
result.par (              1 ,       $RS_RWP_Right_Pair            ) = $RWP_Right              ! [-] Rail-Wheel Pair

result.container (                  $RS_RWP_Right_1               ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_1               ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Right_1               ) = 'Contact 1 '            ! Description
result.par (              1 ,       $RS_RWP_Right_1               ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_1               ) = 1.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_2               ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_2               ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Right_2               ) = 'Contact 2 '            ! Description
result.par (              1 ,       $RS_RWP_Right_2               ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_2               ) = 2.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_3               ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_3               ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Right_3               ) = 'Contact 3 '            ! Description
result.par (              1 ,       $RS_RWP_Right_3               ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_3               ) = 3.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_4               ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_4               ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Right_4               ) = 'Contact 4 '            ! Description
result.par (              1 ,       $RS_RWP_Right_4               ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_4               ) = 4.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_5               ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_5               ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Right_5               ) = 'Contact 5 '            ! Description
result.par (              1 ,       $RS_RWP_Right_5               ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_5               ) = 5.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_1_Adv           ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_1_Adv           ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Right_1_Adv           ) = 'Contact 1 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Right_1_Adv           ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_1_Adv           ) = 1.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_2_Adv           ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_2_Adv           ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Right_2_Adv           ) = 'Contact 2 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Right_2_Adv           ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_2_Adv           ) = 2.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_3_Adv           ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_3_Adv           ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Right_3_Adv           ) = 'Contact 3 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Right_3_Adv           ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_3_Adv           ) = 3.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_4_Adv           ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_4_Adv           ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Right_4_Adv           ) = 'Contact 4 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Right_4_Adv           ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_4_Adv           ) = 4.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Right_5_Adv           ) = $RS_RWP_Right           ! Parent result element
result.type (                       $RS_RWP_Right_5_Adv           ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Right_5_Adv           ) = 'Contact 5 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Right_5_Adv           ) = $RWP_Right              ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Right_5_Adv           ) = 5.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left                  ) = null                    ! Parent result element
result.type (                       $RS_RWP_Left                  ) = -1                      ! Type
result.desc (             1 ,       $RS_RWP_Left                  ) = '$RWP_Left'             ! Description

result.container (                  $RS_RWP_Left_Pair             ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_Pair             ) = 78                      ! Type
result.desc (             1 ,       $RS_RWP_Left_Pair             ) = 'Pair'                  ! Description
result.par (              1 ,       $RS_RWP_Left_Pair             ) = $RWP_Left               ! [-] Rail-Wheel Pair

result.container (                  $RS_RWP_Left_1                ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_1                ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Left_1                ) = 'Contact 1 '            ! Description
result.par (              1 ,       $RS_RWP_Left_1                ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_1                ) = 1.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_2                ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_2                ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Left_2                ) = 'Contact 2 '            ! Description
result.par (              1 ,       $RS_RWP_Left_2                ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_2                ) = 2.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_3                ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_3                ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Left_3                ) = 'Contact 3 '            ! Description
result.par (              1 ,       $RS_RWP_Left_3                ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_3                ) = 3.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_4                ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_4                ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Left_4                ) = 'Contact 4 '            ! Description
result.par (              1 ,       $RS_RWP_Left_4                ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_4                ) = 4.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_5                ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_5                ) = 79                      ! Type
result.desc (             1 ,       $RS_RWP_Left_5                ) = 'Contact 5 '            ! Description
result.par (              1 ,       $RS_RWP_Left_5                ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_5                ) = 5.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_1_Adv            ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_1_Adv            ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Left_1_Adv            ) = 'Contact 1 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Left_1_Adv            ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_1_Adv            ) = 1.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_2_Adv            ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_2_Adv            ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Left_2_Adv            ) = 'Contact 2 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Left_2_Adv            ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_2_Adv            ) = 2.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_3_Adv            ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_3_Adv            ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Left_3_Adv            ) = 'Contact 3 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Left_3_Adv            ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_3_Adv            ) = 3.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_4_Adv            ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_4_Adv            ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Left_4_Adv            ) = 'Contact 4 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Left_4_Adv            ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_4_Adv            ) = 4.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWP_Left_5_Adv            ) = $RS_RWP_Left            ! Parent result element
result.type (                       $RS_RWP_Left_5_Adv            ) = 80                      ! Type
result.desc (             1 ,       $RS_RWP_Left_5_Adv            ) = 'Contact 5 Adv'         ! Description
result.par (              1 ,       $RS_RWP_Left_5_Adv            ) = $RWP_Left               ! [-] Rail-Wheel Pair
result.par (              4 ,       $RS_RWP_Left_5_Adv            ) = 5.00000000000000000E+00 ! [-] Contact patch number

result.container (                  $RS_RWT_Wheelset              ) = null                    ! Parent result element
result.type (                       $RS_RWT_Wheelset              ) = 82                      ! Type
result.desc (             1 ,       $RS_RWT_Wheelset              ) = '$RWT_Wheelset'         ! Description
result.par (              1 ,       $RS_RWT_Wheelset              ) = $RWT_Wheelset           ! [-] Wheelset

                                                                                                                                                                    
